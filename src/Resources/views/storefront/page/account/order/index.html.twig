{% sw_extends '@Storefront/storefront/page/account/order/index.html.twig' %}
{% block page_checkout_confirm_header %}
    {% set transaction = page.order.transactions.elements|first %}
    {% set errorMessage = transaction.id|getNovalnetErrorMessage(page.order.salesChannelId) %}
    {% if errorMessage is not empty %}
		<div
			role="alert"
			class="alert alert-danger alert-has-icon">
			{% sw_icon 'blocked' %}
			<div class="alert-content-container">
				<div class="alert-content" id="novalnet-error">
					{{errorMessage}}
				</div>
			</div>
		</div>
		<h1 class="confirm-main-header">
			{{ "account.completePayment"|trans|sw_sanitize }}
		</h1>
	{% else %}
		{{ parent() }}
	{% endif %}
{% endblock %}


{% block page_checkout_confirm_form_submit %}
	{% set novalnetSettings = context.salesChannel.id|getNovalnetSettings %}

    {% if ( 'NovalnetApplePay' in context.paymentMethod.handlerIdentifier or  'NovalnetGooglePay' in context.paymentMethod.handlerIdentifier ) and page.order is not empty %}
    
		{% if 'NovalnetApplePay' in context.paymentMethod.handlerIdentifier %}
			{% set class = 'nn-apple-pay-button' %}
		{% else %}
			{% set class = 'nn-google-pay-button' %}
		{% endif %}
		
		{% set paymentName = context.paymentMethod.customFields.novalnet_payment_method_name|replace({'novalnet': ""}) %}
		{% set authAmount = ( page.cart.price.totalPrice ? page.cart.price.totalPrice : page.order.price.totalPrice ) * 100 %}
		{% set formName = null|shopVersion >= "6.4" ? "form = confirmOrderForm" : '' %}
		{% set articleData = [] %}
		
		{% for lineItem in page.order.lineItems %}
			{% set articleData = articleData|merge([{ label: lineItem.label ~ " (" ~ lineItem.quantity ~ " x " ~ lineItem.price.unitPrice|currency(context.currency.isoCode) ~ ")", type: 'SUBTOTAL', amount: (lineItem.price.totalPrice * 100)|round }]) %}
		{% endfor %}
		
		{% for delivery in page.order.deliveries %}
			{% set articleData = articleData|merge([{ label: delivery.shippingMethod.name ~ " (" ~ delivery.shippingCosts.quantity ~ " x " ~ delivery.shippingCosts.unitPrice|currency(context.currency.isoCode) ~ ")", type: 'SUBTOTAL', amount: (delivery.shippingCosts.totalPrice * 100)|round }]) %}
		{% endfor %}
		
		<div class="{{ class }}"
			 data-wallet-payments="true"
			 data-page-type="checkoutPage"
			 data-paymentMethodId="{{ context.paymentMethod.id }}"
			 data-success-url="{{ path('frontend.novalnet.successOrder') }}"
			 data-payment-config="{{
					{
					'clientKey': novalnetSettings['NovalnetPayment.settings.clientKey'],
					merchant: {
						'countryCode': context.customer.activeBillingAddress.country.iso,
							'partnerId': 'NovalnetGooglePay' in context.paymentMethod.handlerIdentifier ? novalnetSettings['NovalnetPayment.settings.googlepay.merchantId'] : ''
					},
					transaction: {
						'amount': authAmount|round,
						'currency': context.currency.isoCode,
						'paymentMethod': 'NovalnetApplePay' in context.paymentMethod.handlerIdentifier ? "APPLEPAY" : "GOOGLEPAY",
						'enforce3d': 'NovalnetGooglePay' in context.paymentMethod.handlerIdentifier ? novalnetSettings['NovalnetPayment.settings.googlepay.enforcecc3D']|number_format : '',
						'environment': novalnetSettings["NovalnetPayment.settings." ~ paymentName ~ ".testMode"] ? "SANDBOX" : "LIVE"
					},
					order: {
						'merchantName': novalnetSettings["NovalnetPayment.settings." ~ paymentName ~ ".sellerName"],
						'lineItems': articleData
					},
					custom: {
						'lang': context.context|getLocaleCodeFromContext("true")
					},
					button: {
						'type': novalnetSettings["NovalnetPayment.settings." ~ paymentName ~ ".buttonType"],
						'style': novalnetSettings["NovalnetPayment.settings." ~ paymentName ~ ".buttonTheme"],
						'locale': context.context|getLocaleCodeFromContext("true"),
						'boxSizing': 'NovalnetApplePay' in context.paymentMethod.handlerIdentifier ? 'border-box' : 'fill',
						'dimensions': {
							'height': novalnetSettings["NovalnetPayment.settings." ~ paymentName ~ ".buttonHeight"],
							'cornerRadius': 'NovalnetApplePay' in context.paymentMethod.handlerIdentifier ? novalnetSettings['NovalnetPayment.settings.applepay.buttonRadius'] : ''
						}
					}
				 }|jsonEncode()|escape('html_attr')}}">
		</div>
		<input type="hidden" value="" name="novalnetapplepayFormData[walletToken]" id="novalnetapplepay-wallet-token" {{formName}}>
		<input type="hidden" value="" name="novalnetgooglepayFormData[walletToken]" id="novalnetgooglepay-wallet-token" {{formName}}>
		<input type="hidden" value="" name="novalnetgooglepayFormData[doRedirect]" id="novalnetgooglepay-do-redirect" {{formName}}>
		<input type="hidden" value="{{ null|shopVersion }}" id="nnShopVersion">
    {% else %}
		{{ parent() }}
    {% endif %}
{% endblock %}



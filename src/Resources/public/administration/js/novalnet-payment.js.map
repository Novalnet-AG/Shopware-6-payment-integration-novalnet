{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/components/novalnet-payment-credentials/novalnet-payment-credentials.scss","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/page/novalnet-payment-settings/novalnet-payment-settings.html.twig","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/page/novalnet-payment-settings/index.js","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/components/novalnet-payment-credentials/index.js","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/components/novalnet-payment-credentials/novalnet-payment-credentials.html.twig","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/components/novalnet-payment-settings-icon/index.js","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/components/novalnet-payment-settings-icon/novalnet-payment-settings-icon.html.twig","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/sw-order-detail-base/sw-order.html.twig","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/sw-order-detail-base/index.js","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/sw-order-detail-details/sw-order-detail-details.html.twig","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/sw-order-detail-details/index.js","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/sw-order-create-details/sw-order-create-details.html.twig","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/sw-order-create-details/index.js","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/sw-order-create-base/sw-order-create-base.html.twig","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/sw-order-create-base/index.js","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/novalnet-payment-refund-modal/index.js","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/novalnet-payment-refund-modal/novalnet-payment-refund-modal.html.twig","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/novalnet-payment-manage-transaction-modal/novalnet-payment-manage-transaction-modal.html.twig","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/novalnet-payment-manage-transaction-modal/index.js","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/novalnet-payment-instalment-cancel-modal/novalnet-payment-instalment-cancel-modal.html.twig","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/novalnet-payment-instalment-cancel-modal/index.js","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/novalnet-payment-book-amount-modal/novalnet-payment-book-amount-modal.html.twig","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/novalnet-payment-book-amount-modal/index.js","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/component/sw-order-user-card/sw-order-user-card.html.twig","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/component/sw-order-user-card/index.js","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/component/sw-order-create-details-payment/sw-order-create-details-payment.twig","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/component/sw-order-create-details-payment/index.js","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/component/sw-order-general-info/sw-order-general-info.html.twig","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/component/sw-order-general-info/index.js","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/index.js","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/core/service/api/novalnet-payment-api-credentials.service.js","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/init/api-service.init.js","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/page/novalnet-payment-settings/novalnet-payment-settings.scss","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/sw-order-create-general/index.js","webpack:///./node_modules/vue-style-loader/lib/listToStyles.js","webpack:///./node_modules/vue-style-loader/lib/addStylesClient.js","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/sw-order-detail-details/sw-order-detail-details.scss","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/sw-order-detail-base/sw-order.scss","webpack:////var/www/kalaivani_k/shopware_65/shopware_6573/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/acl/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","content","default","locals","add","_Shopware","Shopware","Component","Mixin","Defaults","Criteria","Context","Data","register","template","mixins","getByName","inject","data","isLoading","isValidating","isSaveSuccessful","isValidateSuccessful","clientIdFilled","clientSecretFilled","config","salesChannels","computed","validateButtonDisabled","this","novalnetConfigRoute","salesChannelRepository","repositoryFactory","created","createdComponent","watch","deep","handler","defaultConfig","$refs","configComponent","allConfigs","null","selectedSalesChannelId","methods","_this","criteria","addFilter","equalsAny","storefrontSalesChannelTypeId","apiSalesChannelTypeId","search","api","then","res","id","translated","$tc","finally","onSave","clientId","getConfigValue","accessKey","undefined","replace","createNotificationError","title","message","checkBackendConfiguration","field","concat","_this2","NovalPaymentApiCredentialsService","validateApiCredentials","response","serverResponse","result","status_code","status_text","tariffResponse","forEach","tariff","merchant","client_key","save","catch","createNotificationSuccess","errorResponse","isTestSuccessful","metaInfo","$createTitle","_Shopware$Utils","Utils","types","icon","props","actualConfigData","type","required","domain","String","tariffOptions","onHoldOptions","completeOptions","shouldDisable","projectMode","apiActivationKey","paymentAccessKey","tariffId","isRequested","showMessage","buttonLoad","NovalnetPaymentCallBackUrl","window","location","protocol","host","pathname","split","join","generalInformation","PaymentConfiguration","onhold","completed","completeStatusId","onHoldStatusId","configData","$emit","set","_objectSpread","_defineProperty","updated","checkTextFieldInheritance","length","checkBoolFieldInheritance","checkNumberFieldInheritance","onCheckApi","event","target","me","onHoldId","completeId","status","autoClose","push","label","test_mode","configureWebhookUrl","productActivationKey","test","Filter","currency","format","override","orderId","paymentDetails","order","orderAmount","isNovalnetPayment","stateMachineState","novalnetComments","orderTotalAmount","orderPaidAmount","orderRefundedAmount","canRefund","refundModalVisible","confirmModalVisible","cancelModalVisible","item","canCaptureVoid","refundableAmount","canInstalmentShow","InstalmentInfo","cancelType","canInstalmentCancel","canInstalmentAllCancel","canInstalmentRemainCancel","instalmentRefundAmount","instalmentRefundModalVisible","canZeroAmountBooking","zeroAmountVisible","payLater","instalmentPayments","onholdStatus","getInstalmentColums","dataIndex","width","visible","orderRepository","orderCriteria","addAssociation","equals","searchResult","first","identifier","orderNumber","isNovalnet","comments","translation","transactions","sort","a","b","Date","createdAt","orderTransaction","customFields","novalnet_comments","setNovalnetPayment","getNovalnetAmount","payment","gatewayStatus","Number","amount","refundedAmount","Math","round","price","totalPrice","shortName","paidAmount","additionalDetails","JSON","parse","includes","paymentType","InstalmentDetails","counter","values","cycleDate","reference","refundAmount","immediate","novalnetPayment","showRefundModal","showConfirmModal","showCancelModal","instalmentRefund","totalAmount","disableInstalmentRefund","acl","can","showInstalmentCancelModal","showInstalmentAllCancelModal","showInstalmentRemainCancelModal","showZeroAmountBlock","closeModals","reloadPaymentDetails","_this3","$nextTick","displayAmount","displayPaidAmount","paymentMethod","last","novalnet_payment_method_name","getNovalnetPaymentMethod","paymentName","distinguishableName","State","ContextSwitchParameters","loaded","iframe","src","paymentformurl","customer","cart","context","cartPrice","salesChannelContext","isCartTokenAvailable","paymentRepository","paymentCriteria","billingaddress","shippingaddress","contextBillingAddress","contextShippingAddress","billingAddressId","defaultBillingAddress","addresses","shippingAddressId","defaultShippingAddress","customerPaymentDetails","isoCode","redirect_url","recaptchaScript","document","createElement","setAttribute","getTime","head","appendChild","addEventListener","querySelector","disabled","onWindowLoad","e","paymentForm","NovalnetPaymentForm","submit","request","initForm","uncheckPayments","showButton","initiate","validationResponse","selectedPayment","selectPaymentData","payment_details","preventDefault","stopImmediatePropagation","getPayment","stringify","paymentValue","displayRounded","rawTotal","orderTotal","reason","disable","closeModal","novalnetRefund","refundPayment","setTimeout","$router","go","confirm","cancel","novalnetOnhold","managePayment","manageEvent","novalnetInstalmentCancel","instalmentCancel","novalnetBookAmount","BookOrderAmount","currentOrder","Boolean","salesChannel","paymentMethodId","billingAddress","shippingAddress","Module","description","snippets","deDE","enGB","routes","index","component","path","meta","parentPath","privilege","detail","redirect","children","credentials","settingsItem","group","to","iconComponent","backgroundEnabled","ApiService","Classes","_ApiService","_inherits","_super","_createSuper","httpClient","loginService","apiEndpoint","arguments","_classCallCheck","getBasicHeaders","post","getApiBasePath","headers","handleResponse","instalmentCycleTid","bookAmount","apiRoute","url","paymentSelected","Application","addServiceProvider","container","initContainer","getContainer","listToStyles","parentId","list","styles","newStyles","part","css","media","sourceMap","parts","hasDocument","DEBUG","Error","stylesInDom","getElementsByTagName","singletonElement","singletonCounter","isProduction","noop","options","ssrIdKey","isOldIE","navigator","userAgent","toLowerCase","addStylesClient","_isProduction","_options","addStylesToDom","newList","mayRemove","domStyle","refs","j","addStyle","createStyleElement","styleElement","obj","update","remove","parentNode","removeChild","styleIndex","applyToSingletonTag","applyToTag","newObj","textStore","replaceText","replacement","filter","styleSheet","cssText","cssNode","createTextNode","childNodes","insertBefore","ssrId","sources","btoa","unescape","encodeURIComponent","firstChild","Service","addPrivilegeMappingEntry","category","parent","roles","viewer","privileges","dependencies","editor","creator","deleter"],"mappings":"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","file":"static/js/novalnet-payment.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/bundles/novalnetpayment/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"DFWG\");\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./novalnet-payment-credentials.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"61be6ccd\", content, true, {});","export default \"{% block novalnet_payment_settings %}\\n    <sw-page class=\\\"novalnet-payment\\\">\\n        {% block novalnet_payment_settings_header %}\\n            <template #smart-bar-header>\\n                <h2>\\n                    {{ $tc('sw-settings.index.title') }}\\n                    <sw-icon name=\\\"regular-chevron-right-xs\\\" small></sw-icon>\\n                    {{ $tc('novalnet-payment.settingForm.title') }}\\n                </h2>\\n            </template>\\n        {% endblock %}\\n        \\n        {% block novalnet_payment_settings_actions %}\\n            <template #smart-bar-actions>\\n\\t\\t\\t\\t{% block novalnet_payment_actions_save %}\\n                    <sw-button-process v-model=\\\"isSaveSuccessful\\\"\\n                                       class=\\\"sw-settings-login-registration__save-action\\\"\\n                                       variant=\\\"primary\\\"\\n                                       :isLoading=\\\"isLoading\\\"\\n                                       :disabled=\\\"isLoading || !acl.can('novalnet_payment.editor')\\\"\\n                                       @click=\\\"onSave\\\">\\n                        {{ $tc('novalnet-payment.settingForm.buttons.save') }}\\n                    </sw-button-process>\\n                {% endblock %}\\n            \\n            </template>\\n        {% endblock %}\\n       \\n        {% block novalnet_payment_content %}\\n\\t\\t\\t\\n\\t\\t\\t<template #content>\\n\\t\\t\\t\\t{% block novalnet_payment_content_card %}\\n\\t\\t\\t\\t\\t<sw-card-view>\\n\\t\\t\\t\\t\\t{% block novalnet_payment_content_sales_channel_config %}\\n\\t\\t\\t\\t\\t\\t\\t<sw-sales-channel-config v-model=\\\"config\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t ref=\\\"configComponent\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t domain=\\\"NovalnetPayment.settings\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t \\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_sales_channelconfig_card %}\\n\\t\\t\\t\\t\\t\\t\\t\\t  <template #select=\\\"{ onInput, selectedSalesChannelId, salesChannel}\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_sales_channelconfig_card_sales_channel %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-container class=\\\"novalnet-sales-channel\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-single-select v-model=\\\"selectedSalesChannelId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tlabelProperty=\\\"translated.name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvalueProperty=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:disabled=\\\"!acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:options=\\\"salesChannel\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t@change=\\\"onInput\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-single-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t\\t  </template>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_config_content_channel_config_cards %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"{ actualConfigData, allConfigs, selectedSalesChannelId }\\\">\\n                                        <div v-if=\\\"actualConfigData\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-tabs>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_credentials_card %}\\n                                                <sw-tabs-item class=\\\"novalnet-payment-configuration-global-config\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:route=\\\"{ name: 'novalnet.payment.detail.credentials', params: { id: $route.params.id, actualConfigData: actualConfigData } }\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :title=\\\"$tc('novalnet-payment.module.globalTitle')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.module.globalTitle') }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-tabs-item>\\n                                            {% endblock %}\\n                                            </sw-tabs>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_configuration_content_view %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<router-view :isLoading=\\\"isLoading\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :key=\\\"$route.params.id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :actualConfigData=\\\"actualConfigData\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :allConfigs=\\\"allConfigs\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :selectedSalesChannelId=\\\"selectedSalesChannelId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</router-view>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t \\n\\t\\t\\t\\t\\t\\t\\t</sw-sales-channel-config>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_loading %}\\n                            <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n                        {% endblock %}\\n                        \\t\\n\\t\\t\\t\\t\\t</sw-card-view>\\n\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t</template>\\n        {% endblock %}   \\n            \\n    </sw-page>\\n{% endblock %}\\n\";","import template from './novalnet-payment-settings.html.twig';\nimport './novalnet-payment-settings.scss';\n\n\nconst { Component, Mixin, Defaults, Context} = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.register('novalnet-payment-settings', {\n    template,\n\n     mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('sw-inline-snippet')\n    ],\n\n    inject: [\n        'repositoryFactory',\n        'NovalPaymentApiCredentialsService',\n        'acl',\n    ],\n\n\n    data() {\n        return {\n            isLoading: false,\n            isValidating: false,\n            isSaveSuccessful: false,\n            isValidateSuccessful: false,\n            clientIdFilled: false,\n            clientSecretFilled: false,\n            config: {},\n            salesChannels: []\n            \n        };\n    },\n\n    computed: {\n\n        validateButtonDisabled() {\n            return this.isLoading || this.isValidating;\n        },\n        \n        novalnetConfigRoute() {\n            return {\n                name: 'novalnet.payment.detail.credentials'\n            };\n        },\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        }\n    },\n    \n    created() {\n        this.createdComponent();\n    },\n    \n     watch: {\n        config: {\n\t\t\tdeep: true,\n            handler() {\n\t\t\t\t\n                const defaultConfig = this.$refs.configComponent.allConfigs.null;\n                const salesChannelId = this.$refs.configComponent.selectedSalesChannelId;\n\n                if (salesChannelId === null) {\n                    this.clientIdFilled = !!this.config['NovalnetPayment.settings.clientId'];\n                } else {\n                    this.clientIdFilled = !!this.config['NovalnetPayment.settings.clientId']\n                        || !!defaultConfig['NovalnetPayment.settings.clientId'];\n                    this.clientSecretFilled = !!this.config['NovalnetPayment.settings.clientSecret'];\n                }\n            \n            },\n            \n        },\n        \n    },\n   \n\tmethods: {\n\tcreatedComponent() {\n            this.isLoading = true;\n            const criteria = new Criteria();\n            criteria.addFilter(Criteria.equalsAny('typeId', [\n                Defaults.storefrontSalesChannelTypeId,\n                Defaults.apiSalesChannelTypeId\n            ]));\n            this.salesChannelRepository.search(criteria, Shopware.Context.api).then(res => {\n                res.add({\n                    id: null,\n                    translated: {\n                        name: this.$tc('sw-sales-channel-switch.labelDefaultOption')\n                    }\n                });\n                this.salesChannels = res;\n            }).finally(() => {\n                this.isLoading = false;\n            });\n        },\n        onSave() {\n\t\t\tthis.isSaveSuccessful = false;\n            this.isLoading = true;\n            \n            const clientId = this.getConfigValue('clientId');\n            const accessKey = this.getConfigValue('accessKey');\n            \n            if(this.getConfigValue('clientId') !== '' && this.getConfigValue('clientId') !== undefined)\n            {\n\t\t\t\tconst clientId = this.getConfigValue('clientId').replace(/\\s/g, \"\");\n\t\t\t}\n\t\t\t\n\t\t\tif(this.getConfigValue('accessKey') !== '' && this.getConfigValue('accessKey') !== undefined)\n            {\n\t\t\t\tconst clientId = this.getConfigValue('accessKey').replace(/\\s/g, \"\");\n\t\t\t}\n            \n\n\t\t\tif (clientId == undefined || clientId == '')\n\t\t\t{\n\t\t\t\tthis.isLoading = false;\n\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleError'),\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.emptyMessage')\n\t\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t} else if(accessKey == undefined || accessKey == '') {\n\n\t\t\t\tthis.isLoading = false;\n\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleError'),\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.emptyAccessKeyMessage')\n\t\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.checkBackendConfiguration();\n\t\t},\t\n\t\t\n       getConfigValue(field) {\n            const defaultConfig = this.$refs.configComponent.allConfigs.null;\n            const salesChannelId = this.$refs.configComponent.selectedSalesChannelId;\n\n            if (salesChannelId === null) {\n                return this.config[`NovalnetPayment.settings.${field}`];\n            }\n\n            return this.config[`NovalnetPayment.settings.${field}`]\n                || defaultConfig[`NovalnetPayment.settings.${field}`];\n        },\n        \n        checkBackendConfiguration() {\n\t\t\tconst me = this;\n\t\t\tconst clientId = this.getConfigValue('clientId').replace(/\\s/g, \"\");\n\t\t\tconst accessKey = this.getConfigValue('accessKey').replace(/\\s/g, \"\");\n\n\t\t\tthis.NovalPaymentApiCredentialsService.validateApiCredentials(clientId, accessKey).then((response) => {\n                this.isLoading = false;\n\n                if(response.serverResponse == undefined || response.serverResponse == '')\n                {\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleError'),\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.apiFailureMessage')\n\t\t\t\t\t});\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n                const status = response.serverResponse.result.status_code;\n                if(status != 100)\n                {\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleError'),\n\t\t\t\t\t\t\tmessage: response.serverResponse.result.status_text\n\t\t\t\t\t});\n\n\t\t\t\t\treturn;\n\t\t\t\t}else\n\t\t\t\t{\n\t\t\t\t\tresponse.tariffResponse.forEach(((tariff) => {\n\t\t\t\t\t\tif(this.config['NovalnetPayment.settings.tariff'] == undefined || this.config['NovalnetPayment.settings.tariff'] == '')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.config['NovalnetPayment.settings.tariff'] = tariff.id;\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\n\t\t\t\t\tthis.config['NovalnetPayment.settings.clientKey']\t= response.serverResponse.merchant.client_key;\n \t\t\t\t\tthis.$refs.configComponent.save().then((res) => {\n\t\t\t\t\t\t\tthis.isSaveSuccessful = true;\n\n\t\t\t\t\t\t\tif (res) {\n\t\t\t\t\t\t\t\tthis.config = res;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}).catch(() => {\n\t\t\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\t});\n\n                    this.createNotificationSuccess({\n                        title: this.$tc('novalnet-payment.settingForm.titleSuccess'),\n                        message: this.$tc('novalnet-payment.settingForm.successMessage')\n                    });\n\n\t\t\t\t\treturn;\n                }\n            }).catch((errorResponse) => {\n                    this.createNotificationError({\n                        title: this.$tc('novalnet-payment.settingForm.titleError'),\n                        message: this.$tc('novalnet-payment.settingForm.errorMessage')\n                    });\n                    this.isLoading = false;\n                    this.isTestSuccessful = false;\n            });\n\t\t},\n\n\t},\n  metaInfo() {\n        return {\n            title: this.$createTitle()\n        };\n    },\n});\n","import template from './novalnet-payment-credentials.html.twig';\nimport './novalnet-payment-credentials.scss';\n\nconst { Component, Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst { object, types } = Shopware.Utils;\n\nComponent.register('novalnet-payment-credentials', {\n    template,\n\n\tmixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('sw-inline-snippet')\n    ],\n\n\tname: 'NovalnetPaymentCredentials',\n\ticon: 'default-action-settings',\n\n\tprops: {\n        actualConfigData: {\n            type: Object,\n            required: true\n        },\n        allConfigs: {\n            type: Object,\n            required: true\n        },\n        selectedSalesChannelId: {\n            required: true\n        },\n        domain: {\n            type: String,\n            required: true,\n            default: ''\n        }\n    },\n\n    data() {\n\t\tconst url = window.location .protocol + \"//\" + window.location.host + window.location.pathname;\n\t\tconst generatedUrl = url.split(\"/admin\").join(\"\");\n        return {\n\t\t\tallConfigs: {},\n\t\t\tconfig: {},\n\t\t\ttariffOptions: [],\n\t\t\tonHoldOptions: [],\n\t\t\tcompleteOptions: [],\n\t\t\tactualConfigData: {},\n\t\t\tshouldDisable: false,\n\t\t\tprojectMode: false,\n\t\t\tapiActivationKey: '',\n\t\t\tpaymentAccessKey: '',\n\t\t\ttariffId: '',\n\t\t\tisLoading: false,\n\t\t\tisRequested : '',\n\t\t\tshowMessage: false,\n\t\t\tbuttonLoad: false,\n\t\t\tNovalnetPaymentCallBackUrl : generatedUrl + \"/novalnet/callback\",\n\t\t\tgeneralInformation: this.$tc('novalnet-payment.module.generalInfo'),\n\t\t\tPaymentConfiguration: this.$tc('novalnet-payment.module.PaymentConfiguration'),\n\t\t\tonhold: 'authorized',\n\t\t\tcompleted: 'paid',\n\t\t\tcompleteStatusId: '',\n\t\t\tonHoldStatusId: ''\n\t\t}\n\t},\n\n\tinject: [\n        'repositoryFactory',\n        'NovalPaymentApiCredentialsService',\n        'systemConfigApiService',\n        'acl',\n    ],\n\n    watch: {\n        actualConfigData: {\n            handler(configData) {\n                if (!configData) {\n                    return;\n                }\n\n                this.$emit('input', configData);\n            },\n            deep: true\n        },\n    },\n\n    computed: {\n        actualConfigData: {\n            get() {\n                return this.allConfigs[this.selectedSalesChannelId];\n            },\n            set(config) {\n                this.allConfigs = {\n                    ...this.allConfigs,\n                    [this.selectedSalesChannelId]: config\n                };\n            }\n        },\n    },\n\n\tcreated() {\n\t\tthis.createdComponent();\n    },\n\n    updated() {\n\t\tthis.createdComponent();\n\t},\n\n    methods: {\n        checkTextFieldInheritance(value) {\n            if (typeof value !== 'string') {\n                return true;\n            }\n\n            return value.length <= 0;\n        },\n\n        checkBoolFieldInheritance(value) {\n            return typeof value !== 'boolean';\n        },\n\n        checkNumberFieldInheritance(value) {\n            return typeof value !== 'int';\n        },\n\t\tonCheckApi() {\n\t\t\tif(event.target.name === 'NovalnetPayment.settings.clientId') {\n\t\t\t\tthis.apiActivationKey = this.actualConfigData['NovalnetPayment.settings.clientId'] = event.target.value;\n\t\t\t} else if(event.target.name === 'NovalnetPayment.settings.accessKey') {\n\t\t\t\tthis.paymentAccessKey = this.actualConfigData['NovalnetPayment.settings.accessKey'] = event.target.value;\n\t\t\t}\n\n\t\t\tif (this.apiActivationKey === '' && this.paymentAccessKey === '')\n\t\t\t{\n\n\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleError'),\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.apiFailureMessage')\n\t\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.isRequested = '';\n\t\t\tthis.showMessage = true;\n\t\t\tthis.createdComponent();\n\t\t},\n        \n        createdComponent() {\n\t\t\tconst me = this;\n\t\t\tif(this.actualConfigData !== undefined && this.isRequested !== this.selectedSalesChannelId)\n\t\t\t{\n\t\t\t\tthis.isRequested\t\t= this.selectedSalesChannelId;\n\t\t\t\tthis.apiActivationKey\t= this.actualConfigData['NovalnetPayment.settings.clientId'] || this.allConfigs.null['NovalnetPayment.settings.clientId'];\n\t\t\t\tthis.paymentAccessKey\t= (this.actualConfigData['NovalnetPayment.settings.accessKey'] || this.allConfigs.null['NovalnetPayment.settings.accessKey']);\n\t\t\t\tthis.onHoldId\t= this.actualConfigData['NovalnetPayment.settings.onHoldStatus'] || this.allConfigs.null['NovalnetPayment.settings.onHoldStatus'];\n\t\t\t\tthis.completeId\t= (this.actualConfigData['NovalnetPayment.settings.completeStatus'] || this.allConfigs.null['NovalnetPayment.settings.completeStatus']);\n\t\t\t\t\n\t\t\t\tif(this.onHoldStatusId === undefined || this.onHoldStatusId === '')\n\t\t\t\t{\n\t\t\t\t\tthis.onHoldStatusId = 'authorized';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(this.completeStatusId === undefined || this.completeStatusId === '')\n\t\t\t\t{\n\t\t\t\t\tthis.completeStatusId = 'paid';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(this.apiActivationKey !== undefined && this.apiActivationKey !== '' && this.paymentAccessKey !== undefined && this.paymentAccessKey !== '' )\n\t\t\t\t{\n                    this.apiActivationKey = this.apiActivationKey.replace(/\\s/g, \"\");\n                    this.paymentAccessKey = this.paymentAccessKey.replace(/\\s/g, \"\");\n\t\t\t\t\tthis.isLoading = true;\n\t\t\t\t\tthis.NovalPaymentApiCredentialsService.validateApiCredentials(this.apiActivationKey, this.paymentAccessKey).then((response) => {\n\t\t\t\t\t\tconst status = response.serverResponse.result.status_code;\n\t\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\t\tif(status !== 100)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(this.showMessage === true)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleError'),\n\t\t\t\t\t\t\t\t\tmessage: response.serverResponse.result.status_text,\n\t\t\t\t\t\t\t\t\tautoClose: true\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.showMessage = false;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tme.tariffOptions = [];\n\t\t\t\t\t\t\tresponse.tariffResponse.forEach(((tariff) => {\n\n\t\t\t\t\t\t\t\tthis.actualConfigData['NovalnetPayment.settings.clientKey']\t= response.serverResponse.merchant.client_key;\n\n\t\t\t\t\t\t\t\tme.tariffOptions.push({\n\t\t\t\t\t\t\t\t\tvalue: tariff.id,\n\t\t\t\t\t\t\t\t\tlabel: tariff.name\n\t\t\t\t\t\t\t\t});\n\n                                if(this.tariffId === undefined || this.tariffId === '')\n                                {\n                                    this.tariffId = tariff.id;\n                                }\n\n\t\t\t\t\t\t\t\tif(this.showMessage === true)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleSuccess'),\n\t\t\t\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.successMessage'),\n\t\t\t\t\t\t\t\t\t\tautoClose: true\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthis.showMessage = false;\n\t\t\t\t\t\t\t\tif(response.serverResponse.merchant.test_mode === 1)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.projectMode = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}));\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}).catch((errorResponse) => {\n\t\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.onHoldOptions = [\n\t\t\t\t{\n                    value: 'open',\n                    label: this.$tc('novalnet-payment.onhold.open')\n                },\n                {\n                    value: 'process',\n                    label: this.$tc('novalnet-payment.onhold.process')\n                },\n                {\n                    value: 'authorized',\n                    label: this.$tc('novalnet-payment.onhold.authorized')\n                },\n                {\n                    value: 'cancel',\n                    label: this.$tc('novalnet-payment.onhold.cancel')\n                },\n                {\n                    value: 'failed',\n                    label: this.$tc('novalnet-payment.onhold.failed')\n                }]; \n                \n                this.completeOptions = [\n                \n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: 'paid',\n\t\t\t\t\t\tlabel: this.$tc('novalnet-payment.onhold.paid')\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: 'paidPartially',\n\t\t\t\t\t\tlabel: this.$tc('novalnet-payment.onhold.paidPartially')\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: 'cancel',\n\t\t\t\t\t\tlabel: this.$tc('novalnet-payment.onhold.cancel')\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: 'failed',\n\t\t\t\t\t\tlabel: this.$tc('novalnet-payment.onhold.failed')\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t},\n\t\t\n\t\tconfigureWebhookUrl() {\n\t\t\tconst productActivationKey\t= this.apiActivationKey || this.actualConfigData['NovalnetPayment.settings.clientKey'];\n\t\t\tconst accessKey\t\t\t\t= this.paymentAccessKey || this.actualConfigData['NovalnetPayment.settings.accessKey'];\n\n\t\t\tif ( productActivationKey === undefined || productActivationKey === '' || accessKey === undefined || accessKey === '')\n\t\t\t{\n\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleError'),\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.apiFailureMessage')\n\t\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif( this.NovalnetPaymentCallBackUrl)\n\t\t\t{\n\t\t\t\tif (/^(http|https):\\/\\/[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,}(:[0-9]{1,5})?(\\/.*)?$/i.test(this.NovalnetPaymentCallBackUrl) === false)\n\t\t\t\t{\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.webhookUrlFailure')\n\t\t\t\t\t});\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tthis.buttonLoad = true;\n\n\t\t\t\tthis.NovalPaymentApiCredentialsService.configureWebhookUrl(this.NovalnetPaymentCallBackUrl, productActivationKey, accessKey).then((response) => {\n\n\t\t\t\t\t\tif(response.result.status !== undefined && response.result.status != null && response.result.status !== '' && response.result.status === 'SUCCESS')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.webhookUrlSuccess')\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else if(response.result.status_text !== undefined && response.result.status_text != null && response.result.status_text !== '') {\n\t\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\t\tmessage: response.result.status_text,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.webhookUrlFailure')\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\tthis.buttonLoad = false;\n\n\t\t\t\t}).catch((errorResponse) => {\n\t\t\t\t\tthis.buttonLoad = false;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n        \n    }\n\n});\n","export default \"{% block novalnet_payment_content_card_channel_config_credentials %}\\n<sw-card-view style=\\\"position: relative;\\\">\\n\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet-payment-settings-fields\\\">\\n\\t\\t<sw-card class=\\\"sw-card--grid\\\"\\n\\t\\t\\t\\t :title=\\\"$tc('novalnet-payment.settingForm.credentials.cardTitle')\\\">\\n\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_credentials_card_container %}\\n\\t\\t\\t\\t<sw-container>\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_credentials_card_container_settings %}\\n\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t<sw-alert v-if=\\\"projectMode\\\" variant=\\\"info\\\" appearance=\\\"default\\\" :showIcon=\\\"true\\\" :closable=\\\"false\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.module.projectInfo') }}\\n\\t\\t\\t\\t\\t\\t</sw-alert>\\n\\n\\t\\t\\t\\t\\t\\t<div v-html=\\\"generalInformation\\\" class=\\\"novalnet_payment-settings-project\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div v-html=\\\"PaymentConfiguration\\\" class=\\\"novalnet_payment-settings-project\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<br>\\n\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_credentials_card_container_settings_client_id %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.clientId']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.clientId']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.clientId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"apiActivationKey == null ? props.currentValue : apiActivationKey\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.credentials.activationKey.label') | raw \\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.credentials.activationKey.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"!acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"onCheckApi\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.accessKey']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.accessKey']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.accessKey\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"paymentAccessKey == null ? props.currentValue : paymentAccessKey\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   autocomplete=\\\"off\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.credentials.accessKey.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.credentials.accessKey.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"!acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"onCheckApi\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_credentials_card_container_settings_break %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_credentials_card_container_settings_client_secret %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.clientKey']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.clientKey']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.clientKey\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   v-show=\\\"shouldDisable\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"!acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.tariff']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.tariff']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-single-select name=\\\"NovalnetPayment.settings.tariff\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :v-model=\\\"tariffId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :options=\\\"tariffOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :label=\\\"$tc('novalnet-payment.settingForm.credentials.tariff.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :helpText=\\\"$tc('novalnet-payment.settingForm.credentials.tariff.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :disabled=\\\"!acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-single-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.emailMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.emailMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.emailMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.credentials.orderEmailMode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.credentials.orderEmailMode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"!acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.onHoldStatus']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.onHoldStatus']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-single-select name=\\\"NovalnetPayment.settings.onHoldStatus\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t                  :v-model = \\\"onHoldStatusId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :options=\\\"onHoldOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :label=\\\"$tc('novalnet-payment.settingForm.credentials.onHold.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :helpText=\\\"$tc('novalnet-payment.settingForm.credentials.onHold.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :placeholder=\\\"$tc('novalnet-payment.onhold.select')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :value=\\\"props.currentValue != null ? props.currentValue : onhold\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :disabled=\\\"!acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-single-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.completeStatus']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.completeStatus']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-single-select name=\\\"NovalnetPayment.settings.completeStatus\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t                  :v-model = \\\"completeStatusId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :options=\\\"completeOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :label=\\\"$tc('novalnet-payment.settingForm.credentials.complete.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :placeholder=\\\"$tc('novalnet-payment.onhold.select')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :helpText=\\\"$tc('novalnet-payment.settingForm.credentials.complete.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :value=\\\"props.currentValue != null ? props.currentValue : completed\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :disabled=\\\"!acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-single-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_loading %}\\n                        <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n                    {% endblock %}\\n\\n\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n\\t{% block novalnet_payment_content_card_channel_config_merchant_credentials %}\\n\\t\\t<sw-card class=\\\"sw-card--grid\\\"\\n\\t\\t\\t\\t :title=\\\"$tc('novalnet-payment.settingForm.merchantSettings.cardTitle')\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_merchant_credentials_card_container %}\\n\\t\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_merchant_credentials_card_container_settings %}\\n\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-merchant-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_merchant_credentials_card_container_settings_ip %}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.callbackUrl']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.callbackUrl']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.callbackUrl\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   v-model=\\\"NovalnetPaymentCallBackUrl\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   class=\\\"novalnet-payment-callback-field\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.merchantSettings.callbackUrl.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.merchantSettings.callbackUrl.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-button-process :disabled=\\\"false\\\" :isLoading=\\\"buttonLoad\\\" @click=\\\"configureWebhookUrl()\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.merchantSettings.callbackUrl.button') }}\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-button-process>\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.deactivateIp']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.deactivateIp']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.deactivateIp\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :label=\\\"$tc('novalnet-payment.settingForm.merchantSettings.deactivateIp.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :helpText=\\\"$tc('novalnet-payment.settingForm.merchantSettings.deactivateIp.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.mailTo']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.mailTo']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.mailTo\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.merchantSettings.mailTo.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.merchantSettings.mailTo.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t</div>\\n</sw-card-view>\\n{% endblock %}\\n\";","import template from './novalnet-payment-settings-icon.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.register('novalnet-payment-settings-icon', {\n    template\n});\n","export default \"{% block novalnet_payment_settings_icon %}\\n    <img class=\\\"sw-settings-index__novalnet-payment-icon\\\" :src=\\\"'novalnetpayment/administration/plugin.png' | asset\\\">\\n{% endblock %}\\n\";","export default \"{% block sw_order_detail_customer_comment_card %}\\n\\t{% parent %}\\n\\t<template v-if=\\\"!isLoading\\\" :isLoading=\\\"isLoading\\\">\\n        <template v-if=\\\"isNovalnetPayment\\\">\\n\\t\\t\\t<sw-card :title=\\\"$tc('novalnet-payment.module.title')\\\" rows=\\\"2\\\"  :isLoading=\\\"isLoading\\\"  >\\n\\t\\t\\t\\t<sw-container columns=\\\"1fr 1fr\\\" class=\\\"novalnet-payment-order-page\\\" >\\n\\t\\t\\t\\t\\t<div class = \\\"novalnet-payment-buyer-notification\\\">\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_notification_details_info %}\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-buyer-notification-icon-container\\\" align=\\\"center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<img class=\\\"novalnet-payment-buyer-info-icon\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t:src=\\\"'novalnetpayment/static/img/plugin.png' | asset\\\">\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_buyer_info_name_container %}\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-buyer-info-name\\\" >\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_buyer_info_name_container_name %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div  class=\\\"novalnet-payment-buyer-info-full-name\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ order.orderCustomer.firstName }} {{ order.orderCustomer.lastName }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_buyer_info_name_container_email %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div  class=\\\"novalnet-payment-buyer-info-email\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ order.orderCustomer.email }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<sw-container class=\\\"novalnet-payment-amount-info\\\" rows=\\\"4\\\" columns=\\\"1fr\\\">\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_component_amount_info %}\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-amount-info-total-amount\\\" align=\\\"right\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ orderTotalAmount }}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_component_amount_info_card %}\\n\\t\\t\\t\\t\\t\\t\\t<sw-card :isLoading=\\\"isLoading\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t:hero=\\\"true\\\" class=\\\"novalnet-payment-amount-info-amount\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_amount_info_captured_amount %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-amount-captured-amount\\\" align=\\\"right\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_amount_info_captured_amount %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t+ {{ orderPaidAmount }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_amount_info_captured_amount_help %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-help-text class=\\\"novalnet-payment-captured-amount-help-icon\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttooltipPosition=\\\"top\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:text=\\\"$tc('novalnet-payment.settingForm.extension.paidTooltip')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-help-text>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_compoenent_amount_info_refuned %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-refuned-amount\\\" align=\\\"right\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_compoenent_amount_info_refuned_amount %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t- {{ orderRefundedAmount }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_compoenent_amount_info_refuned_help %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-help-text class=\\\"novalnet-payment-refuned-amount-help-icon\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttooltipPosition=\\\"top\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:text=\\\"$tc('novalnet-payment.settingForm.extension.refundTooltip')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-help-text>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</sw-card>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_info_date %}\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-amount-info-charge-date\\\" align=\\\"right\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t {{ transaction.createdAt|date('d.m.y') }} \\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\t \\t\\t \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t \\n\\t\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<sw-container class=\\\"novalnet-payment-action-toolbar\\\" rows=\\\"1\\\" columns=\\\"1fr 1fr 1fr\\\" gap=\\\"10px\\\">\\n\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_container_toolbar_refund_button %}\\n\\t\\t\\t\\t\\t\\t\\t<sw-button size=\\\"small\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tv-if=\\\"canRefund\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t:disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t@click=\\\"showRefundModal\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.refundButton') }}\\n\\t\\t\\t\\t\\t\\t\\t</sw-button>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_container_toolbar_capture_button %}\\n\\t\\t\\t\\t\\t\\t\\t<sw-button size=\\\"small\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   v-if=\\\"canCaptureVoid\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   @click=\\\"showConfirmModal\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.confirmLabel') }}\\n\\t\\t\\t\\t\\t\\t\\t</sw-button>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_container_toolbar_cancel_button %}\\n\\t\\t\\t\\t\\t\\t\\t<sw-button size=\\\"small\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   v-if=\\\"canCaptureVoid\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   @click=\\\"showCancelModal\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.cancelLabel') }}\\n\\t\\t\\t\\t\\t\\t\\t</sw-button>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_container_toolbar_instalment_cancel_button %}\\n                            <sw-button size=\\\"small\\\"\\n                                       class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n                                       v-if=\\\"canInstalmentCancel\\\"\\n                                       :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n                                       @click=\\\"showInstalmentCancelModal\\\">\\n                                {{ $tc('novalnet-payment.settingForm.extension.instalmentCancelLabel') }}\\n                            </sw-button>\\n                        {% endblock %}\\n               \\n                        {% block novalnet_payment_order_container_toolbar_instalment_all_cancel_button %}\\n                            <sw-button size=\\\"small\\\"\\n                                       class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n                                       v-if=\\\"canInstalmentAllCancel\\\"\\n                                       :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n                                       @click=\\\"showInstalmentAllCancelModal\\\">\\n                                {{ $tc('novalnet-payment.settingForm.extension.instalmentAllCancelLabel') }}\\n                            </sw-button>\\n                        {% endblock %}\\n                        \\n                        {% block novalnet_payment_order_container_toolbar_instalment_remain_cancel_button %}\\n                            <sw-button size=\\\"small\\\"\\n                                       class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n                                       v-if=\\\"canInstalmentRemainCancel\\\"\\n                                       :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n                                       @click=\\\"showInstalmentRemainCancelModal\\\">\\n                                {{ $tc('novalnet-payment.settingForm.extension.instalmentRemainCancelLabel') }}\\n                            </sw-button>\\n                        {% endblock %}\\n                        \\n                        {% block novalnet_payment_order_container_toolbar_zero_amount_button %}\\n\\t\\t\\t\\t\\t\\t\\t<sw-button size=\\\"small\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   v-if=\\\"canZeroAmountBooking\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   @click=\\\"showZeroAmountBlock\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.zeroAmountButton') }}\\n\\t\\t\\t\\t\\t\\t\\t</sw-button>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t\\t</sw-container>\\n        \\n\\t\\t\\t\\t<sw-container columns=\\\"1fr\\\"\\n                    class=\\\"sw-card-section sw-card-section--secondary\\\"\\n                    slot=\\\"grid\\\">\\n                    \\n\\t\\t\\t\\t\\t<sw-container class=\\\"novalnet-payment-pay-info-container\\\" columns=\\\"1fr 1fr\\\" rows=\\\"2\\\">\\n\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_component_checkout_info_billing_container %}\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment_chechout-info-billing_container\\\" v-if=\\\"isNovalnetPayment\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_component_checkout_info_billing_container_headline %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-checkout-info-header\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.module.comments') }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_component_billing_value %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"novalnet-payment-checkout-info-comments\\\" v-html=\\\"novalnetComments\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_componenet_checkout_info_status_container %}\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-status-container\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_component_status_container %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-checkout-info-header\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.statusTitle') }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_component_checkout_status_info_container_value %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-checkout-status-info\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ stateMachineState }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_component_action_toolbar_modals %}\\n\\t\\t\\t\\t\\t\\t\\t<novalnet-payment-refund-modal\\n\\t\\t\\t\\t\\t\\t\\t\\tv-if=\\\"refundModalVisible\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t:refundableAmount=\\\"refundableAmount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t:order=\\\"order\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t:item=\\\"item\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t@modal-close=\\\"closeModals\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t@reload-payment=\\\"reloadPaymentDetails\\\">\\n\\t\\t\\t\\t\\t\\t\\t</novalnet-payment-refund-modal>\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<novalnet-payment-manage-transaction-modal\\n\\t\\t\\t\\t\\t\\t\\t\\tv-if=\\\"confirmModalVisible\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t:status=\\\"status\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t:order=\\\"order\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t@modal-close=\\\"closeModals\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t@reload-payment=\\\"reloadPaymentDetails\\\">\\n\\t\\t\\t\\t\\t\\t\\t</novalnet-payment-manage-transaction-modal>\\n\\n\\t\\t\\t\\t\\t\\t\\t<novalnet-payment-manage-transaction-modal\\n\\t\\t\\t\\t\\t\\t\\t\\tv-if=\\\"cancelModalVisible\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t:status=\\\"status\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t:order=\\\"order\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t@modal-close=\\\"closeModals\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t@reload-payment=\\\"reloadPaymentDetails\\\">\\n\\t\\t\\t\\t\\t\\t\\t</novalnet-payment-manage-transaction-modal>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<novalnet-payment-instalment-cancel-modal\\n\\t\\t\\t\\t\\t\\t\\t\\tv-if=\\\"instalmentRefundModalVisible\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t:item=\\\"item\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t:cancelType=\\\"cancelType\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t:order=\\\"order\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t@modal-close=\\\"closeModals\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t@reload-payment=\\\"reloadPaymentDetails\\\">\\n\\t\\t\\t\\t\\t\\t\\t</novalnet-payment-instalment-cancel-modal>\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<novalnet-payment-book-amount-modal\\n\\t\\t\\t\\t\\t\\t\\t\\tv-if=\\\"zeroAmountVisible\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t:orderAmount=\\\"orderAmount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t:order=\\\"order\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t@modal-close=\\\"closeModals\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t@reload-payment=\\\"reloadPaymentDetails\\\">\\n\\t\\t\\t\\t\\t\\t\\t</novalnet-payment-book-amount-modal>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t\\t</sw-card>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-card :title=\\\"$tc('novalnet-payment.settingForm.instalmentInfo')\\\" v-if=\\\"canInstalmentShow\\\">\\n\\t\\t\\t\\t\\t<template #grid>\\n\\t\\t\\t\\t\\t\\t<sw-data-grid\\n\\t\\t\\t\\t\\t\\t\\t:dataSource=\\\"InstalmentInfo\\\"\\n\\t\\t\\t\\t\\t\\t\\t:columns=\\\"getInstalmentColums\\\"\\n\\t\\t\\t\\t\\t\\t\\t:compactMode=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t:allowInlineEdit=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t:showSelection=\\\"false\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t{% block sw_product_detail_base_actions %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<template #actions=\\\"{ item }\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{% block sw_product_detail_base_actions_edit %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-context-menu-item\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"sw-product-detail-base__review-edit\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t@click=\\\"instalmentRefund(item)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:disabled=\\\"disableInstalmentRefund(item)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.refundButton') }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-context-menu-item>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\n\\t\\t\\t\\t\\t\\t</sw-data-grid>\\n\\t\\t\\t\\t\\t</template>\\n            </sw-card>\\n\\t\\t\\t\\n        \\n        </template>\\n    </template>\\n\\n{% endblock %}\\n\";","import template from './sw-order.html.twig';\nimport './sw-order.scss';\n\nconst { Component, Mixin, Filter, Context } = Shopware;\nconst Criteria = Shopware.Data.Criteria;\nconst { currency } = Shopware.Utils.format;\n\nComponent.override('sw-order-detail-base', {\n    template,\n    \n    inject: [\n        'NovalPaymentApiCredentialsService',\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification')\n    ],\n\n    props: {\n        orderId: {\n            type: String,\n            required: true\n        },\n        paymentDetails: {\n            type: Object,\n            required: true\n        },\n    },\n    \n    \n    data() {\n        return {\n            isLoading: false,\n            order: {},\n            orderAmount : 0,\n            isNovalnetPayment: false,\n            stateMachineState : null,\n            novalnetComments : '',\n            orderTotalAmount : '',\n            orderPaidAmount: 0,\n            orderRefundedAmount: 0,\n            canRefund : false,\n            refundModalVisible : false,\n            confirmModalVisible: false,\n            cancelModalVisible: false,\n            item: {},\n            status: 0,\n            canCaptureVoid: false,\n            refundableAmount : 0,\n            canInstalmentShow: false,\n            InstalmentInfo: [],\n            cancelType : '',\n            canInstalmentCancel: false,\n            canInstalmentAllCancel: false,\n            canInstalmentRemainCancel: false,\n            instalmentRefundAmount : 0,\n            instalmentRefundModalVisible: false,\n            canZeroAmountBooking: false,\n            zeroAmountVisible:false,\n            payLater: [\n\t\t\t\t'INVOICE',\n\t\t\t\t'CASHPAYMENT',\n\t\t\t\t'MULTIBANCO',\n\t\t\t\t'PREPAYMENT'\n\t\t\t],\n            instalmentPayments: [\n\t\t\t\t'INSTALMENT_INVOICE',\n\t\t\t\t'INSTALMENT_DIRECT_DEBIT_SEPA'\n\t\t\t],\n            onholdStatus: ['91', '99', '98', '85']\n            \n           \n        };\n    },\n    \n    computed: {\n\n\t\tgetInstalmentColums() {\n\t\t\tconst columnDefinitions = [{\n                property: 'number',\n                dataIndex: 'number',\n                label: this.$tc('novalnet-payment.settingForm.instalmentNumber'),\n                width: '50px'\n            }, \n            {\n                property: 'reference',\n                dataIndex: 'reference',\n                label: this.$tc('novalnet-payment.settingForm.instalmentReference'),\n                width: '120px'\n            },\n            {\n                property: 'amount',\n                dataIndex: 'amount',\n                label: this.$tc('novalnet-payment.settingForm.instalmentAmount'),\n                width: '80px'\n            },{\n                property: 'totalAmount',\n                dataIndex: 'totalAmount',\n                visible: false\n            },\n             {\n                property: 'refundAmount',\n                dataIndex: 'refundAmount',\n                visible: false\n            },\n            {\n                property: 'nextCycle',\n                dataIndex: 'nextCycle',\n                label: this.$tc('novalnet-payment.settingForm.instalmentDate'),\n                width: '120px'\n            },   {\n                property: 'status',\n                dataIndex: 'status',\n                label: this.$tc('novalnet-payment.settingForm.instalmentStatus'),\n                width: '80px'\n            }];\n\n            return columnDefinitions;\n\t\t}\n\t},\n\n    \n    watch: {\n\t\torderId: {\n\t\t\tdeep: true,\n\t\t\thandler(){\n\t\t\t\t\n\t\t\t\tif(!this.orderId){\n\t\t\t\t\tthis.setNovalnetPayment(null);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst orderRepository = this.repositoryFactory.create('order');\n\t\t\t\tconst orderCriteria = new Criteria(1, 1);\n\t\t\t\torderCriteria.addAssociation('transactions');\n\t\t\t\torderCriteria.addAssociation('currency');\n\t\t\t\torderCriteria.addFilter(Criteria.equals('id', this.orderId));\n\t\t\t\t\n\t\t\t\torderRepository.search(orderCriteria, Context.api).then((searchResult) => {\n\t\t\t\t\tconst order = searchResult.first();\n\t\t\t\t\tif(!order){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (!this.identifier) {\n\t\t\t\t\t\tthis.identifier = order.orderNumber;\n\t\t\t\t\t}\n\t\t\t\t\tlet isNovalnet  =   false;\n\t\t\t\t\tlet comments    =   '';\n\t\t\t\t\tlet translation = this.$tc('novalnet-payment.module.comments');\n\t\t\t\t\t\n\t\t\t\t\torder.transactions.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt) ).forEach((orderTransaction) => {\n\t\t\t\t\t\tif (orderTransaction.customFields &&\n\t\t\t\t\t\t\torderTransaction.customFields.novalnet_comments\n\t\t\t\t\t\t) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.stateMachineState = orderTransaction.stateMachineState.name;\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tisNovalnet  = true;\n\t\t\t\t\t\t\tif(comments !=''){\n\t\t\t\t\t\t\t\tcomments  += \"<dt>\" + translation + \"</dt>\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcomments += orderTransaction.customFields.novalnet_comments.split(\"/ \").join(\"<br />\");\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tif( isNovalnet ) {\n\t\t\t\t\t\tthis.novalnetComments  = comments.split(\"&&\").join(\"<dt><strong>\" + translation + \"</strong></dt>\");\n\t\t\t\t\t\tthis.setNovalnetPayment( true );\n\t\t\t\t\t\tthis.isNovalnetPayment =  true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.setNovalnetPayment(false);\n\t\t\t\t\t\tthis.isNovalnetPayment =  false;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.canRefund = false; this.canCaptureVoid = false; this.canInstalmentShow = false; this.InstalmentInfo = []; this.canInstalmentCancel = false; this.canZeroAmountBooking = false; this.canInstalmentAllCancel = false; this.canInstalmentRemainCancel = false;\n\t\t\t\t\t\n\t\t\t\t\tthis.NovalPaymentApiCredentialsService.getNovalnetAmount(order.orderNumber).then((payment) => {\n\n\t\t\t\t\t\tif(payment.data != '' && payment.data != undefined)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(payment.data.gatewayStatus) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tthis.refundableAmount = Number(payment.data.amount) - Number(payment.data.refundedAmount);\n\t\t\t\t\t\t\t\tthis.orderAmount      = Math.round(Number(order.price.totalPrice) * 100);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif ( payment.data.amount != 0) {\n\t\t\t\t\t\t\t\t\tthis.orderTotalAmount = currency (payment.data.amount / 100, order.currency.shortName);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.orderTotalAmount = currency (order.price.totalPrice, order.currency.shortName);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (payment.data.paidAmount != 0) {\n\t\t\t\t\t\t\t\t\tthis.orderPaidAmount = currency (payment.data.paidAmount / 100, order.currency.shortName);\n\t\t\t\t\t\t\t\t} else {                   \n\t\t\t\t\t\t\t\t\tthis.orderPaidAmount = currency (0, order.currency.shortName);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (payment.data.refundedAmount != 0) {\n\t\t\t\t\t\t\t\t\tthis.orderRefundedAmount = currency (payment.data.refundedAmount / 100, order.currency.shortName);\n\t\t\t\t\t\t\t\t} else {                \n\t\t\t\t\t\t\t\t\tthis.orderRefundedAmount = currency (0, order.currency.shortName);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tlet additionalDetails = JSON.parse(payment.data.additionalDetails);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif(((payment.data.amount > 0 && payment.data.gatewayStatus == 'CONFIRMED' && !this.instalmentPayments.includes(payment.data.paymentType) && Number(payment.data.refundedAmount) < Number(payment.data.amount)) || (payment.data.gatewayStatus == 'PENDING' && this.payLater.includes(payment.data.paymentType))) && payment.data.paymentType != 'MULTIBANCO'  ) \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.canRefund = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if(payment.data.gatewayStatus == 'ON_HOLD' || this.onholdStatus.includes(payment.data.gatewayStatus) ) \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.canCaptureVoid = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (this.instalmentPayments.includes(payment.data.paymentType) && payment.data.gatewayStatus == 'CONFIRMED' && !additionalDetails.cancelType)\n                                {\n                                    this.canInstalmentCancel = true;\n                                }\n                                else if (((payment.data.paymentType == 'CREDITCARD') || (payment.data.paymentType == 'DIRECT_DEBIT_SEPA') || (payment.data.paymentType == 'GOOGLEPAY') || (payment.data.paymentType == 'DIRECT_DEBIT_ACH')) && Number(payment.data.amount) == 0 && this.orderAmount != 0)\n                                {\n\t\t\t\t\t\t\t\t\tthis.canZeroAmountBooking = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif( payment.data.gatewayStatus == 'CONFIRMED' && this.instalmentPayments.includes(payment.data.paymentType) && additionalDetails.InstalmentDetails != '' ) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tthis.canInstalmentShow = true;\n\t\t\t\t\t\t\t\t\tthis.instalmentRefundAmount = payment.data.refundedAmount;\n\t\t\t\t\t\t\t\t\tvar counter = 1;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tObject.values(additionalDetails.InstalmentDetails).forEach(values => {\n\t\t\t\t\t\t\t\t\t\tthis.InstalmentInfo.push({\n\t\t\t\t\t\t\t\t\t\t\t'nextCycle': values.cycleDate,\n\t\t\t\t\t\t\t\t\t\t\t'amount': currency (values.amount / 100, order.currency.shortName),\n\t\t\t\t\t\t\t\t\t\t\t'reference': values.reference,\n\t\t\t\t\t\t\t\t\t\t\t'status': values.status,\n\t\t\t\t\t\t\t\t\t\t\t'totalAmount': values.amount,\n\t\t\t\t\t\t\t\t\t\t\t'refundAmount': values.refundAmount,\n\t\t\t\t\t\t\t\t\t\t\t'number': counter\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif(payment.data.refundedAmount != 0){\n\t\t\t\t\t\t\t\t\t\tthis.canInstalmentCancel = false;\n\t\t\t\t\t\t\t\t\t\tthis.canInstalmentAllCancel = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (this.InstalmentInfo != undefined && this.InstalmentInfo != null) {\n\t\t\t\t\t\t\t\t\t\tthis.InstalmentInfo.forEach(value => {\n\t\t\t\t\t\t\t\t\t\t\tif(value['reference'] == '' || value['reference'] == null)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.canInstalmentRemainCancel = true;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif(additionalDetails.cancelType != undefined && additionalDetails.cancelType !=''){\n\t\t\t\t\t\t\t\t\t\tthis.canInstalmentRemainCancel = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif(this.canInstalmentRemainCancel == false && payment.data.refundedAmount == 0 ){\n\t\t\t\t\t\t\t\t\t\tthis.canInstalmentCancel = false;\n\t\t\t\t\t\t\t\t\t\tthis.canInstalmentAllCancel = true;\n\t\t\t\t\t\t\t\t\t} else if(this.canInstalmentCancel == true){\n\t\t\t\t\t\t\t\t\t\tthis.canInstalmentRemainCancel = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t}).finally(() => {\n\t\t\t\t\tthis.setNovalnetPayment(false);\n\t\t\t\t});\n\t\t\t },\n            immediate: true\n        }\n    },\n\t\t\t\n\tmethods: {\n\n        setNovalnetPayment( novalnetPayment ) {\n            if( novalnetPayment ) {\n                this.isNovalnetPayment = novalnetPayment;\n            }\n        },\n        \n        showRefundModal(){\n\t\t\t\n\t\t\tthis.refundModalVisible = true;\n        },\n        \n        showConfirmModal() {\n\t\t\tthis.status = 100;\n            this.confirmModalVisible = true;\n        },\n\n        showCancelModal() {\n\t\t\tthis.status = 103;\n            this.cancelModalVisible = true;\n        },\n        \n        instalmentRefund(item) {\n\t\t\tthis.refundableAmount = item.totalAmount - item.refundAmount;\n\t\t\tthis.item = item;\n\t\t\tthis.refundModalVisible = true;\n\t\t},\n\t\t\n\t\tdisableInstalmentRefund(item) {\n\t\t\tif( item.reference == undefined || item.reference == ''  || item.refundAmount >= item.totalAmount || !this.acl.can('novalnet_extension.editor'))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\n\t\t\treturn false;\n\t\t},\n\t\t\n\t\tshowInstalmentCancelModal() {\n\t\t\tif (this.InstalmentInfo != undefined && this.InstalmentInfo != null)\n            {\n                this.InstalmentInfo.forEach(value => {\n                    if(value['reference'] == '' || value['reference'] == null)\n                    {\n                        this.canInstalmentRemainCancel = true;\n                    }\n                });\n            }\n            if(this.instalmentRefundAmount == 0){\n\t\t\t\tthis.canInstalmentAllCancel = true;\n\t\t\t}\n            this.canInstalmentCancel = false;\n        },\n        \n        showInstalmentAllCancelModal() {\n\t\t\tthis.instalmentRefundModalVisible = true;\n\t\t\tthis.cancelType = 'CANCEL_ALL_CYCLES';\n        },\n        \n        showInstalmentRemainCancelModal(){\n\t\t\tthis.instalmentRefundModalVisible = true;\n\t\t\tthis.cancelType = 'CANCEL_REMAINING_CYCLES';\n        },\n        \n        showZeroAmountBlock() {\n            this.zeroAmountVisible = true;\n        },\n        \n        closeModals() {\n\t\t\tthis.refundModalVisible = false;\n\t\t\tthis.confirmModalVisible = false;\n\t\t\tthis.cancelModalVisible = false;\n\t\t\tthis.instalmentRefundModalVisible = false;\n\t\t\tthis.zeroAmountVisible = false;\n\t\t},\n\t\t\n\t\treloadPaymentDetails() {\n\t\t\tthis.closeModals();\n\t\t\tthis.$nextTick().then(() => {\n\t\t\t\tthis.$emit('reload-payment');\n\t\t\t});\n\t\t}\n    }\t\n    \n});\n","export default \"{% block sw_order_detail_details_payment %}\\n\\t\\n\\t\\n\\t<sw-order-details-state-card\\n        v-if=\\\"transaction\\\"\\n        :title=\\\"$tc('sw-order.detailsTab.labelTransactionCard')\\\"\\n        :order=\\\"order\\\"\\n        :entity=\\\"transaction\\\"\\n        :state-label=\\\"$tc('sw-order.stateCard.headlineTransactionState')\\\"\\n        :disabled=\\\"!acl.can('order.editor')\\\"\\n        @show-status-history=\\\"showStateHistoryModal = true\\\"\\n        @save-edits=\\\"onSaveEdits\\\"\\n    >\\n\\n        \\n        {% block sw_order_detail_details_payment_billing_address %}\\n        <sw-order-address-selection\\n            class=\\\"sw-order-detail-details__billing-address\\\"\\n            type=\\\"billing\\\"\\n            :address=\\\"billingAddress\\\"\\n            :address-id=\\\"selectedBillingAddressId\\\"\\n            :disabled=\\\"!acl.can('order.editor')\\\"\\n            :label=\\\"$tc('sw-order.createBase.detailsBody.labelBillingAddress')\\\"\\n            @change-address=\\\"onChangeOrderAddress\\\"\\n        />\\n        {% endblock %}\\n\\n        \\n        {% block sw_order_detail_details_payment_method_select %}\\n        \\n\\t\\t\\t{% if paymentMethod !='' %}\\n\\t\\t\\t\\t<sw-text-field type=\\\"text\\\"\\n\\t\\t\\t\\t\\t:label=\\\"$tc('sw-order.createBase.detailsFooter.labelPaymentMethod')\\\" \\n\\t\\t\\t\\t\\t:placeholder=\\\"$tc('sw-order.createBase.detailsFooter.placeholderPaymentMethod')\\\"\\n\\t\\t\\t\\t\\t:disabled=\\\"true\\\"\\n\\t\\t\\t\\t\\tv-model=\\\"paymentMethod\\\"\\n\\t\\t\\t\\t\\t> \\n\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t{% else %}\\n\\t\\t\\t\\t<sw-entity-single-select\\n\\t\\t\\t\\tv-model=\\\"transaction.paymentMethodId\\\"\\n\\t\\t\\t\\tentity=\\\"payment_method\\\"\\n\\t\\t\\t\\tlabel-property=\\\"distinguishableName\\\"\\n\\t\\t\\t\\tdisabled\\n\\t\\t\\t\\t:criteria=\\\"paymentMethodCriteria\\\"\\n\\t\\t\\t\\t:label=\\\"$tc('sw-order.createBase.detailsFooter.labelPaymentMethod')\\\"\\n\\t\\t\\t\\t:placeholder=\\\"$tc('sw-order.createBase.detailsFooter.placeholderPaymentMethod')\\\"\\n\\t\\t\\t\\tshow-clearable-button\\n\\t\\t\\t\\t/>\\n\\t\\t\\t{% endif %}\\t\\n        \\n        {% endblock %}\\n\\n    </sw-order-details-state-card>\\n   \\n\\t\\n\\t{% block sw_order_detail_details_payment_novalnet_seaction %}\\n\\t\\t<template v-if=\\\"isNovalnetPayment\\\">\\n\\t\\t\\t<sw-order-details-state-card\\n\\t\\t\\t\\tv-if=\\\"transaction\\\"\\n\\t\\t\\t\\t:title=\\\"$tc('novalnet-payment.module.title')\\\"\\n\\t\\t\\t\\t:order=\\\"order\\\"\\n\\t\\t\\t\\t:entity=\\\"transaction\\\"\\n\\t\\t\\t\\t:state-label=\\\"$tc('sw-order.stateCard.headlineTransactionState')\\\"\\n\\t\\t\\t\\t:disabled=\\\"!acl.can('order.editor')\\\"\\n\\t\\t\\t\\t@show-status-history=\\\"showStateHistoryModal = true\\\"\\n\\t\\t\\t\\t@save-edits=\\\"onSaveEdits\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"novalnet-payment-buyer-notification\\\">\\n\\t\\t\\t\\t\\t{# Logo #}\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_buyer_info %}\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-buyer-notification-icon-container\\\" align=\\\"center\\\">\\n\\t\\t\\t\\t\\t\\t\\t<img class=\\\"novalnet-payment-buyer-info-icon\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t :src=\\\"'novalnetpayment/static/img/plugin.png' | asset\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t{# Full name and E-Mail address #}\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_buyer_info_name_container %}\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-buyer-info-name\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_buyer_info_name_container_name %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-buyer-info-full-name\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ order.orderCustomer.firstName }} {{ order.orderCustomer.lastName }}\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_buyer_info_name_container_email %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-buyer-info-email\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ order.orderCustomer.email }}\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-container class=\\\"novalnet-payment-amount-info\\\" columns=\\\"1fr\\\">\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_component_amount_info %}\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-amount-info-total-amount\\\" align=\\\"right\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ displayAmount }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t{% block novalnet_payment_amount_info_captured_amount %}\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-amount-captured-amount\\\" align=\\\"right\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_amount_info_captured_amount %}\\n\\t\\t\\t\\t\\t\\t\\t\\t+ {{ displayPaidAmount }}\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_amount_info_captured_amount_help %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-help-text class=\\\"novalnet-payment-captured-amount-help-icon\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  tooltipPosition=\\\"top\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :text=\\\"$tc('novalnet-payment.settingForm.extension.paidTooltip')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-help-text>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_compoenent_amount_info_refuned %}\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-refuned-amount\\\" align=\\\"right\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_compoenent_amount_info_refuned_amount %}\\n\\t\\t\\t\\t\\t\\t\\t\\t- {{ refundedAmount }}\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_compoenent_amount_info_refuned_help %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-help-text class=\\\"novalnet-payment-refuned-amount-help-icon\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  tooltipPosition=\\\"top\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :text=\\\"$tc('novalnet-payment.settingForm.extension.refundTooltip')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-help-text>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_info_date %}\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-amount-info-charge-date\\\" align=\\\"right\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ transaction.createdAt|date('d.m.y') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-container class=\\\"novalnet-payment-action-toolbar\\\" rows=\\\"1\\\" columns=\\\"1fr 1fr 1fr\\\" gap=\\\"10px\\\">\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_container_toolbar_refund_button %}\\n\\t\\t\\t\\t\\t\\t<sw-button size=\\\"small\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   v-if=\\\"canRefund\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   @click=\\\"showRefundModal\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.refundButton') }}\\n\\t\\t\\t\\t\\t\\t</sw-button>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\n                    {% block novalnet_payment_order_container_toolbar_instalment_cancel_button %}\\n                        <sw-button size=\\\"small\\\"\\n                                   class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n                                   v-if=\\\"canInstalmentCancel\\\"\\n                                   :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n                                   @click=\\\"showInstalmentCancelModal\\\">\\n                            {{ $tc('novalnet-payment.settingForm.extension.instalmentCancelLabel') }}\\n                        </sw-button>\\n                    {% endblock %}\\n               \\n                    {% block novalnet_payment_order_container_toolbar_instalment_all_cancel_button %}\\n                        <sw-button size=\\\"small\\\"\\n                                   class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n                                   v-if=\\\"canInstalmentAllCancel\\\"\\n                                   :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n                                   @click=\\\"showInstalmentAllCancelModal\\\">\\n                            {{ $tc('novalnet-payment.settingForm.extension.instalmentAllCancelLabel') }}\\n                        </sw-button>\\n                    {% endblock %}\\n                    \\n                    {% block novalnet_payment_order_container_toolbar_instalment_remain_cancel_button %}\\n                        <sw-button size=\\\"small\\\"\\n                                   class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n                                   v-if=\\\"canInstalmentRemainCancel\\\"\\n                                   :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n                                   @click=\\\"showInstalmentRemainCancelModal\\\">\\n                            {{ $tc('novalnet-payment.settingForm.extension.instalmentRemainCancelLabel') }}\\n                        </sw-button>\\n                    {% endblock %}\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_container_toolbar_capture_button %}\\n\\t\\t\\t\\t\\t\\t<sw-button size=\\\"small\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   v-if=\\\"canCaptureVoid\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   @click=\\\"showConfirmModal\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.confirmLabel') }}\\n\\t\\t\\t\\t\\t\\t</sw-button>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_container_toolbar_cancel_button %}\\n\\t\\t\\t\\t\\t\\t<sw-button size=\\\"small\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   v-if=\\\"canCaptureVoid\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   @click=\\\"showCancelModal\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.cancelLabel') }}\\n\\t\\t\\t\\t\\t\\t</sw-button>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_container_toolbar_zero_amount_button %}\\n\\t\\t\\t\\t\\t\\t<sw-button size=\\\"small\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   v-if=\\\"canZeroAmountBooking\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   @click=\\\"showZeroAmountBlock\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.zeroAmountButton') }}\\n\\t\\t\\t\\t\\t\\t</sw-button>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-container class=\\\"novalnet-payment-pay-empty-container\\\" columns=\\\"1fr\\\">\\n\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-container class=\\\"novalnet-payment-pay-info-container\\\" columns=\\\"1fr\\\">\\n\\t\\t\\t\\t\\t<hr class=\\\"sw-order-detail-state-card__divider\\\">\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_component_checkout_info_billing_container %}\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment_chechout-info-customer-comments\\\" v-if=\\\"isNovalnetPayment\\\" >\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_component_checkout_info_billing_container_headline %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-checkout-info-header\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.module.comments') }}\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_component_billing_value %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"novalnet-payment-checkout-info-comments\\\" v-html=\\\"novalnetComments\\\" style=\\\"line-height:22px;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t{% block novalnet_payment_order_component_action_toolbar_modals %}\\n\\t\\t\\t\\t\\t<novalnet-payment-refund-modal\\n\\t\\t\\t\\t\\t\\tv-if=\\\"refundModalVisible\\\"\\n\\t\\t\\t\\t\\t\\t:refundableAmount=\\\"refundableAmount\\\"\\n\\t\\t\\t\\t\\t\\t:order=\\\"order\\\"\\n\\t\\t\\t\\t\\t\\t:item=\\\"item\\\"\\n\\t\\t\\t\\t\\t\\t@modal-close=\\\"closeModals\\\"\\n\\t\\t\\t\\t\\t\\t@reload-payment=\\\"reloadPaymentDetails\\\">\\n\\t\\t\\t\\t\\t</novalnet-payment-refund-modal>\\n\\n\\t\\t\\t\\t\\t<novalnet-payment-instalment-cancel-modal\\n\\t\\t\\t\\t\\t\\tv-if=\\\"instalmentRefundModalVisible\\\"\\n\\t\\t\\t\\t\\t\\t:item=\\\"item\\\"\\n\\t\\t\\t\\t\\t\\t:cancelType=\\\"cancelType\\\"\\n\\t\\t\\t\\t\\t\\t:order=\\\"order\\\"\\n\\t\\t\\t\\t\\t\\t@modal-close=\\\"closeModals\\\"\\n\\t\\t\\t\\t\\t\\t@reload-payment=\\\"reloadPaymentDetails\\\">\\n\\t\\t\\t\\t\\t</novalnet-payment-instalment-cancel-modal>\\n\\n\\t\\t\\t\\t\\t<novalnet-payment-manage-transaction-modal\\n\\t\\t\\t\\t\\t\\tv-if=\\\"confirmModalVisible\\\"\\n\\t\\t\\t\\t\\t\\t:status=\\\"status\\\"\\n\\t\\t\\t\\t\\t\\t:order=\\\"order\\\"\\n\\t\\t\\t\\t\\t\\t@modal-close=\\\"closeModals\\\"\\n\\t\\t\\t\\t\\t\\t@reload-payment=\\\"reloadPaymentDetails\\\">\\n\\t\\t\\t\\t\\t</novalnet-payment-manage-transaction-modal>\\n\\n\\t\\t\\t\\t\\t<novalnet-payment-manage-transaction-modal\\n\\t\\t\\t\\t\\t\\tv-if=\\\"cancelModalVisible\\\"\\n\\t\\t\\t\\t\\t\\t:status=\\\"status\\\"\\n\\t\\t\\t\\t\\t\\t:order=\\\"order\\\"\\n\\t\\t\\t\\t\\t\\t@modal-close=\\\"closeModals\\\"\\n\\t\\t\\t\\t\\t\\t@reload-payment=\\\"reloadPaymentDetails\\\">\\n\\t\\t\\t\\t\\t</novalnet-payment-manage-transaction-modal>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<novalnet-payment-book-amount-modal\\n\\t\\t\\t\\t\\t\\tv-if=\\\"zeroAmountVisible\\\"\\n\\t\\t\\t\\t\\t\\t:orderAmount=\\\"orderAmount\\\"\\n\\t\\t\\t\\t\\t\\t:order=\\\"order\\\"\\n\\t\\t\\t\\t\\t\\t@modal-close=\\\"closeModals\\\"\\n\\t\\t\\t\\t\\t\\t@reload-payment=\\\"reloadPaymentDetails\\\">\\n\\t\\t\\t\\t\\t</novalnet-payment-book-amount-modal>\\n\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t</sw-order-details-state-card>\\n\\t\\t\\t\\n\\t\\t\\t<sw-card :title=\\\"$tc('novalnet-payment.settingForm.instalmentInfo')\\\" v-if=\\\"canInstalmentShow\\\">\\n\\t\\t\\t\\t\\t<template #grid>\\n\\t\\t\\t\\t\\t\\t<sw-data-grid\\n\\t\\t\\t\\t\\t\\t\\t:dataSource=\\\"InstalmentInfo\\\"\\n\\t\\t\\t\\t\\t\\t\\t:columns=\\\"getInstalmentColums\\\"\\n\\t\\t\\t\\t\\t\\t\\t:compactMode=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t:allowInlineEdit=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t\\t:showSelection=\\\"false\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t{% block sw_product_detail_base_ratings_actions %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<template #actions=\\\"{ item }\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{% block sw_product_detail_base_ratings_actions_edit %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-context-menu-item\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"sw-product-detail-base__review-edit\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t@click=\\\"instalmentRefund(item)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:disabled=\\\"disableInstalmentRefund(item)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.refundButton') }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-context-menu-item>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t</sw-data-grid>\\n\\t\\t\\t\\t\\t</template>\\n            </sw-card>\\n\\t\\t</template>\\n\\t\\t\\n\\t{% endblock %}\\n{% endblock %}\\n\";","import template from './sw-order-detail-details.html.twig';\nimport './sw-order-detail-details.scss';\n\nconst { Context, Component, Filter, Utils } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst { currency } = Shopware.Utils.format;\n\nComponent.override('sw-order-detail-details', {\n    template,\n    \n    inject: [\n        'NovalPaymentApiCredentialsService',\n        'repositoryFactory',\n        'acl',\n    ],\n    \n    mixins: ['notification'],\n    \n    props: {\n        orderId: {\n            type: String,\n            required: true\n        },\n        paymentDetails: {\n            type: Object,\n            required: true\n        },\n    },\n    \n    data() {\n        return {\n\t\t\tstatus: 0,\n\t\t\tdisplayAmount: 0,\n\t\t\tdisplayPaidAmount: 0,\n\t\t\trefundedAmount: 0,\n\t\t\torderAmount : 0,\n\t\t\tInstalmentInfo: [],\n\t\t\titem: {},\n\t\t\tnovalnetComments: '',\n\t\t\tisNovalnetPayment: false,\n\t\t\trefundModalVisible: false,\n\t\t\tconfirmModalVisible: false,\n\t\t\tzeroAmountVisible: false,\n\t\t\tcancelModalVisible: false,\n\t\t\tcanInstalmentAllCancel: false,\n\t\t\tcanInstalmentRemainCancel: false,\n\t\t\tinstalmentRefundModalVisible: false,\n\t\t\tinstalmentRefundAmount : 0,\n\t\t\tpaymentMethod: '',\n\t\t\tpayLater: [\n                'INVOICE',\n\t\t\t\t'CASHPAYMENT',\n\t\t\t\t'MULTIBANCO',\n\t\t\t\t'PREPAYMENT'\n            ],\n            instalmentPayments: [\n                'INSTALMENT_INVOICE',\n\t\t\t\t'INSTALMENT_DIRECT_DEBIT_SEPA'\n            ],\n            onholdStatus: ['91', '99', '98', '85']\n\t\t}\n\t},\n    \n    computed: {\n\n        getInstalmentColums() {\n            const columnDefinitions = [{\n                property: 'number',\n                dataIndex: 'number',\n                label: this.$tc('novalnet-payment.settingForm.instalmentNumber'),\n                width: '50px'\n            }, \n            {\n                property: 'reference',\n                dataIndex: 'reference',\n                label: this.$tc('novalnet-payment.settingForm.instalmentReference'),\n                width: '120px'\n            },\n            {\n                property: 'amount',\n                dataIndex: 'amount',\n                label: this.$tc('novalnet-payment.settingForm.instalmentAmount'),\n                width: '80px'\n            }, {\n                property: 'totalAmount',\n                dataIndex: 'totalAmount',\n                visible: false\n            },\n             {\n                property: 'refundAmount',\n                dataIndex: 'refundAmount',\n                visible: false\n            },{\n                property: 'nextCycle',\n                dataIndex: 'nextCycle',\n                label: this.$tc('novalnet-payment.settingForm.instalmentDate'),\n                width: '120px'\n            },  {\n                property: 'status',\n                dataIndex: 'status',\n                label: this.$tc('novalnet-payment.settingForm.instalmentStatus'),\n                width: '80px'\n            }];\n\n            return columnDefinitions;\n        }\n    },\n\t\n\twatch: {\n        orderId: {\n            deep: true,\n            handler() {\n                if (!this.orderId) {\n                    this.setNovalnetPayment(false);\n                    return;\n                }\n\n                const orderRepository = this.repositoryFactory.create('order');\n                const orderCriteria = new Criteria(1, 1);\n                orderCriteria.addAssociation('transactions');\n                orderCriteria.addAssociation('currency');\n\n                orderCriteria.addFilter(Criteria.equals('id', this.orderId));\n\n                orderRepository.search(orderCriteria, Context.api).then((searchResult) => {\n                  const order = searchResult.first();\n\n                 if (!order) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.identifier) {\n\t\t\t\t\t\tthis.identifier = order.orderNumber;\n\t\t\t\t\t}\n\t\t\t\t\tlet isNovalnet  =   false;\n\t\t\t\t\tlet comments    =   '';\n\t\t\t\t\tlet translation = this.$tc('novalnet-payment.module.comments');\n\n\t\t\t\t\torder.transactions.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt) ).forEach((orderTransaction) => {\n\t\t\t\t\t\tif (orderTransaction.customFields &&\n\t\t\t\t\t\t\torderTransaction.customFields.novalnet_comments\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.stateMachineState = orderTransaction.stateMachineState.name;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tisNovalnet  = true;\n\t\t\t\t\t\t\tif(comments != '')\n                            {\n\t\t\t\t\t\t\t\tcomments  += \"<dt>\" + translation + \"</dt>\";\n\t\t\t\t\t\t\t}\n                            comments   += orderTransaction.customFields.novalnet_comments.split(\"/ \").join(\"<br />\");\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tif( isNovalnet ) {\n\t\t\t\t\t\tthis.novalnetComments  = comments.split(\"&&\").join(\"<dt><strong>\" + translation + \"</strong></dt>\");\n\t\t\t\t\t\tthis.setNovalnetPayment(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.setNovalnetPayment(false);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.order.transactions.last().paymentMethod.customFields != null && this.order.transactions.last().paymentMethod.customFields.novalnet_payment_method_name != undefined && this.order.transactions.last().paymentMethod.customFields.novalnet_payment_method_name == \"novalnetpay\") {\n\n\t\t\t\t\t\tthis.NovalPaymentApiCredentialsService.getNovalnetPaymentMethod(this.order.orderNumber).then((payment) => {\n\t\t\t\t\t\t\t\tif(payment != undefined && payment != null)\n\t\t\t\t\t\t\t\t{\t\n\t\t\t\t\t\t\t\t\tif(payment.paymentName != undefined && payment.paymentName != null){\n\t\t\t\t\t\t\t\t\t\tthis.paymentMethod = payment.paymentName;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tthis.paymentMethod = this.order.transactions.last().paymentMethod.translated.distinguishableName;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tthis.paymentMethod = this.order.transactions.last().paymentMethod.translated.distinguishableName;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}).catch((errorResponse) => {\n\t\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\t\tmessage: `${errorResponse.title}: ${errorResponse.message}`\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t\n\t\t\t\t\tthis.paymentMethod = this.order.transactions.last().paymentMethod.translated.distinguishableName;\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tthis.canCaptureVoid = false;this.canRefund = false;this.canZeroAmountBooking = false;this.canInstalmentCancel = false;this.canInstalmentShow = false;this.InstalmentInfo = []; this.canInstalmentAllCancel = false; this.canInstalmentRemainCancel = false;\n\t\t\t\t\t\n\t\t\t\t\tthis.NovalPaymentApiCredentialsService.getNovalnetAmount(order.orderNumber).then((payment) => {\n\t\t\t\t\t\tif(payment.data != '' && payment.data != undefined)\n\t\t\t\t\t\t{ \n\t\t\t\t\t\t\tif(payment.data.gatewayStatus) {\n\t\t\t\t\t\t\t\tlet additionalDetails = JSON.parse(payment.data.additionalDetails);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tthis.refundableAmount = Number(payment.data.amount) - Number(payment.data.refundedAmount);\n\t\t\t\t\t\t\t\tthis.orderAmount      = Math.round(Number(order.price.totalPrice) * 100);\n\n\t\t\t\t\t\t\t\tif(payment.data.gatewayStatus == 'ON_HOLD' || this.onholdStatus.includes(payment.data.gatewayStatus)) \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.canCaptureVoid = true;\n\t\t\t\t\t\t\t\t} else if (((payment.data.amount > 0 && payment.data.gatewayStatus == 'CONFIRMED' && !this.instalmentPayments.includes(payment.data.paymentType) && Number(payment.data.refundedAmount) < Number(payment.data.amount)) || (payment.data.gatewayStatus == 'PENDING' && this.payLater.includes(payment.data.paymentType))) && payment.data.paymentType != 'MULTIBANCO'  ) \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.canRefund = true;\n\t\t\t\t\t\t\t\t} else if (this.instalmentPayments.includes(payment.data.paymentType) && payment.data.gatewayStatus == 'CONFIRMED' && !additionalDetails.cancelType)\n                                {\n                                    this.canInstalmentCancel = true;\n                                    \n                                } else if (((payment.data.paymentType == 'CREDITCARD') || (payment.data.paymentType == 'DIRECT_DEBIT_SEPA') || (payment.data.paymentType == 'GOOGLEPAY') || (payment.data.paymentType == 'APPLEPAY') || (payment.data.paymentType == 'DIRECT_DEBIT_ACH')) && Number(payment.data.amount) == 0 && this.orderAmount != 0 && payment.data.gatewayStatus !='FAILURE')\n                                {\n\t\t\t\t\t\t\t\t\tthis.canZeroAmountBooking = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif ( payment.data.amount != 0) {\n\t\t\t\t\t\t\t\t\tthis.displayAmount = currency (payment.data.amount / 100, order.currency.shortName);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.displayAmount = currency (order.price.totalPrice, order.currency.shortName);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (payment.data.paidAmount != 0) {\n\t\t\t\t\t\t\t\t\tthis.displayPaidAmount = currency (payment.data.paidAmount / 100, order.currency.shortName);\n\t\t\t\t\t\t\t\t} else {                   \n\t\t\t\t\t\t\t\t\tthis.displayPaidAmount = currency (0, order.currency.shortName);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (payment.data.refundedAmount != 0) {\n\t\t\t\t\t\t\t\t\tthis.refundedAmount = currency (payment.data.refundedAmount / 100, order.currency.shortName);\n\t\t\t\t\t\t\t\t} else {                \n\t\t\t\t\t\t\t\t\tthis.refundedAmount = currency (0, order.currency.shortName);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif( (this.instalmentPayments.includes(payment.data.paymentType)) && payment.data.gatewayStatus == 'CONFIRMED'  && additionalDetails.InstalmentDetails != '')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.canInstalmentShow = true;\n\t\t\t\t\t\t\t\t\tthis.instalmentRefundAmount = payment.data.refundedAmount;\n\t\t\t\t\t\t\t\t\tvar counter = 1;\n\n\t\t\t\t\t\t\t\t\tObject.values(additionalDetails.InstalmentDetails).forEach(values => {\n\t\t\t\t\t\t\t\t\t    this.InstalmentInfo.push ({\n\t\t\t\t\t\t\t\t\t\t\t'amount': currency (values.amount / 100, order.currency.shortName),\n\t\t\t\t\t\t\t\t\t\t\t'totalAmount': values.amount,\n\t\t\t\t\t\t\t\t\t\t\t'nextCycle': values.cycleDate,\n\t\t\t\t\t\t\t\t\t\t\t'reference': values.reference,\n\t\t\t\t\t\t\t\t\t\t\t'status': values.status,\n\t\t\t\t\t\t\t\t\t\t\t'refundAmount': values.refundAmount,\n\t\t\t\t\t\t\t\t\t\t\t'number': counter\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif(payment.data.refundedAmount != 0){\n\t\t\t\t\t\t\t\t\t\tthis.canInstalmentCancel = false;\n\t\t\t\t\t\t\t\t\t\tthis.canInstalmentAllCancel = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (this.InstalmentInfo != undefined && this.InstalmentInfo != null)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tthis.InstalmentInfo.forEach(value => {\n\t\t\t\t\t\t\t\t\t\t\tif(value['reference'] == '' || value['reference'] == null)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.canInstalmentRemainCancel = true;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif(additionalDetails.cancelType != undefined && additionalDetails.cancelType !=''){\n\t\t\t\t\t\t\t\t\t\tthis.canInstalmentRemainCancel = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif(this.canInstalmentRemainCancel == false && payment.data.refundedAmount == 0 ){\n\t\t\t\t\t\t\t\t\t\tthis.canInstalmentCancel = false;\n\t\t\t\t\t\t\t\t\t\tthis.canInstalmentAllCancel = true;\n\t\t\t\t\t\t\t\t\t} else if(this.canInstalmentCancel == true){\n\t\t\t\t\t\t\t\t\t\tthis.canInstalmentRemainCancel = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}).catch((errorResponse) => {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: `${errorResponse.title}: ${errorResponse.message}`\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t}).finally(() => {\n\t\t\t\t\tthis.setNovalnetPayment(false);\n\t\t\t\t});\n            },\n            immediate: true\n        }\n    },\n    \n    methods: {\n\t\tsetNovalnetPayment( novalnetPayment ) {\n            if( novalnetPayment ) {\n                this.isNovalnetPayment = novalnetPayment;\n            }\n        },\n        \n        showConfirmModal() {\n            this.status = 100;\n            this.confirmModalVisible = true;\n        },\n        \n        showRefundModal() {\n            this.refundModalVisible = true;\n        },\n        \n        closeModals() {\n\t\t\tthis.refundModalVisible = false;\n\t\t\tthis.confirmModalVisible = false;\n\t\t\tthis.cancelModalVisible = false;\n\t\t\tthis.zeroAmountVisible = false;\n\t\t\tthis.instalmentRefundModalVisible = false;\n\t\t},\n\t\t\n\t\tshowInstalmentAllCancelModal() {\n\t\t\tthis.instalmentRefundModalVisible = true;\n\t\t\tthis.cancelType = 'CANCEL_ALL_CYCLES';\n        },\n        \n        showInstalmentRemainCancelModal(){\n\t\t\tthis.instalmentRefundModalVisible = true;\n\t\t\tthis.cancelType = 'CANCEL_REMAINING_CYCLES';\n        },\n        \n        showCancelModal() {\n            this.status = 103;\n            this.cancelModalVisible = true;\n        },\n        \n        showZeroAmountBlock() {\n            this.zeroAmountVisible = true;\n        },\n        \n        reloadPaymentDetails() {\n\t\t\tthis.closeModals();\n\t\t\t// Wait for the next tick to trigger the reload. Otherwise the Modal won't be hidden correctly.\n\t\t\tthis.$nextTick().then(() => {\n\t\t\t\tthis.$emit('reload-payment');\n\t\t\t});\n\t\t},\n\n\t\tinstalmentRefund(item) {\n\t\t\tthis.refundableAmount = item.totalAmount - item.refundAmount;\n\t\t\tthis.item = item;\n\t\t\tthis.refundModalVisible = true;\n\t\t},\n\t\t\n\t\tshowInstalmentCancelModal() {\n            if (this.InstalmentInfo != undefined && this.InstalmentInfo != null)\n            {\n                this.InstalmentInfo.forEach(value => {\n                    if(value['reference'] == '' || value['reference'] == null)\n                    {\n                        this.canInstalmentRemainCancel = true;\n                    }\n                });\n            }\n            \n            if(this.instalmentRefundAmount == 0){\n\t\t\t\tthis.canInstalmentAllCancel = true;\n\t\t\t}\n            this.canInstalmentCancel = false;\n        },\n        \n        disableInstalmentRefund(item) {\n            if( item.reference == undefined || item.reference == ''  || item.refundAmount >= item.totalAmount || !this.acl.can('novalnet_extension.editor'))\n            {\n                return true;\n            }\n    \n            return false;\n        }\n\t}\n});\n","export default \"{% block sw_order_create_details_payment %}\\n\\n\\t{% parent %}\\n\\t{% block sw_order_create_details_payment_novalnet_seaction %}\\n\\t\\t<template v-if=\\\"novalnetPayment\\\" >\\n\\t\\t\\t<sw-card\\n\\t\\t\\t\\trows=\\\"2\\\"  :isLoading=\\\"isLoading\\\"\\n\\t\\t\\t\\t:title=\\\"$tc('novalnet-payment.module.title')\\\" >\\n\\t\\t\\t\\t<div >\\n\\t\\t\\t\\t\\t<iframe \\n\\t\\t\\t\\t\\t\\tv-if=\\\"loaded\\\"\\n\\t\\t\\t\\t\\t\\tid =\\\"adminnovalnetPaymentiframe\\\"\\n\\t\\t\\t\\t\\t\\twidth=\\\"100%\\\"\\n\\t\\t\\t\\t\\t\\tframeborder=\\\"0\\\"\\n\\t\\t\\t\\t\\t  :src=\\\"iframe.src\\\"></iframe>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t</sw-card>\\t\\n\\t\\t\\n\\t\\t</template>\\n\\t\\t\\n\\t{% endblock %}\\n{% endblock %}\\n\";","import template from './sw-order-create-details.html.twig';\n\nconst { Component, State, Mixin, Filter, Context, ContextSwitchParameters} = Shopware;\nconst Criteria = Shopware.Data.Criteria;\nconst { currency } = Shopware.Utils.format;\n\nComponent.override('sw-order-create-details', {\n    template,\n\n    inject: [\n        'NovalPaymentApiCredentialsService',\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification')\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n            loaded : false,\n            shouldDisable : true,\n            iframe: {\n                src: ''\n            },\n            paymentformurl : '',\n            novalnetPayment : false\n        };\n    },\n\n    computed: {\n        customer() {\n            return State.get('swOrder').customer;\n        },\n        cart() {\n            return State.get('swOrder').cart;\n        },\n        currency(){\n            return State.get('swOrder').context.currency;\n        },\n        cartPrice() {\n            return this.cart.price;\n        },\n        salesChannelContext(){\n            return State.get('swOrder').context;\n        },\n    },\n\n    watch: {\n        salesChannelContext: {\n            deep: true,\n            handler() {\n                if (!this.customer || !this.isCartTokenAvailable) {\n                    return;\n                }\n\n                this.isLoading = true;\n                const paymentRepository = this.repositoryFactory.create('payment_method');\n                const paymentCriteria = new Criteria(1, 1);\n                paymentCriteria.addFilter(Criteria.equals('id', this.salesChannelContext.paymentMethod.id));\n                paymentRepository.search(paymentCriteria, Context.api).then((searchResult) => {\n                    const payment = searchResult.first();\n                    if (!payment) {\n                        return\n                    }\n\n                    this.novalnetPayment = false;\n                    if ((payment.customFields != null) && (payment.customFields.novalnet_payment_method_name  == 'novalnetpay')) {\n                        if (this.currency == null) {\n                            this.createNotificationError({\n                                title: this.$tc('novalnet-payment.settingForm.titleError'),\n                                message: this.$tc('novalnet-payment.settingForm.currencyFailureMessage')\n                            });\n\n                            return;\n                        }\n\n                        if (this.cartPrice != null &&  (this.cartPrice.totalPrice == 0 || this.cartPrice.totalPrice == null)) {\n                            this.createNotificationError({\n                                title: this.$tc('novalnet-payment.settingForm.titleError'),\n                                message: this.$tc('novalnet-payment.settingForm.lineitemFailureMessage')\n                            });\n\n                            return;\n                        }\n\n                        this.novalnetPayment = true;\n                        let billingaddress = '';\n                        let shippingaddress = '';\n                        let contextBillingAddress = '';\n                        let contextShippingAddress = '';\n\n                        if ((this.context.billingAddressId !='') || (this.salesChannelContext.customer.defaultBillingAddress !== null)) {\n                            if (this.context.billingAddressId !='') {\n                                this.customer.addresses.forEach(value => {\n                                    if (value.id == this.context.billingAddressId) {\n                                        contextBillingAddress = value;\n                                    }\n                                });\n                            }\n\n                            billingaddress = contextBillingAddress != '' ? contextBillingAddress : this.salesChannelContext.customer.defaultBillingAddress;\n                        }\n\n                        if ((this.context.shippingAddressId !='') || (this.salesChannelContext.customer.defaultShippingAddress !== null)) {\n                            if (this.context.shippingAddressId !='') {\n                                this.customer.addresses.forEach(value => {\n                                    if (value.id == this.context.shippingAddressId) {\n                                        contextShippingAddress = value;\n                                    }\n                                });\n                            }\n\n                            shippingaddress = contextShippingAddress !='' ? contextShippingAddress : this.salesChannelContext.customer.defaultShippingAddress;\n                        }\n\n                        let me = this.NovalPaymentApiCredentialsService;\n                        let customerPaymentDetails = this.customer;\n                        this.NovalPaymentApiCredentialsService.novalnetPayment(shippingaddress, billingaddress, this.cartPrice.totalPrice , this.currency.isoCode, this.customer ).then((payment) => {\n                            if (payment != '' && payment != undefined) {\n                                if (payment.result.status =='SUCCESS' && payment.result.redirect_url != '' && payment.result.redirect_url != undefined) {\n                                    this.iframe.src = payment.result.redirect_url;\n                                    this.loaded = true;\n                                    const recaptchaScript = document.createElement('script');\n                                    recaptchaScript.setAttribute('src', 'https://cdn.novalnet.de/js/pv13/checkout.js?' + new Date().getTime());\n                                    recaptchaScript.type = 'text/javascript';\n                                    document.head.appendChild(recaptchaScript);\n                                    this.paymentformurl = recaptchaScript;\n                                    this.paymentformurl.addEventListener('load', ()=> {\n\t\t\t\t\t\t\t\t\t\t document.querySelector('.sw-button-process').disabled = false;\n                                        this.onWindowLoad(me, customerPaymentDetails);\n                                    });\n                                }\n                            }\n                        }).catch((errorResponse) => {\n                            this.createNotificationError({\n                                message: `${errorResponse.title}: ${errorResponse.message}`\n                            });\n                        });\n                    }\n                });\n            },\n        },\n\n        customer: {\n            deep: true,\n            handler() {\n                if (this.customer == null) {\n                    return;\n                }\n            },\n            immediate: true\n        }\n    },\n\n    methods: {\n        onWindowLoad(e, customer) {\n            const paymentForm = new NovalnetPaymentForm();\n            const submit = document.querySelector('.sw-button-process');\n            const keyname = 'ordernovalnetpayment';\n\n            let paymentType = '',\n                request = {\n                iframe: '#adminnovalnetPaymentiframe',\n                initForm: {\n                    uncheckPayments: false,\n                    showButton: false,\n                    }\n                };\n\n            paymentForm.initiate(request);\n            paymentForm.validationResponse((data) => {\n                paymentForm.initiate(request);\n            });\n\n            paymentForm.selectedPayment((function(selectPaymentData) {\n                paymentType = selectPaymentData.payment_details.type;\n\n            }));\n\n            submit.addEventListener('click', (event) => {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n                paymentForm.getPayment((function(paymentDetails) {\n                    let value = JSON.stringify(paymentDetails);\n                    e.paymentValue(value, customer).then((payment) => {\n                    });\n                }));\n            });\n        },\n    },\n});\n","export default \"{% block sw_order_create_details %}\\n\\t{% parent %}\\n\\t<template v-if=\\\"!isLoading\\\" :isLoading=\\\"isLoading\\\">\\n\\t\\n\\t\\t <sw-order-create-details-payment\\n\\t\\t\\t:customer=\\\"customer\\\"\\n\\t\\t\\t:cart-price=\\\"cartPrice\\\"\\n\\t\\t\\t:currency=\\\"currency\\\"\\n\\t\\t/>\\n\\n    </template>\\n\\n{% endblock %}\\n\";","import template from './sw-order-create-base.html.twig';\n\n\nconst { Component, State, Mixin, Filter, Context } = Shopware;\nconst Criteria = Shopware.Data.Criteria;\nconst { currency } = Shopware.Utils.format;\n\nComponent.override('sw-order-create-base', {\n    template,\n    \n    inject: [\n        'NovalPaymentApiCredentialsService',\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification')\n    ],\n\n    \n    \n    data() {\n        return {\n            isLoading: false,\n           \n        };\n    },\n    \n    computed: {\n\t\t\n\t\tcustomer() {\n            return State.get('swOrder').customer;\n        },\n        \n        cart() {\n            return State.get('swOrder').cart;\n        },\n        cartPrice() {\n            return this.cart.price;\n        },\n\n        currency() {\n            return State.get('swOrder').context.currency;\n        },\n        displayRounded() {\n            if (!this.cartPrice) {\n                return false;\n            }\n            return this.cartPrice.rawTotal !== this.cartPrice.totalPrice;\n        },\n        \n        orderTotal() {\n            if (!this.cartPrice) {\n                return 0;\n            }\n\n            if (this.displayRounded) {\n                return this.cartPrice.rawTotal;\n            }\n            return this.cartPrice.totalPrice;\n            \n        },\n\t},\n\t\n});\n","import template from './novalnet-payment-refund-modal.html.twig';\n\nconst { Component, Mixin } = Shopware;\nconst { currency } = Shopware.Utils.format;\n\nComponent.register('novalnet-payment-refund-modal', {\n\ttemplate,\n\t\n\tprops:{\n\t\t\n\t\trefundableAmount : {\n\t\t\ttype : Number,\n\t\t\trequired : true\n\t\t},\n\t\t\n\t\torder: {\n\t\t\ttype : Object,\n\t\t\trequired : true\n\t\t},\n\t\t\n\t\titem: {\n\t\t\ttype : Object,\n\t\t\trequired : true\n\t\t}\n\t\t\n\t},\n\t\n\tinject: [\n\t\n\t\t'NovalPaymentApiCredentialsService',\n        'repositoryFactory',\n\t],\n\t\n\tmixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('sw-inline-snippet')\n    ],\n    \n    data(){\n\t\treturn {\n\t\t\treason: '',\n\t\t\tdisable: false,\n\t\t};\n\t},\n\t\n\t methods: {\n\t\t \n\t\tcloseModal() {\n            this.$emit('modal-close');\n        },\n\n        novalnetRefund()\n        {\n            let refundAmount\t= this.refundableAmount;\n            const reason\t\t= this.reason;\n            const orderNumber\t= this.order.orderNumber;\n\n\t\t\tif(refundAmount == '0')\n\t\t\t{\n\t\t\t\tthis.createNotificationError({\n\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.amountRefundError')\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.disable = true;\n\t\t\t\n            this.NovalPaymentApiCredentialsService.refundPayment(\n                orderNumber,\n                refundAmount,\n                reason,\n                this.item.reference,\n            ).then((response) => {\n\t\t\t\tif(response.result != undefined && response.result != null && response.result != '') {\n\t\t\t\t\t\n\t\t\t\t\tif(response.result.status != undefined && response.result.status != null && response.result.status != '' && response.result.status == 'SUCCESS'){\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.extension.refundSuccess')\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse if(response.result.status_text != undefined && response.result.status_text != null && response.result.status_text != '') {\n\t\t\t\t\t\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\t\tmessage: response.result.status_text,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} \n\t\t\t\t\telse {\n\t\t\t\t\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.failureMessage')\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} \n\t\t\t\telse{\n\t\t\t\t\t\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.failureMessage')\n\t\t\t\t\t\t});\n\t\t\t\t}\n                this.$emit('modal-close');\n                setTimeout(this.$router.go, 3000);\n            }).catch((errorResponse) => {\n                    this.createNotificationError({\n                        message: `${errorResponse.title}: ${errorResponse.message}`,\n                        autoClose: false\n                    });\n                    this.$emit('modal-close');\n            });\n\t\t},\n\t}\n});\n","export default \"{% block novalnet_payment_order_refund_modal %}\\n    <sw-modal :title=\\\"$tc('novalnet-payment.settingForm.extension.refundButton')\\\"\\n              @modal-close=\\\"closeModal\\\">\\n\\t\\t\\n\\t\\t\\t{% block novalnet_payment_order_refund_modal_content %}\\n\\t\\t\\t\\t<template #default>\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_refund_modal_content_info_text %}\\n\\t\\t\\t\\t\\t\\t<sw-container columns=\\\"1fr\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tgap=\\\"0px 30px\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-number-field v-model=\\\"refundableAmount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:max=\\\"item.amount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:min=\\\"0\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:allowEmpty=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnumberType=\\\"int\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:label=\\\"$tc('novalnet-payment.settingForm.extension.amountTitle')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:helpText=\\\"$tc('novalnet-payment.settingForm.extension.refundDescription')\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t<sw-text-field v-model=\\\"reason\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t:placeholder=\\\"$tc('novalnet-payment.settingForm.extension.refundReference')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t:label=\\\"$tc('novalnet-payment.settingForm.extension.refundReference')\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</template>\\n\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t{% block novalnet_payment_order_refund_modal_actions %}\\n\\t\\t\\t\\t<template #modal-footer>\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_refund_modal_confirm %}\\n\\t\\t\\t\\t\\t\\t<sw-button secondary slim variant=\\\"primary\\\" :disabled=\\\"disable\\\" :square=\\\"false\\\" :block=\\\"false\\\" :isLoading=\\\"false\\\" @click=\\\"novalnetRefund\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.refundButton') }}\\n\\t\\t\\t\\t\\t\\t</sw-button>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</template>\\n\\t\\t\\t{% endblock %}\\n    </sw-modal>\\n{% endblock %}\\n\";","export default \"{% block novalnet_payment_order_manage_modal %}\\n    <sw-modal :title=\\\"$tc('novalnet-payment.settingForm.extension.Managetitle')\\\"\\n              @modal-close=\\\"closeModal\\\">\\n\\n        {% block novalnet_payment_order_manage_modal_content %}\\n            <template #default>\\n\\n                {% block novalnet_payment_order_manage_modal_content_info_text %}\\n                    <sw-container columns=\\\"1fr\\\" gap=\\\"0px 30px\\\">\\n\\t\\t\\t\\t\\t\\t<div v-if=\\\"status == 100\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.confirmMessage') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div v-if=\\\"status == 103\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.cancelMessage') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</sw-container>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block novalnet_payment_order_manage_modal_actions %}\\n            <template #modal-footer>\\n\\n                {% block novalnet_payment_order_manage_modal_confirm %}\\n                    <sw-button secondary slim variant=\\\"primary\\\" :disabled=\\\"disable\\\" :square=\\\"false\\\" :block=\\\"false\\\" :isLoading=\\\"false\\\" @click=\\\"novalnetOnhold\\\">\\n\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.confirmLabel') }}\\n\\t\\t\\t\\t\\t</sw-button>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n    </sw-modal>\\n{% endblock %}\\n\";","import template from './novalnet-payment-manage-transaction-modal.html.twig';\n\nconst { Component, Mixin } = Shopware;\nconst { currency } = Shopware.Utils.format;\n\nComponent.register('novalnet-payment-manage-transaction-modal', {\n    template,\n\n    props: {\n        status: {\n            type: Number,\n            required: true\n        },\n        order: {\n            type: Object,\n            required: true\n        }\n    },\n\n    inject: [\n        'NovalPaymentApiCredentialsService',\n        'repositoryFactory'\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('sw-inline-snippet')\n    ],\n\n    data() {\n        return {\n            confirm: true,\n            cancel: false,\n            disable: false\n        };\n    },\n\n    methods: {\n\n\t\tcloseModal() {\n            this.$emit('modal-close');\n        },\n\n\t\tnovalnetOnhold()\n        {\n\t\t\tlet status\t= this.status;\n\t\t\tconst orderNumber\t= this.order.orderNumber;\n\n\t\t\tif( status == '' || status == undefined )\n\t\t\t{\n\t\t\t\tthis.createNotificationError({\n\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.extension.onholdLabel')\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.disable = true;\n\n\t\t\tthis.NovalPaymentApiCredentialsService.managePayment(\n                orderNumber,\n                status\n            ).then((response) => {\n\t\t\t\t\n\t\t\t\tif(response !=''){\n\t\t\t\t\t\n\t\t\t\t\tif(response.result.status == 'SUCCESS')\n\t\t\t\t\t{\n\t\t\t\t\t\tif(response.manageEvent == 'transaction_capture') {\n\t\t\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.extension.onholdSuccess')\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else if(response.manageEvent == 'transaction_cancel') {\n\t\t\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.extension.onholdCancel')\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if(response.result.status_text != undefined && response.result.status_text != null && response.result.status_text != '') {\n\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: response.result.status_text,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.failureMessage')\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.failureMessage')\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n                this.$emit('modal-close');\n                setTimeout(this.$router.go, 3000);\n            }).catch((errorResponse) => {\n                    this.createNotificationError({\n                        message: `${errorResponse.title}: ${errorResponse.message}`,\n                        autoClose: false\n                    });\n                    this.$emit('modal-close');\n            });\n\t\t}\n\t}\n});\n","export default \"{% block novalnet_payment_order_cancel_modal %}\\n    <sw-modal :title=\\\"$tc('novalnet-payment.settingForm.extension.instalmentCancelLabel')\\\"\\n              @modal-close=\\\"closeModal\\\">\\n\\n\\t\\t\\t{% block novalnet_payment_order_cancel_modal_content %}\\n\\t\\t\\t\\t<template #default>\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_cancel_modal_content_info_text %}\\n                        <sw-container columns=\\\"1fr\\\" gap=\\\"0px 30px\\\">\\n                            <div v-if=\\\"cancelType == 'CANCEL_ALL_CYCLES' \\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.cancelAllCycleMessage') }}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"cancelType == 'CANCEL_REMAINING_CYCLES' \\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.cancelRemainingCycleMessage') }}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n                        </sw-container>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</template>\\n\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t{% block novalnet_payment_order_cancel_modal_actions %}\\n\\t\\t\\t\\t<template #modal-footer>\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_cancel_modal_confirm %}\\n\\t\\t\\t\\t\\t\\t<sw-button secondary slim variant=\\\"primary\\\" :disabled=\\\"disable\\\" :square=\\\"false\\\" :block=\\\"false\\\" :isLoading=\\\"false\\\" @click=\\\"novalnetInstalmentCancel\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.confirmLabel') }}\\n\\t\\t\\t\\t\\t\\t</sw-button>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</template>\\n\\t\\t\\t{% endblock %}\\n    </sw-modal>\\n{% endblock %}\\n\";","import template from './novalnet-payment-instalment-cancel-modal.html.twig';\n\nconst { Component, Mixin } = Shopware;\nconst { currency } = Shopware.Utils.format;\n\nComponent.register('novalnet-payment-instalment-cancel-modal', {\n    template,\n\n    props: {\n        cancelType: {\n            type: String,\n            required: true\n        },\n        order: {\n            type: Object,\n            required: true\n        }\n    },\n\n    inject: [\n        'NovalPaymentApiCredentialsService',\n        'repositoryFactory'\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('sw-inline-snippet')\n    ],\n\n    data() {\n        return {\n            disable: false,\n        };\n    },\n\n    methods: {\n\n\t\tcloseModal() {\n            this.$emit('modal-close');\n        },\n\n        novalnetInstalmentCancel()\n        {\n            const orderNumber = this.order.orderNumber;\n            const cancelType  = this.cancelType;\n\t\t\tthis.disable = true;\n\t\t\t\n            this.NovalPaymentApiCredentialsService.instalmentCancel(\n                orderNumber,\n                cancelType,\n            ).then((response) => {\n\n\t\t\t\tif(response.result != '')\n\t\t\t\t{\n\t\t\t\t\tif(response.result.status != undefined && response.result.status != null && response.result.status != '' && response.result.status == 'SUCCESS')\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.extension.instalmentSuccessMsg')\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if(response.result.status_text != undefined && response.result.status_text != null && response.result.status_text != '') {\n\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: response.result.status_text,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.failureMessage')\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.failureMessage')\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.$emit('modal-close');\n                setTimeout(this.$router.go, 3000);\n            }).catch((errorResponse) => {\n                    this.createNotificationError({\n                        message: `${errorResponse.title}: ${errorResponse.message}`,\n                        autoClose: false\n                    });\n                    this.$emit('modal-close');\n            });\n\t\t},\n\t}\n});\n","export default \"{% block novalnet_payment_order_refund_modal %}\\n    <sw-modal :title=\\\"$tc('novalnet-payment.settingForm.extension.zeroAmountButton')\\\"\\n              @modal-close=\\\"closeModal\\\">\\n\\t\\t\\n\\t\\t\\t{% block novalnet_payment_order_zero_amount_modal_content %}\\n\\t\\t\\t\\t<template #default>\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_zero_amount_modal_content_info_text %}\\n\\t\\t\\t\\t\\t\\t<sw-container columns=\\\"1fr\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tgap=\\\"0px 30px\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-number-field v-model=\\\"orderAmount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:min=\\\"0\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:allowEmpty=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnumberType=\\\"int\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:label=\\\"$tc('novalnet-payment.settingForm.extension.zeroAmountTitle')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:helpText=\\\"$tc('novalnet-payment.settingForm.extension.zeroAmountDescription')\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</template>\\n\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t{% block novalnet_payment_order_zero_amount_modal_actions %}\\n\\t\\t\\t\\t<template #modal-footer>\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_zero_amount_modal_confirm %}\\n\\t\\t\\t\\t\\t\\t<sw-button secondary slim variant=\\\"primary\\\" :disabled=\\\"disable\\\" :square=\\\"false\\\" :block=\\\"false\\\" :isLoading=\\\"false\\\" @click=\\\"novalnetBookAmount\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.bookButton') }}\\n\\t\\t\\t\\t\\t\\t</sw-button>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</template>\\n\\t\\t\\t{% endblock %}\\n    </sw-modal>\\n{% endblock %}\\n\";","import template from './novalnet-payment-book-amount-modal.html.twig';\n\nconst { Component, Mixin } = Shopware;\nconst { currency } = Shopware.Utils.format;\n\nComponent.register('novalnet-payment-book-amount-modal', {\n    template,\n\n    props: {\n        orderAmount: {\n            type: Number,\n            required: true\n        },\n        order: {\n            type: Object,\n            required: true\n        }\n    },\n\n    inject: [\n        'NovalPaymentApiCredentialsService',\n        'repositoryFactory'\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('sw-inline-snippet')\n    ],\n\n    data() {\n        return {\n            reason: '',\n            disable: false,\n        };\n    },\n\n    methods: {\n\n\t\tcloseModal() {\n            this.$emit('modal-close');\n        },\n\n        novalnetBookAmount()\n        {\n            const orderAmount = this.orderAmount;\n            const orderNumber = this.order.orderNumber;\n            \n\t\t\tif(orderAmount == 0)\n\t\t\t{\n\t\t\t\tthis.createNotificationError({\n\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.amountError')\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.disable = true;\n            this.NovalPaymentApiCredentialsService.BookOrderAmount(\n\t\t\t\torderNumber,\n                orderAmount\n            ).then((response) => {\n\n\t\t\t\tif(\tresponse.result != undefined && response.result != null && response.result != '')\n\t\t\t\t{\n\t\t\t\t\tif(response.result.status != undefined && response.result.status != null && response.result.status != '' && response.result.status == 'SUCCESS')\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.extension.bookedSuccess')\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if(response.result.status_text != undefined && response.result.status_text != null && response.result.status_text != '') {\n\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: response.result.status_text,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.failureMessage')\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.failureMessage')\n\t\t\t\t\t});\n\t\t\t\t}\n                this.$emit('modal-close');\n                setTimeout(this.$router.go, 3000);\n            }).catch((errorResponse) => {\n                    this.createNotificationError({\n                        message: `${errorResponse.title}: ${errorResponse.message}`,\n                        autoClose: false\n                    });\n                    this.$emit('modal-close');\n            });\n\t\t},\n\t}\n});\n","export default \"{% block sw_order_detail_base_secondary_info_payment %}\\n\\t\\t<template v-if=\\\"currentOrder.transactions.length > 0\\\">\\n\\t\\t\\t<dt>{{ $tc('sw-order.detailBase.labelPaymentMethod') }}</dt>\\n\\t\\t\\t<dd>\\n\\t\\t\\t\\t{{ paymentMethod }} \\n\\t\\t\\t</dd>\\n\\t\\t</template>\\n{% endblock %}\\n\";","import template from './sw-order-user-card.html.twig';\n\n\n/**\n * @package customer-order\n */\n\nconst { Component, Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n\nComponent.override('sw-order-user-card', {\n    template,\n\n    inject: [\n        'NovalPaymentApiCredentialsService',\n        'repositoryFactory',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        currentOrder: {\n            type: Object,\n            required: true,\n        },\n        isLoading: {\n            type: Boolean,\n            required: true,\n        }\n    },\n\n    data() {\n        return {\n           paymentMethod : ''\n        };\n    },\n\t\n\twatch: {\n\t\t\n\t\tcurrentOrder: {\n            deep: true,\n            handler() {\n\t\t\t\tif (this.currentOrder == '') {\n                    return;\n                }\n             \n                if (this.currentOrder.transactions.last().paymentMethod.customFields != null && this.currentOrder.transactions.last().paymentMethod.customFields.novalnet_payment_method_name != undefined && this.currentOrder.transactions.last().paymentMethod.customFields.novalnet_payment_method_name == \"novalnetpay\"){\n\n\t\t\t\t\tthis.NovalPaymentApiCredentialsService.getNovalnetPaymentMethod(this.currentOrder.orderNumber).then((payment) => {\n\t\t\t\t\t\t\tif(payment != undefined && payment != null)\n\t\t\t\t\t\t\t{\t\n\t\t\t\t\t\t\t\tif(payment.paymentName != undefined && payment.paymentName != null){\n\t\t\t\t\t\t\t\t\tthis.paymentMethod = payment.paymentName;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tthis.paymentMethod = this.currentOrder.transactions.last().paymentMethod.translated.distinguishableName;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthis.paymentMethod = this.currentOrder.transactions.last().paymentMethod.translated.distinguishableName;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}).catch((errorResponse) => {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: `${errorResponse.title}: ${errorResponse.message}`\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.paymentMethod = this.currentOrder.transactions.last().paymentMethod.translated.distinguishableName;\n\t\t\t\t}\n\t\t\t},\n\t\t\timmediate: true\n\t\t}\n\t}\n    \n\n   \n\n});\n","export default \"{% block sw_order_create_detail_payment_info %}\\n\\t\\n\\t\\t<template v-if=\\\"novalnetPayment\\\" >\\n\\t\\t\\t<sw-card :title=\\\"$tc('novalnet-payment.module.title')\\\" rows=\\\"2\\\"  :isLoading=\\\"isLoading\\\"  >\\n\\t\\t\\t\\t<div >\\n\\t\\t\\t\\t\\t<iframe \\n\\t\\t\\t\\t\\t\\tv-if=\\\"loaded\\\"\\n\\t\\t\\t\\t\\t\\tid =\\\"adminnovalnetPaymentiframe\\\"\\n\\t\\t\\t\\t\\t\\twidth=\\\"100%\\\"\\n\\t\\t\\t\\t\\t\\tframeborder=\\\"0\\\"\\n\\t\\t\\t\\t\\t  :src=\\\"iframe.src\\\"></iframe>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</sw-card>\\t\\n\\t\\t</template>\\n\\t\\n{% endblock %}\\n\";","import template from './sw-order-create-details-payment.twig';\n\n\n/**\n * @package customer-order\n */\nconst { Component, Mixin, Filter, Context } = Shopware;\nconst Criteria = Shopware.Data.Criteria;\nconst { currency } = Shopware.Utils.format;\n\n\nComponent.register('sw-order-create-details-payment', {\n    template,\n\n    inject: [\n        'NovalPaymentApiCredentialsService',\n        'repositoryFactory',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n       customer: {\n            type: Object,\n        },\n\n        cartPrice: {\n            type: Object,\n        },\n      \n        currency: {\n            type: Object,\n        },\n        isLoading: {\n            type: Boolean,\n            required: true,\n        }\n    },\n\n    data() {\n        return {\n           isLoading : false,\n\t\t\tloaded : false,\n\t\t\tshouldDisable : true,\n\t\t\tiframe: {\n\t\t\t\tsrc: ''\n\t\t\t},\n\t\t\tpaymentformurl : '',\n\t\t\tnovalnetPayment : false\n\t\t\t\n        };\n    },\n\t\n\twatch: {\n\t\t\n\t\tcustomer: {\n            deep: true,\n            handler() {\n\t\t\t\t\n\t\t\t\tif(this.customer == null){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\tconst paymentRepository = this.repositoryFactory.create('payment_method');\n\t\t\t\tconst paymentCriteria = new Criteria(1, 1);\n\t\t\t\tpaymentCriteria.addFilter(Criteria.equals('id', this.customer.salesChannel.paymentMethodId));\n\t\t\t\tpaymentRepository.search(paymentCriteria, Context.api).then((searchResult) => {\n\t\t\t\t\tconst payment = searchResult.first();\n\t\t\t\t\tif(!payment){\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif( (payment.customFields != null) && (payment.customFields.novalnet_payment_method_name  == 'novalnetpay')){\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(this.currency == null){\n\t\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleError'),\n\t\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.currencyFailureMessage')\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(this.cartPrice != null &&  (this.cartPrice.totalPrice == 0 || this.cartPrice.totalPrice == null) ){\n\t\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleError'),\n\t\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.lineitemFailureMessage')\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tthis.novalnetPayment = true;\n\t\t\t\t\t\t\n\t\t\t\t\t\tlet billingaddress = '';\n\t\t\t\t\t\tlet shippingaddress = '';\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( (this.customer.billingAddress !== null) || (this.customer.defaultBillingAddress !== null)){\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbillingaddress = this.customer.billingAddress ? this.customer.billingAddress : this.customer.defaultBillingAddress;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tif( (this.customer.shippingAddress !== null)  || (this.customer.defaultShippingAddress !== null)){\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tshippingaddress = this.customer.shippingAddress ? this.customer.shippingAddress : this.customer.defaultShippingAddress;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet me = this.NovalPaymentApiCredentialsService;\n\t\t\t\t\t\tlet customerPaymentDetails = this.customer;\n\n\t\t\t\t\t\tthis.NovalPaymentApiCredentialsService.novalnetPayment(shippingaddress, billingaddress, this.cartPrice.totalPrice , this.currency.isoCode, this.customer ).then((payment) => {\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(payment != '' && payment != undefined)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(payment.result.status =='SUCCESS' && payment.result.redirect_url != '' && payment.result.redirect_url != undefined ){\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t this.iframe.src = payment.result.redirect_url;\n\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t this.loaded = true;\n\t\t\t\t\t\t\t\t\t\tconst recaptchaScript = document.createElement('script');\n\t\t\t\t\t\t\t\t\t\trecaptchaScript.setAttribute('src', 'https://cdn.novalnet.de/js/pv13/checkout.js?' + new Date().getTime());\n\t\t\t\t\t\t\t\t\t\trecaptchaScript.type = 'text/javascript'; \n\t\t\t\t\t\t\t\t\t\tdocument.head.appendChild(recaptchaScript); \n\t\t\t\t\t\t\t\t\t\tthis.paymentformurl = recaptchaScript;\n\t\t\t\t\t\t\t\t\t\tthis.paymentformurl.addEventListener('load', ()=>{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.onWindowLoad(me, customerPaymentDetails);\n\t\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t}).catch((errorResponse) => {\n\t\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\t\tmessage: `${errorResponse.title}: ${errorResponse.message}`\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t});\n\t\t\t},\n\t\t\timmediate: true\n\t\t\n\t\t}\n\t\t\n\t},\n\t\n\t\n\tmethods: {\n\t\tonWindowLoad(e, customer) {\n\t\t\tconst paymentForm = new NovalnetPaymentForm();\n\t\t\tconst submit = document.querySelector('.sw-button-process');\n\t\t\tconst keyname = 'ordernovalnetpayment';\n\t\t\tlet paymentType = '';\n\t\t\t\tlet request = { \n\t\t\t\t\tiframe: '#adminnovalnetPaymentiframe', \n\t\t\t\t\tinitForm: { \n\t\t\t\t\t\tuncheckPayments: true, \n\t\t\t\t\t\tshowButton: false, \n\t\t\t\t\t\t} \n\t\t\t\t};\n\t\t\n\t\t\tpaymentForm.initiate(request); \t\t\n\t\t\tpaymentForm.validationResponse((data) => { \n\t\t\t\tpaymentForm.initiate(request); \n\t\t\t});\n\t\t\t\n\t\t\tpaymentForm.selectedPayment((function(selectPaymentData) {\n\t\t\t\tpaymentType = selectPaymentData.payment_details.type;\n\t\t\t\t\n\t\t\t})); \n\t\t\t\n\t\t\tsubmit.addEventListener('click', (event) => {\n\t\t\t\tevent.preventDefault();\n                event.stopImmediatePropagation();\n                paymentForm.getPayment((function(paymentDetails) {\n\t\t\t\t\tlet value = JSON.stringify(paymentDetails);\n\t\t\t\t\te.paymentValue(value, customer).then((payment) => {\n\t\t\t\t\t});\n\t\t\t\t}));   \n\t\t\t});\t\n\t\t\t\n\t\t},\n\t\t\n\t},\n   \n\n});\n","export default \"{% block sw_order_detail_base_general_info_summary_sub_description %}\\n\\t<div class=\\\"sw-order-general-info__summary-sub-description\\\">\\n\\t\\t{{ $tc('sw-order.generalTab.info.summary.on') }}\\n\\t\\t{{ order.orderDateTime | date({\\n\\t\\t\\thour: '2-digit',\\n\\t\\t\\tminute: '2-digit',\\n\\t\\t\\tday: '2-digit',\\n\\t\\t\\tmonth: '2-digit',\\n\\t\\t\\tyear: 'numeric'\\n\\t\\t}) }}\\n\\t\\t{{ $tc('sw-order.generalTab.info.summary.with') }}\\n\\t\\t{{ paymentMethod }} \\n\\t\\t<template v-if=\\\"order.deliveries.last()\\\">\\n\\t\\t\\t{{ $tc('sw-order.generalTab.info.summary.and') }}\\n\\t\\t\\t{{ order.deliveries.last().shippingMethod.translated.name }}\\n\\t\\t</template>\\n\\t</div>\\n{% endblock %}\\n\";","import template from './sw-order-general-info.html.twig';\n\n\n/**\n * @package customer-order\n */\n\nconst { Component, Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n\nComponent.override('sw-order-general-info', {\n    template,\n\n    inject: [\n        'NovalPaymentApiCredentialsService',\n        'repositoryFactory',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        order: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n           paymentMethod : ''\n        };\n    },\n\t\n\twatch: {\n\t\t\n\t\torder: {\n            deep: true,\n            handler() {\n\t\t\t\tif (this.order == '') {\n                    return;\n                }\n\n                if (this.order.transactions.last().paymentMethod.customFields != null && this.order.transactions.last().paymentMethod.customFields.novalnet_payment_method_name != undefined && this.order.transactions.last().paymentMethod.customFields.novalnet_payment_method_name == \"novalnetpay\") {\n\n\t\t\t\t\tthis.NovalPaymentApiCredentialsService.getNovalnetPaymentMethod(this.order.orderNumber).then((payment) => {\n\t\t\t\t\t\t\tif(payment != undefined && payment != null)\n\t\t\t\t\t\t\t{\t\n\t\t\t\t\t\t\t\tif(payment.paymentName != undefined && payment.paymentName != null){\n\t\t\t\t\t\t\t\t\tthis.paymentMethod = payment.paymentName;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tthis.paymentMethod = this.order.transactions.last().paymentMethod.translated.distinguishableName;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthis.paymentMethod = this.order.transactions.last().paymentMethod.translated.distinguishableName;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}).catch((errorResponse) => {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: `${errorResponse.title}: ${errorResponse.message}`\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t\n\t\t\t\t\tthis.paymentMethod = this.order.transactions.last().paymentMethod.translated.distinguishableName;\n\t\t\t\t}\n\t\t\t},\n\t\t\timmediate: true\n\t\t}\n\t}\n    \n\n   \n\n});\n","import './page/novalnet-payment-settings';\nimport './components/novalnet-payment-credentials';\nimport './components/novalnet-payment-settings-icon';\nimport './extension/sw-order/view/sw-order-detail-base';\nimport './extension/sw-order/view/sw-order-detail-details';\nimport './extension/sw-order/view/sw-order-create-details';\nimport './extension/sw-order/view/sw-order-create-base';\nimport './extension/sw-order/view/sw-order-create-general';\nimport './extension/sw-order/view/novalnet-payment-refund-modal';\nimport './extension/sw-order/view/novalnet-payment-manage-transaction-modal';\nimport './extension/sw-order/view/novalnet-payment-instalment-cancel-modal';\nimport './extension/sw-order/view/novalnet-payment-book-amount-modal';\nimport './extension/sw-order/component/sw-order-user-card';\nimport './extension/sw-order/component/sw-order-create-details-payment';\nimport './extension/sw-order/component/sw-order-general-info';\n\nimport deDE from './snippet/de_DE.json';\nimport enGB from './snippet/en_GB.json';\n\nconst { Module } = Shopware;\n\nModule.register('novalnet-payment', {\n\t\n\ttype\t: 'plugin',\n\tname\t: 'NovalnetPayment',\n\ttitle\t: 'novalnet-payment.module.title',\n\tdescription\t:'novalnet-payment.module.description',\n\t\n\t\n\tsnippets: {\n        'de-DE': deDE,\n        'en-GB': enGB\n    },\n\troutes: {\n        index: {\n\t\t\tcomponent: 'novalnet-payment-settings',\n            path: 'index',\n            meta: {\n                parentPath: 'sw.settings.index',\n                privilege: 'novalnet_payment.viewer',\n            }\n        },\n        detail: {\n            component: 'novalnet-payment-settings',\n            path: 'settings',\n            redirect: {\n                name: 'novalnet.payment.credentials'\n            },\n            children: {\n\t\t\t\tcredentials: {\n\t\t\t\t\tcomponent: 'novalnet-payment-credentials',\n\t\t\t\t\tpath: 'credentials',\n\t\t\t\t\tmeta: {\n\t\t\t\t\t\tparentPath: 'sw.settings.index',\n\t\t\t\t\t\tprivilege: 'novalnet_payment.viewer',\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n        \n    },\n\tsettingsItem: {\n        group: 'plugins',\n        to: 'novalnet.payment.detail.credentials',\n        iconComponent: 'novalnet-payment-settings-icon',\n        backgroundEnabled: true,\n        privilege: 'novalnet_payment.viewer'\n    }\n});\n","const ApiService = Shopware.Classes.ApiService;\n\nclass NovalPaymentApiCredentialsService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'novalnet-payment') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n\n    validateApiCredentials(clientId, accessKey) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .post(\n                `_action/${this.getApiBasePath()}/validate-api-credentials`,\n                {\n\t\t\t\t\tclientId,\n\t\t\t\t\taccessKey\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\theaders: this.getBasicHeaders()\n\t\t\t\t}\n            )\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n    \n    getNovalnetAmount(orderNumber){\n\t\tconst headers = this.getBasicHeaders();\n\t\t\n\t\treturn this.httpClient\n            .post(\n                `_action/${this.getApiBasePath()}/transaction-amount`,\n                {\n\t\t\t\t\torderNumber\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\theaders: this.getBasicHeaders()\n\t\t\t\t}\n            )\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n\t}\n\t\n\trefundPayment(orderNumber, refundAmount, reason, instalmentCycleTid){\n\t\tconst headers = this.getBasicHeaders();\n\t\t\n\t\treturn this.httpClient\n            .post(\n                `_action/${this.getApiBasePath()}/refund-amount`,\n                {\n\t\t\t\t\torderNumber,\n\t\t\t\t\trefundAmount,\n\t\t\t\t\treason,\n\t\t\t\t\tinstalmentCycleTid\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\theaders: this.getBasicHeaders()\n\t\t\t\t}\n            )\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n\t}\n\t\n\tmanagePayment(orderNumber, status){\n\t\tconst headers = this.getBasicHeaders();\n\t\t\n\t\treturn this.httpClient\n            .post(\n                `_action/${this.getApiBasePath()}/manage-payment`,\n                {\n\t\t\t\t\torderNumber: orderNumber,\n\t\t\t\t\tstatus: status\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\theaders: this.getBasicHeaders()\n\t\t\t\t}\n            )\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n\t}\n\t\n\tinstalmentCancel(orderNumber, cancelType){\n\t\tconst headers = this.getBasicHeaders();\n\t\t\n\t\treturn this.httpClient\n            .post(\n                `_action/${this.getApiBasePath()}/instalment-cancel`,\n                {\n\t\t\t\t\torderNumber,\n\t\t\t\t\tcancelType\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\theaders: this.getBasicHeaders()\n\t\t\t\t}\n            )\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n\t}\n\t\n\t    BookOrderAmount(orderNumber, bookAmount) {\n        const apiRoute = `_action/${this.getApiBasePath()}/book-amount`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n\t\t\t\torderNumber,\n\t\t\t\tbookAmount\n            },\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n    \n    getNovalnetPaymentMethod (orderNumber) {\n        const apiRoute = `_action/${this.getApiBasePath()}/novalnet-paymentmethod`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n\t\t\t\torderNumber\n\t\t\t\t\n            },\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n    \n    configureWebhookUrl(url, productActivationKey, paymentAccessKey) {\n        const apiRoute = `_action/${this.getApiBasePath()}/webhook-url-configure`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n\t\t\t\turl,\n\t\t\t\tproductActivationKey,\n\t\t\t\tpaymentAccessKey\n            },\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n    \n    novalnetPayment(shippingaddress, billingaddress, amount,  currency, customer) {\n        const apiRoute = `_action/${this.getApiBasePath()}/novalnet-payment`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n\t\t\t\tshippingaddress,\n\t\t\t\tbillingaddress,\n\t\t\t\tamount,\n\t\t\t\tcurrency,\n\t\t\t\tcustomer\n            },\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n    \n    paymentDetails(paymentSelected) {\n        const apiRoute = `_action/${this.getApiBasePath()}/novalnet-select-payment`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n\t\t\t\tpaymentSelected\n            },\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n    \n    paymentValue(value, customer) {\n        const apiRoute = `_action/${this.getApiBasePath()}/payment-value-data`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n\t\t\t\tvalue,\n\t\t\t\tcustomer\n            },\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n    \n    \n}\n\nexport default NovalPaymentApiCredentialsService;\n","import NovalPaymentApiCredentialsService\n    from '../../src/core/service/api/novalnet-payment-api-credentials.service';\n\nconst { Application } = Shopware;\n\nApplication.addServiceProvider('NovalPaymentApiCredentialsService', (container) => {\n    const initContainer = Application.getContainer('init');\n\n    return new NovalPaymentApiCredentialsService(initContainer.httpClient, container.loginService);\n});\n\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./novalnet-payment-settings.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"2907a316\", content, true, {});","\nconst { Component, State, Mixin, Filter, Context, ContextSwitchParameters} = Shopware;\nconst Criteria = Shopware.Data.Criteria;\nconst { currency } = Shopware.Utils.format;\n\nComponent.override('sw-order-create-general', {\n    inject: [\n        'NovalPaymentApiCredentialsService',\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification')\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n        };\n    },\n\n    computed: {\n        customer() {\n            return State.get('swOrder').customer;\n        },\n        cart() {\n            return State.get('swOrder').cart;\n        },\n        currency(){\n            return State.get('swOrder').context.currency;\n        },\n        cartPrice() {\n            return this.cart.price;\n        },\n        salesChannelContext(){\n            return State.get('swOrder').context;\n        },\n    },\n\n    watch: {\n        salesChannelContext: {\n            deep: true,\n            handler() {\n\n                if (!this.customer) {\n                    return;\n                }\n\n                this.isLoading = true;\n                const paymentRepository = this.repositoryFactory.create('payment_method');\n                const paymentCriteria = new Criteria(1, 1);\n                paymentCriteria.addFilter(Criteria.equals('id', this.salesChannelContext.paymentMethod.id));\n                paymentRepository.search(paymentCriteria, Context.api).then((searchResult) => {\n                    const payment = searchResult.first();\n                    if (!payment) {\n                        return\n                    }\n                    this.novalnetPayment = false;\n                    if ((payment.customFields != null) && (payment.customFields.novalnet_payment_method_name  == 'novalnetpay')) {\n                        this.onWindowLoad();\n                    }\n                });\n            },\n        },\n\n        customer: {\n            deep: true,\n            handler() {\n                if (this.customer == null) {\n                    return;\n                }\n            },\n            immediate: true\n        }\n    },\n\n    methods: {\n        onWindowLoad() {\n            document.querySelector('.sw-button-process').disabled = true;\n\t    }    \n    },\n});\n","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nimport listToStyles from './listToStyles'\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nexport default function addStylesClient (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-order-detail-details.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3c679139\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-order.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"64b038cc\", content, true, {});","Shopware.Service('privileges')\n    .addPrivilegeMappingEntry({\n        category: 'permissions',\n        parent: 'orders',\n        key: 'novalnet_extension',\n        roles: {\n            viewer: {\n                privileges: [\n                    'novalnet_transaction_details:read',\n                ],\n                dependencies: [],\n            },\n            editor: {\n                privileges: [\n                    'novalnet_transaction_details:update',\n                    'order_transaction:read',\n                    'order_transaction:update',\n                ],\n                dependencies: [\n                    'novalnet_extension.viewer',\n                    'order.editor',\n                ],\n            },\n            creator: {\n                privileges: [\n                    'novalnet_transaction_details:create',\n                ],\n                dependencies: [\n                    'novalnet_extension.viewer',\n                    'novalnet_extension.editor',\n                ],\n            },\n            deleter: {\n                privileges: [\n                    'novalnet_transaction_details:delete',\n                ],\n                dependencies: [\n                    'novalnet_extension.viewer',\n                ],\n            },\n        },\n    });\nShopware.Service('privileges').addPrivilegeMappingEntry({\n    category: 'permissions',\n    parent: 'novalnet_payment',\n    key: 'novalnet_payment',\n    roles: {\n        viewer: {\n            privileges: [\n                'system_config:read',\n                'sales_channel:read',\n            ],\n            dependencies: [],\n        },\n        editor: {\n            privileges: [\n                'system_config:update',\n                'system_config:create',\n                'system_config:delete',\n                'sales_channel:update',\n            ],\n            dependencies: [\n                'novalnet_payment.viewer',\n            ],\n        },\n    },\n});\n"],"sourceRoot":""}
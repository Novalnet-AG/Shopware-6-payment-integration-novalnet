{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/components/novalnet-payment-credentials/novalnet-payment-credentials.scss","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/sw-order-detail-details/sw-order-detail-details.html.twig","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/sw-order-detail-details/index.js","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/page/novalnet-payment-settings/novalnet-payment-settings.html.twig","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/page/novalnet-payment-settings/index.js","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/components/novalnet-payment-credentials/index.js","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/components/novalnet-payment-credentials/novalnet-payment-credentials.html.twig","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/components/novalnet-payment-settings-icon/index.js","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/components/novalnet-payment-settings-icon/novalnet-payment-settings-icon.html.twig","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/components/novalnet-payment-configuration/index.js","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/components/novalnet-payment-configuration/novalnet-payment-configuration.html.twig","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/novalnet-payment-refund-modal/novalnet-payment-refund-modal.html.twig","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/novalnet-payment-refund-modal/index.js","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/novalnet-payment-book-amount-modal/novalnet-payment-book-amount-modal.html.twig","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/novalnet-payment-book-amount-modal/index.js","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/novalnet-payment-instalment-refund-modal/novalnet-payment-instalment-refund-modal.html.twig","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/novalnet-payment-instalment-refund-modal/index.js","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/novalnet-payment-manage-transaction-modal/novalnet-payment-manage-transaction-modal.html.twig","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/novalnet-payment-manage-transaction-modal/index.js","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/sw-order-create-details/sw-order-create-details.html.twig","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/sw-order-create-details/index.js","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/component/sw-order-create-options/sw-order-create-options.html.twig","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/component/sw-order-create-options/index.js","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/index.js","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/core/service/api/novalnet-payment-api-credentials.service.js","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/init/api-service.init.js","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/page/novalnet-payment-settings/novalnet-payment-settings.scss","webpack:///./node_modules/vue-style-loader/lib/listToStyles.js","webpack:///./node_modules/vue-style-loader/lib/addStylesClient.js","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/sw-order-detail-details/sw-order-detail-details.scss","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/components/novalnet-payment-configuration/novalnet-payment-configuration.scss","webpack:////srv/www/dev_server/shopware-cloud/htdocs/custom/plugins/NovalnetPayment/src/Resources/app/administration/src/acl/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","content","default","locals","add","_Shopware","Shopware","Context","Component","Criteria","Filter","Utils","Data","currency","format","override","template","inject","mixins","props","orderId","type","String","required","paymentDetails","data","status","displayAmount","displayPaidAmount","refundedAmount","InstalmentInfo","item","novalnetComments","isNovalnetPayment","refundModalVisible","confirmModalVisible","zeroAmountVisible","cancelModalVisible","canInstalmentAllCancel","canInstalmentRemainCancel","instalmentRefundModalVisible","payLater","instalmentPayments","onholdStatus","computed","getInstalmentColums","dataIndex","label","this","$tc","width","visible","watch","deep","handler","_this","orderRepository","repositoryFactory","orderCriteria","addAssociation","addFilter","equals","search","api","then","searchResult","order","first","identifier","orderNumber","isNovalnet","comments","translation","transactions","sort","a","b","Date","createdAt","forEach","orderTransaction","customFields","novalnet_comments","stateMachineState","split","join","setNovalnetPayment","price","totalPrice","shortName","canCaptureVoid","canRefund","canZeroAmountBooking","canInstalmentCancel","canInstalmentShow","NovalPaymentApiCredentialsService","getNovalnetAmount","payment","undefined","gatewayStatus","additionalDetails","JSON","parse","includes","amount","paymentType","Number","cancelType","refundableAmount","orderAmount","Math","round","paidAmount","InstalmentDetails","counter","values","push","cycleDate","reference","refundAmount","catch","errorResponse","createNotificationError","message","concat","title","finally","immediate","methods","novalnetPayment","showConfirmModal","showRefundModal","closeModals","showInstalmentAllCancelModal","showInstalmentRemainCancelModal","showCancelModal","showZeroAmountBlock","reloadPaymentDetails","_this2","$nextTick","$emit","instalmentRefund","totalAmount","showInstalmentCancelModal","_this3","disableInstalmentRefund","acl","can","Mixin","Defaults","register","getByName","isLoading","isValidating","isSaveSuccessful","isValidateSuccessful","clientIdFilled","clientSecretFilled","config","salesChannels","validateButtonDisabled","novalnetConfigRoute","novalnetPaymentRoute","salesChannelRepository","created","createdComponent","defaultConfig","$refs","configComponent","allConfigs","null","selectedSalesChannelId","criteria","equalsAny","storefrontSalesChannelTypeId","apiSalesChannelTypeId","res","id","translated","onSave","clientId","getConfigValue","accessKey","replace","checkBackendConfiguration","field","validateApiCredentials","response","serverResponse","result","status_code","status_text","tariffResponse","tariff","merchant","client_key","save","cacheApiService","clear","createNotificationSuccess","isTestSuccessful","metaInfo","$createTitle","_Shopware$Utils","types","icon","actualConfigData","domain","tariffOptions","shouldDisable","projectMode","isRequested","apiActivationKey","tariffId","showMessage","NovalnetPaymentCallBackUrl","window","location","protocol","host","pathname","paymentAccessKey","buttonLoad","generalInformation","installationInformation","configData","set","_objectSpread","_defineProperty","updated","checkTextFieldInheritance","length","checkBoolFieldInheritance","checkNumberFieldInheritance","getInheritValue","onCheckApi","event","target","me","autoClose","test_mode","configureWebhookUrl","productActivationKey","test","selected","paypalInformation","sellerNamePlaceHolder","onholdOptions","onHoldZeroOptions","onCaptureZeroOptions","displayFieldOptions","buttonThemeOptions","buttonGpayThemeOptions","buttonTypeOptions","buttonGpayTypeOptions","instalmentOptions","options","index","reason","disable","closeModal","novalnetRefund","refundPayment","setTimeout","$router","go","novalnetBookAmount","BookOrderAmount","novalnetInstalmentCancel","instalmentCancel","confirm","cancel","novalnetOnhold","managePayment","State","ContextSwitchParameters","salesChannelId","_this$salesChannelCon","salesChannelContext","salesChannel","context","paymentMethodCriteria","multi","_State$get$context$sa","_State$get$context","_State$get$context$sa2","Module","description","version","targetVersion","snippets","deDE","enGB","routes","component","path","meta","parentPath","privilege","detail","redirect","children","credentials","configuration","settingsItem","group","to","iconComponent","backgroundEnabled","ApiService","Classes","_ApiService","_inherits","_super","_createSuper","httpClient","loginService","apiEndpoint","arguments","_classCallCheck","getBasicHeaders","post","getApiBasePath","headers","handleResponse","instalmentCycleTid","apiRoute","bookedAmount","url","Application","addServiceProvider","container","initContainer","getContainer","listToStyles","parentId","list","styles","newStyles","part","css","media","sourceMap","parts","hasDocument","document","DEBUG","Error","stylesInDom","head","getElementsByTagName","singletonElement","singletonCounter","isProduction","noop","ssrIdKey","isOldIE","navigator","userAgent","toLowerCase","addStylesClient","_isProduction","_options","addStylesToDom","newList","mayRemove","domStyle","refs","j","addStyle","createStyleElement","styleElement","createElement","appendChild","obj","update","remove","querySelector","parentNode","removeChild","styleIndex","applyToSingletonTag","applyToTag","newObj","textStore","replaceText","replacement","filter","Boolean","styleSheet","cssText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","ssrId","sources","btoa","unescape","encodeURIComponent","stringify","firstChild","Service","addPrivilegeMappingEntry","category","parent","roles","viewer","privileges","dependencies","editor","creator","deleter"],"mappings":"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","file":"static/js/novalnet-payment.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/bundles/novalnetpayment/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"DFWG\");\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./novalnet-payment-credentials.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"61be6ccd\", content, true, {});","export default \"{% block sw_order_detail_details_payment %}\\n\\t{% parent %}\\n\\t{% block sw_order_detail_details_payment_novalnet_seaction %}\\n\\t\\t<template v-if=\\\"isNovalnetPayment\\\">\\n\\t\\t\\t<sw-order-details-state-card\\n\\t\\t\\t\\tv-if=\\\"transaction\\\"\\n\\t\\t\\t\\t:title=\\\"$tc('novalnet-payment.module.title')\\\"\\n\\t\\t\\t\\t:order=\\\"order\\\"\\n\\t\\t\\t\\t:entity=\\\"transaction\\\"\\n\\t\\t\\t\\t:state-label=\\\"$tc('sw-order.stateCard.headlineTransactionState')\\\"\\n\\t\\t\\t\\t:disabled=\\\"!acl.can('order.editor')\\\"\\n\\t\\t\\t\\t@show-status-history=\\\"showStateHistoryModal = true\\\"\\n\\t\\t\\t\\t@save-edits=\\\"onSaveEdits\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"novalnet-payment-buyer-notification\\\">\\n\\t\\t\\t\\t\\t{# Logo #}\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_buyer_info %}\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-buyer-notification-icon-container\\\" style=\\\"text-align:center;\\\">\\n\\t\\t\\t\\t\\t\\t\\t<img class=\\\"novalnet-payment-buyer-info-icon\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t :src=\\\"'novalnetpayment/static/img/plugin.png' | asset\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t{# Full name and E-Mail address #}\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_buyer_info_name_container %}\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-buyer-info-name\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_buyer_info_name_container_name %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-buyer-info-full-name\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ order.orderCustomer.firstName }} {{ order.orderCustomer.lastName }}\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_buyer_info_name_container_email %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-buyer-info-email\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ order.orderCustomer.email }}\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-container class=\\\"novalnet-payment-amount-info\\\" columns=\\\"1fr\\\">\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_component_amount_info %}\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-amount-info-total-amount\\\" style=\\\"text-align:right;\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ displayAmount }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t{% block novalnet_payment_amount_info_captured_amount %}\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-amount-captured-amount\\\" style=\\\"text-align:right;\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_amount_info_captured_amount %}\\n\\t\\t\\t\\t\\t\\t\\t\\t+ {{ displayPaidAmount }}\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_amount_info_captured_amount_help %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-help-text class=\\\"novalnet-payment-captured-amount-help-icon\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  tooltipPosition=\\\"top\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :text=\\\"$tc('novalnet-payment.settingForm.extension.paidTooltip')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-help-text>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_compoenent_amount_info_refuned %}\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-refuned-amount\\\" style=\\\"text-align:right;\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_compoenent_amount_info_refuned_amount %}\\n\\t\\t\\t\\t\\t\\t\\t\\t- {{ refundedAmount }}\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_compoenent_amount_info_refuned_help %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-help-text class=\\\"novalnet-payment-refuned-amount-help-icon\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  tooltipPosition=\\\"top\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :text=\\\"$tc('novalnet-payment.settingForm.extension.refundTooltip')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-help-text>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_info_date %}\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-amount-info-charge-date\\\" style=\\\"text-align:right;\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ transaction.createdAt|date('d.m.y') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-container class=\\\"novalnet-payment-action-toolbar\\\" rows=\\\"1\\\" columns=\\\"1fr 1fr 1fr\\\" gap=\\\"10px\\\">\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_container_toolbar_refund_button %}\\n\\t\\t\\t\\t\\t\\t<sw-button size=\\\"small\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   v-if=\\\"canRefund\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   @click=\\\"showRefundModal\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.refundButton') }}\\n\\t\\t\\t\\t\\t\\t</sw-button>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\n                    {% block novalnet_payment_order_container_toolbar_instalment_cancel_button %}\\n                        <sw-button size=\\\"small\\\"\\n                                   class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n                                   v-if=\\\"canInstalmentCancel\\\"\\n                                   :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n                                   @click=\\\"showInstalmentCancelModal\\\">\\n                            {{ $tc('novalnet-payment.settingForm.extension.instalmentCancelLabel') }}\\n                        </sw-button>\\n                    {% endblock %}\\n               \\n                    {% block novalnet_payment_order_container_toolbar_instalment_all_cancel_button %}\\n                        <sw-button size=\\\"small\\\"\\n                                   class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n                                   v-if=\\\"canInstalmentAllCancel\\\"\\n                                   :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n                                   @click=\\\"showInstalmentAllCancelModal\\\">\\n                            {{ $tc('novalnet-payment.settingForm.extension.instalmentAllCancelLabel') }}\\n                        </sw-button>\\n                    {% endblock %}\\n                    \\n                    {% block novalnet_payment_order_container_toolbar_instalment_remain_cancel_button %}\\n                        <sw-button size=\\\"small\\\"\\n                                   class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n                                   v-if=\\\"canInstalmentRemainCancel\\\"\\n                                   :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n                                   @click=\\\"showInstalmentRemainCancelModal\\\">\\n                            {{ $tc('novalnet-payment.settingForm.extension.instalmentRemainCancelLabel') }}\\n                        </sw-button>\\n                    {% endblock %}\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_container_toolbar_capture_button %}\\n\\t\\t\\t\\t\\t\\t<sw-button size=\\\"small\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   v-if=\\\"canCaptureVoid\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   @click=\\\"showConfirmModal\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.confirmLabel') }}\\n\\t\\t\\t\\t\\t\\t</sw-button>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_container_toolbar_cancel_button %}\\n\\t\\t\\t\\t\\t\\t<sw-button size=\\\"small\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   v-if=\\\"canCaptureVoid\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   @click=\\\"showCancelModal\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.cancelLabel') }}\\n\\t\\t\\t\\t\\t\\t</sw-button>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_container_toolbar_zero_amount_button %}\\n\\t\\t\\t\\t\\t\\t<sw-button size=\\\"small\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   v-if=\\\"canZeroAmountBooking\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   @click=\\\"showZeroAmountBlock\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.zeroAmountButton') }}\\n\\t\\t\\t\\t\\t\\t</sw-button>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-container class=\\\"novalnet-payment-pay-empty-container\\\" columns=\\\"1fr\\\">\\n\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-container class=\\\"novalnet-payment-pay-info-container\\\" columns=\\\"1fr\\\">\\n\\t\\t\\t\\t\\t<hr class=\\\"sw-order-detail-state-card__divider\\\">\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_component_checkout_info_billing_container %}\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment_chechout-info-customer-comments\\\" v-if=\\\"isNovalnetPayment\\\">\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_component_checkout_info_billing_container_headline %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-checkout-info-header\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.module.comments') }}\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_component_billing_value %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"novalnet-payment-checkout-info-comments\\\" v-html=\\\"novalnetComments\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t{% block novalnet_payment_order_component_action_toolbar_modals %}\\n\\t\\t\\t\\t\\t<novalnet-payment-refund-modal\\n\\t\\t\\t\\t\\t\\tv-if=\\\"refundModalVisible\\\"\\n\\t\\t\\t\\t\\t\\t:refundableAmount=\\\"refundableAmount\\\"\\n\\t\\t\\t\\t\\t\\t:order=\\\"order\\\"\\n\\t\\t\\t\\t\\t\\t:item=\\\"item\\\"\\n\\t\\t\\t\\t\\t\\t@modal-close=\\\"closeModals\\\"\\n\\t\\t\\t\\t\\t\\t@reload-payment=\\\"reloadPaymentDetails\\\">\\n\\t\\t\\t\\t\\t</novalnet-payment-refund-modal>\\n\\n\\t\\t\\t\\t\\t<novalnet-payment-instalment-refund-modal\\n\\t\\t\\t\\t\\t\\tv-if=\\\"instalmentRefundModalVisible\\\"\\n\\t\\t\\t\\t\\t\\t:item=\\\"item\\\"\\n\\t\\t\\t\\t\\t\\t:cancelType=\\\"cancelType\\\"\\n\\t\\t\\t\\t\\t\\t:order=\\\"order\\\"\\n\\t\\t\\t\\t\\t\\t@modal-close=\\\"closeModals\\\"\\n\\t\\t\\t\\t\\t\\t@reload-payment=\\\"reloadPaymentDetails\\\">\\n\\t\\t\\t\\t\\t</novalnet-payment-instalment-refund-modal>\\n\\n\\t\\t\\t\\t\\t<novalnet-payment-manage-transaction-modal\\n\\t\\t\\t\\t\\t\\tv-if=\\\"confirmModalVisible\\\"\\n\\t\\t\\t\\t\\t\\t:status=\\\"status\\\"\\n\\t\\t\\t\\t\\t\\t:order=\\\"order\\\"\\n\\t\\t\\t\\t\\t\\t@modal-close=\\\"closeModals\\\"\\n\\t\\t\\t\\t\\t\\t@reload-payment=\\\"reloadPaymentDetails\\\">\\n\\t\\t\\t\\t\\t</novalnet-payment-manage-transaction-modal>\\n\\n\\t\\t\\t\\t\\t<novalnet-payment-manage-transaction-modal\\n\\t\\t\\t\\t\\t\\tv-if=\\\"cancelModalVisible\\\"\\n\\t\\t\\t\\t\\t\\t:status=\\\"status\\\"\\n\\t\\t\\t\\t\\t\\t:order=\\\"order\\\"\\n\\t\\t\\t\\t\\t\\t@modal-close=\\\"closeModals\\\"\\n\\t\\t\\t\\t\\t\\t@reload-payment=\\\"reloadPaymentDetails\\\">\\n\\t\\t\\t\\t\\t</novalnet-payment-manage-transaction-modal>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<novalnet-payment-book-amount-modal\\n\\t\\t\\t\\t\\t\\tv-if=\\\"zeroAmountVisible\\\"\\n\\t\\t\\t\\t\\t\\t:orderAmount=\\\"orderAmount\\\"\\n\\t\\t\\t\\t\\t\\t:order=\\\"order\\\"\\n\\t\\t\\t\\t\\t\\t@modal-close=\\\"closeModals\\\"\\n\\t\\t\\t\\t\\t\\t@reload-payment=\\\"reloadPaymentDetails\\\">\\n\\t\\t\\t\\t\\t</novalnet-payment-book-amount-modal>\\n\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t</sw-order-details-state-card>\\n\\t\\t\\t\\n\\t\\t\\t<sw-card :title=\\\"$tc('novalnet-payment.settingForm.instalmentInfo')\\\" v-if=\\\"canInstalmentShow\\\">\\n\\t\\t\\t\\t\\t<template #grid>\\n\\t\\t\\t\\t\\t\\t<sw-data-grid\\n\\t\\t\\t\\t\\t\\t\\t:dataSource=\\\"InstalmentInfo\\\"\\n\\t\\t\\t\\t\\t\\t\\t:columns=\\\"getInstalmentColums\\\"\\n\\t\\t\\t\\t\\t\\t\\t:compactMode=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t:allowInlineEdit=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t\\t:showSelection=\\\"false\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t{% block sw_product_detail_base_ratings_actions %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<template #actions=\\\"{ item }\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{% block sw_product_detail_base_ratings_actions_edit %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-context-menu-item\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"sw-product-detail-base__review-edit\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t@click=\\\"instalmentRefund(item)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:disabled=\\\"disableInstalmentRefund(item)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.refundButton') }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-context-menu-item>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t</sw-data-grid>\\n\\t\\t\\t\\t\\t</template>\\n            </sw-card>\\n\\t\\t</template>\\n\\t\\t\\n\\t{% endblock %}\\n{% endblock %}\\n\";","import template from './sw-order-detail-details.html.twig';\nimport './sw-order-detail-details.scss';\n\nconst { Context, Component, Filter, Utils } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst { currency } = Shopware.Utils.format;\n\nComponent.override('sw-order-detail-details', {\n    template,\n    \n    inject: [\n        'NovalPaymentApiCredentialsService',\n        'repositoryFactory',\n        'acl',\n    ],\n    \n    mixins: ['notification'],\n    \n    props: {\n        orderId: {\n            type: String,\n            required: true\n        },\n        paymentDetails: {\n            type: Object,\n            required: true\n        },\n    },\n    \n    data() {\n        return {\n\t\t\tstatus: 0,\n\t\t\tdisplayAmount: 0,\n\t\t\tdisplayPaidAmount: 0,\n\t\t\trefundedAmount: 0,\n\t\t\tInstalmentInfo: [],\n\t\t\titem: {},\n\t\t\tnovalnetComments: '',\n\t\t\tisNovalnetPayment: false,\n\t\t\trefundModalVisible: false,\n\t\t\tconfirmModalVisible: false,\n\t\t\tzeroAmountVisible: false,\n\t\t\tcancelModalVisible: false,\n\t\t\tcanInstalmentAllCancel: false,\n\t\t\tcanInstalmentRemainCancel: false,\n\t\t\tinstalmentRefundModalVisible: false,\n\t\t\tpayLater: [\n                'novalnetinvoice',\n                'novalnetprepayment',\n                'novalnetcashpayment',\n                'novalnetmultibanco'\n            ],\n            instalmentPayments: [\n                'novalnetinvoiceinstalment',\n                'novalnetsepainstalment'\n            ],\n            onholdStatus: ['91', '99', '98', '85']\n\t\t}\n\t},\n    \n    computed: {\n\n        getInstalmentColums() {\n            const columnDefinitions = [{\n                property: 'number',\n                dataIndex: 'number',\n                label: this.$tc('novalnet-payment.settingForm.instalmentNumber'),\n                width: '50px'\n            }, {\n                property: 'reference',\n                dataIndex: 'reference',\n                label: this.$tc('novalnet-payment.settingForm.instalmentReference'),\n                width: '120px'\n            },\n            {\n                property: 'amount',\n                dataIndex: 'amount',\n                label: this.$tc('novalnet-payment.settingForm.instalmentAmount'),\n                width: '80px'\n            }, {\n                property: 'totalAmount',\n                dataIndex: 'totalAmount',\n                visible: false\n            },\n             {\n                property: 'refundAmount',\n                dataIndex: 'refundAmount',\n                visible: false\n            },{\n                property: 'nextCycle',\n                dataIndex: 'nextCycle',\n                label: this.$tc('novalnet-payment.settingForm.instalmentDate'),\n                width: '120px'\n            }, {\n                property: 'status',\n                dataIndex: 'status',\n                label: this.$tc('novalnet-payment.settingForm.instalmentStatus'),\n                width: '80px'\n            }];\n\n            return columnDefinitions;\n        }\n    },\n\t\n\twatch: {\n        orderId: {\n            deep: true,\n            handler() {\n                if (!this.orderId) {\n                    this.setNovalnetPayment(false);\n                    return;\n                }\n\n                const orderRepository = this.repositoryFactory.create('order');\n                const orderCriteria = new Criteria(1, 1);\n                orderCriteria.addAssociation('transactions');\n                orderCriteria.addAssociation('currency');\n\n                orderCriteria.addFilter(Criteria.equals('id', this.orderId));\n\n                orderRepository.search(orderCriteria, Context.api).then((searchResult) => {\n                  const order = searchResult.first();\n\n                 if (!order) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.identifier) {\n\t\t\t\t\t\tthis.identifier = order.orderNumber;\n\t\t\t\t\t}\n\t\t\t\t\tlet isNovalnet  =   false;\n\t\t\t\t\tlet comments    =   '';\n\t\t\t\t\tlet translation = this.$tc('novalnet-payment.module.comments');\n\n\t\t\t\t\torder.transactions.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt) ).forEach((orderTransaction) => {\n\t\t\t\t\t\tif (orderTransaction.customFields &&\n\t\t\t\t\t\t\torderTransaction.customFields.novalnet_comments\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (this.stateMachineState == null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.stateMachineState = orderTransaction.stateMachineState.name;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tisNovalnet  = true;\n\t\t\t\t\t\t\tif(comments != '')\n                            {\n\t\t\t\t\t\t\t\tcomments  += \"<dt>\" + translation + \"</dt>\";\n\t\t\t\t\t\t\t}\n                            comments   += orderTransaction.customFields.novalnet_comments.split(\"/ \").join(\"<br />\");\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tif( isNovalnet ) {\n\t\t\t\t\t\tthis.novalnetComments  = comments;\n\t\t\t\t\t\tthis.setNovalnetPayment(true);\n\t\t\t\t\t\tthis.displayAmount = currency (order.price.totalPrice, order.currency.shortName);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.setNovalnetPayment(false);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.canCaptureVoid = false;this.canRefund = false;this.canZeroAmountBooking = false;this.canInstalmentCancel = false;this.canInstalmentShow = false;this.InstalmentInfo = [];\n\t\t\t\t\t\n\t\t\t\t\tthis.NovalPaymentApiCredentialsService.getNovalnetAmount(order.orderNumber).then((payment) => {\n\t\t\t\t\t\tif(payment.data != '' && payment.data != undefined)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(payment.data.gatewayStatus) {\n\t\t\t\t\t\t\t\tlet additionalDetails = JSON.parse(payment.data.additionalDetails);\n\t\t\t\t\t\t\t\tif(payment.data.gatewayStatus == 'ON_HOLD' || this.onholdStatus.includes(payment.data.gatewayStatus)) \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.canCaptureVoid = true;\n\t\t\t\t\t\t\t\t} else if (((payment.data.amount > 0 && payment.data.gatewayStatus == 'CONFIRMED' && !this.instalmentPayments.includes(payment.data.paymentType) && Number(payment.data.refundedAmount) < Number(payment.data.amount)) || (payment.data.gatewayStatus == 'PENDING' && this.payLater.includes(payment.data.paymentType))) && payment.data.paymentType != 'novalnetmultibanco'  ) \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.canRefund = true;\n\t\t\t\t\t\t\t\t} else if (this.instalmentPayments.includes(payment.data.paymentType) && payment.data.gatewayStatus == 'CONFIRMED' && !additionalDetails.cancelType)\n                                {\n                                    this.canInstalmentCancel = true;\n                                    \n                                } else if ((payment.data.paymentType == 'novalnetcreditcard' || payment.data.paymentType == 'novalnetsepa' || payment.data.paymentType == 'novalnetgooglepay' || payment.data.paymentType == 'novalnetapplepay' || payment.data.paymentType == 'novalnetdirectdebitach') && Number(payment.data.amount) == 0 && Number(order.price.totalPrice) != 0)\n                                {\n\t\t\t\t\t\t\t\t\tthis.canZeroAmountBooking = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tthis.refundableAmount = Number(payment.data.amount) - Number(payment.data.refundedAmount);\n\t\t\t\t\t\t\t\tthis.orderAmount      = Math.round(Number(order.price.totalPrice) * 100);\n\n\t\t\t\t\t\t\t\tif ( payment.data.amount != 0) {\n\t\t\t\t\t\t\t\t\tthis.displayAmount = currency (payment.data.amount / 100, order.currency.shortName);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.displayAmount = currency (order.price.totalPrice, order.currency.shortName);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (payment.data.paidAmount != 0) {\n\t\t\t\t\t\t\t\t\tthis.displayPaidAmount = currency (payment.data.paidAmount / 100, order.currency.shortName);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.displayPaidAmount = currency (0, order.currency.shortName);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (payment.data.refundedAmount != 0) {\n\t\t\t\t\t\t\t\t\tthis.refundedAmount = currency (payment.data.refundedAmount / 100, order.currency.shortName);\n\t\t\t\t\t\t\t\t} else {                \n\t\t\t\t\t\t\t\t\tthis.refundedAmount = currency (0, order.currency.shortName);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif( (this.instalmentPayments.includes(payment.data.paymentType)) && payment.data.gatewayStatus == 'CONFIRMED' && additionalDetails.InstalmentDetails != undefined && additionalDetails.InstalmentDetails != '')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.canInstalmentShow = true;\n\t\t\t\t\t\t\t\t\tvar counter = 1;\n\n\t\t\t\t\t\t\t\t\tObject.values(additionalDetails.InstalmentDetails).forEach(values => {\n\t\t\t\t\t\t\t\t\t    this.InstalmentInfo.push ({\n\t\t\t\t\t\t\t\t\t\t\t'amount': currency (values.amount / 100, order.currency.shortName),\n\t\t\t\t\t\t\t\t\t\t\t'totalAmount': values.amount,\n\t\t\t\t\t\t\t\t\t\t\t'nextCycle': ((additionalDetails.InstalmentDetails[counter + 1]) && (additionalDetails.InstalmentDetails[counter + 1].cycleDate)) ? additionalDetails.InstalmentDetails[counter + 1].cycleDate : '-',\n\t\t\t\t\t\t\t\t\t\t\t'reference': values.reference,\n\t\t\t\t\t\t\t\t\t\t\t'status': values.status,\n\t\t\t\t\t\t\t\t\t\t\t'refundAmount': values.refundAmount,\n\t\t\t\t\t\t\t\t\t\t\t'number': counter\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}).catch((errorResponse) => {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: `${errorResponse.title}: ${errorResponse.message}`\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t}).finally(() => {\n\t\t\t\t\tthis.setNovalnetPayment(false);\n\t\t\t\t});\n            },\n            immediate: true\n        }\n    },\n    \n    methods: {\n\t\tsetNovalnetPayment( novalnetPayment ) {\n            if( novalnetPayment ) {\n                this.isNovalnetPayment = novalnetPayment;\n            }\n        },\n        \n        showConfirmModal() {\n            this.status = 100;\n            this.confirmModalVisible = true;\n        },\n        \n        showRefundModal() {\n            this.refundModalVisible = true;\n        },\n        \n        closeModals() {\n\t\t\tthis.refundModalVisible = false;\n\t\t\tthis.confirmModalVisible = false;\n\t\t\tthis.cancelModalVisible = false;\n\t\t\tthis.zeroAmountVisible = false;\n\t\t\tthis.instalmentRefundModalVisible = false;\n\t\t},\n\t\t\n\t\tshowInstalmentAllCancelModal() {\n\t\t\tthis.instalmentRefundModalVisible = true;\n\t\t\tthis.cancelType = 'CANCEL_ALL_CYCLES';\n        },\n        \n        showInstalmentRemainCancelModal(){\n\t\t\tthis.instalmentRefundModalVisible = true;\n\t\t\tthis.cancelType = 'CANCEL_REMAINING_CYCLES';\n        },\n        \n        showCancelModal() {\n            this.status = 103;\n            this.cancelModalVisible = true;\n        },\n        \n        showZeroAmountBlock() {\n            this.zeroAmountVisible = true;\n        },\n        \n        reloadPaymentDetails() {\n\t\t\tthis.closeModals();\n\t\t\t// Wait for the next tick to trigger the reload. Otherwise the Modal won't be hidden correctly.\n\t\t\tthis.$nextTick().then(() => {\n\t\t\t\tthis.$emit('reload-payment');\n\t\t\t});\n\t\t},\n\n\t\tinstalmentRefund(item) {\n\t\t\tthis.refundableAmount = item.totalAmount - item.refundAmount;\n\t\t\tthis.item = item;\n\t\t\tthis.refundModalVisible = true;\n\t\t},\n\t\t\n\t\tshowInstalmentCancelModal() {\n            if (this.InstalmentInfo != undefined && this.InstalmentInfo != null)\n            {\n                this.InstalmentInfo.forEach(value => {\n                    if(value['reference'] == '' || value['reference'] == null)\n                    {\n                        this.canInstalmentRemainCancel = true;\n                    }\n                });\n            }\n            this.canInstalmentAllCancel = true;\n            this.canInstalmentCancel = false;\n        },\n        \n        disableInstalmentRefund(item) {\n            if( item.reference == undefined || item.reference == ''  || item.refundAmount >= item.totalAmount || !this.acl.can('novalnet_extension.editor'))\n            {\n                return true;\n            }\n    \n            return false;\n        }\n\t}\n});\n","export default \"{% block novalnet_payment_settings %}\\n    <sw-page class=\\\"novalnet-payment\\\">\\n        {% block novalnet_payment_settings_header %}\\n            <template #smart-bar-header>\\n                <h2>\\n                    {{ $tc('sw-settings.index.title') }}\\n                    <sw-icon name=\\\"regular-chevron-right-xs\\\" small></sw-icon>\\n                    {{ $tc('novalnet-payment.settingForm.title') }}\\n                </h2>\\n            </template>\\n        {% endblock %}\\n        \\n        {% block novalnet_payment_settings_actions %}\\n            <template #smart-bar-actions>\\n            \\n\\t\\t\\t\\t{% block novalnet_payment_actions_save %}\\n                    <sw-button-process v-model=\\\"isSaveSuccessful\\\"\\n                                       class=\\\"sw-settings-login-registration__save-action\\\"\\n                                       variant=\\\"primary\\\"\\n                                       :isLoading=\\\"isLoading\\\"\\n                                       :disabled=\\\"isLoading || !acl.can('novalnet_payment.editor')\\\"\\n                                       @click=\\\"onSave\\\">\\n                        {{ $tc('novalnet-payment.settingForm.buttons.save') }}\\n                    </sw-button-process>\\n                {% endblock %}\\n            \\n            </template>\\n        {% endblock %}\\n        \\n        {% block novalnet_payment_content %}\\n\\t\\t\\t\\n\\t\\t\\t<template #content>\\n\\t\\t\\t\\t{% block novalnet_payment_content_card %}\\n\\t\\t\\t\\t\\t<sw-card-view>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_sales_channel_config %}\\n\\t\\t\\t\\t\\t\\t\\t<sw-sales-channel-config v-model=\\\"config\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t ref=\\\"configComponent\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t domain=\\\"NovalnetPayment.settings\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t \\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_sales_channelconfig_card %}\\n\\t\\t\\t\\t\\t\\t\\t\\t  <template #select=\\\"{ onInput, selectedSalesChannelId, salesChannel}\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_sales_channelconfig_card_sales_channel %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-container class=\\\"novalnet-sales-channel\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-single-select v-model=\\\"selectedSalesChannelId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tlabelProperty=\\\"translated.name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvalueProperty=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:disabled=\\\"!acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:options=\\\"salesChannel\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t@change=\\\"onInput\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-single-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t\\t  </template>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_config_content_channel_config_cards %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"{ actualConfigData, allConfigs, selectedSalesChannelId }\\\">\\n                                        <div v-if=\\\"actualConfigData\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-tabs>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_credentials_card %}\\n                                                <sw-tabs-item class=\\\"novalnet-payment-configuration-global-config\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :route=\\\"{ name: 'novalnet.payment.detail.credentials', params: { id: $route.params.id, actualConfigData: actualConfigData } }\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :title=\\\"$tc('novalnet-payment.module.globalTitle')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.module.globalTitle') }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-tabs-item>\\n                                            {% endblock %}\\n                                            \\n                                            {% block novalnet_payment_content_card_channel_config_payment_card %}\\n                                                <sw-tabs-item class=\\\"novalnet-payment-configuration-payment-config\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :route=\\\"novalnetPaymentRoute\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :title=\\\"$tc('novalnet-payment.module.paymentTitle')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.module.paymentTitle') }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-tabs-item>\\n                                            {% endblock %}\\n                                            </sw-tabs>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_configuration_content_view %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<router-view :isLoading=\\\"isLoading\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :key=\\\"$route.params.id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :actualConfigData=\\\"actualConfigData\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :allConfigs=\\\"allConfigs\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :selectedSalesChannelId=\\\"selectedSalesChannelId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</router-view>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t \\n\\t\\t\\t\\t\\t\\t\\t</sw-sales-channel-config>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_loading %}\\n                            <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n                        {% endblock %}\\n                        \\t\\n\\t\\t\\t\\t\\t</sw-card-view>\\n\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t</template>\\n        {% endblock %}   \\n    </sw-page>\\n{% endblock %}\\n\";","import template from './novalnet-payment-settings.html.twig';\nimport './novalnet-payment-settings.scss';\n\nconst { Component, Mixin, Defaults } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.register('novalnet-payment-settings', {\n    template,\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('sw-inline-snippet')\n    ],\n\n    inject: [\n        'repositoryFactory',\n        'cacheApiService',\n        'acl',\n        'NovalPaymentApiCredentialsService'\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n            isValidating: false,\n            isSaveSuccessful: false,\n            isValidateSuccessful: false,\n            clientIdFilled: false,\n            clientSecretFilled: false,\n            config: {},\n            salesChannels: []\n        };\n    },\n\n    computed: {\n\n        validateButtonDisabled() {\n            return this.isLoading || this.isValidating;\n        },\n\n        novalnetConfigRoute() {\n            return {\n                name: 'novalnet.payment.detail.credentials'\n            };\n        },\n\n        novalnetPaymentRoute() {\n            return {\n                name: 'novalnet.payment.detail.configuration'\n            };\n        },\n\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    watch: {\n        config: {\n            handler() {\n                const defaultConfig = this.$refs.configComponent.allConfigs.null;\n                const salesChannelId = this.$refs.configComponent.selectedSalesChannelId;\n\n                if (salesChannelId === null) {\n                    this.clientIdFilled = !!this.config['NovalnetPayment.settings.clientId'];\n                } else {\n                    this.clientIdFilled = !!this.config['NovalnetPayment.settings.clientId']\n                        || !!defaultConfig['NovalnetPayment.settings.clientId'];\n                    this.clientSecretFilled = !!this.config['NovalnetPayment.settings.clientSecret'];\n                }\n            },\n            deep: true\n        }\n    },\n\n    methods: {\n\n\t\tcreatedComponent() {\n            this.isLoading = true;\n            const criteria = new Criteria();\n            criteria.addFilter(Criteria.equalsAny('typeId', [\n                Defaults.storefrontSalesChannelTypeId,\n                Defaults.apiSalesChannelTypeId\n            ]));\n            this.salesChannelRepository.search(criteria, Shopware.Context.api).then(res => {\n                res.add({\n                    id: null,\n                    translated: {\n                        name: this.$tc('sw-sales-channel-switch.labelDefaultOption')\n                    }\n                });\n                this.salesChannels = res;\n            }).finally(() => {\n                this.isLoading = false;\n            });\n        },\n\n\t\tonSave() {\n\t\t\tthis.isSaveSuccessful = false;\n            this.isLoading = true;\n            \n            const clientId = this.getConfigValue('clientId');\n            const accessKey = this.getConfigValue('accessKey');\n            \n            if(this.getConfigValue('clientId') !== '' && this.getConfigValue('clientId') !== undefined)\n            {\n\t\t\t\tconst clientId = this.getConfigValue('clientId').replace(/\\s/g, \"\");\n\t\t\t}\n\t\t\t\n\t\t\tif(this.getConfigValue('accessKey') !== '' && this.getConfigValue('accessKey') !== undefined)\n            {\n\t\t\t\tconst clientId = this.getConfigValue('accessKey').replace(/\\s/g, \"\");\n\t\t\t}\n            \n\n\t\t\tif (clientId == undefined || clientId == '')\n\t\t\t{\n\t\t\t\tthis.isLoading = false;\n\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleError'),\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.emptyMessage')\n\t\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t} else if(accessKey == undefined || accessKey == '') {\n\n\t\t\t\tthis.isLoading = false;\n\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleError'),\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.emptyAccessKeyMessage')\n\t\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.checkBackendConfiguration();\n\t\t},\n\n\t\tgetConfigValue(field) {\n            const defaultConfig = this.$refs.configComponent.allConfigs.null;\n            const salesChannelId = this.$refs.configComponent.selectedSalesChannelId;\n\n            if (salesChannelId === null) {\n                return this.config[`NovalnetPayment.settings.${field}`];\n            }\n\n            return this.config[`NovalnetPayment.settings.${field}`]\n                || defaultConfig[`NovalnetPayment.settings.${field}`];\n        },\n\n\t\tcheckBackendConfiguration() {\n\t\t\tconst me = this;\n\t\t\tconst clientId = this.getConfigValue('clientId').replace(/\\s/g, \"\");\n\t\t\tconst accessKey = this.getConfigValue('accessKey').replace(/\\s/g, \"\");\n\n\t\t\tthis.NovalPaymentApiCredentialsService.validateApiCredentials(clientId, accessKey).then((response) => {\n                this.isLoading = false;\n\n                if(response.serverResponse == undefined || response.serverResponse == '')\n                {\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleError'),\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.apiFailureMessage')\n\t\t\t\t\t});\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n                const status = response.serverResponse.result.status_code;\n                if(status != 100)\n                {\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleError'),\n\t\t\t\t\t\t\tmessage: response.serverResponse.result.status_text\n\t\t\t\t\t});\n\n\t\t\t\t\treturn;\n\t\t\t\t}else\n\t\t\t\t{\n\t\t\t\t\tresponse.tariffResponse.forEach(((tariff) => {\n\t\t\t\t\t\tif(this.config['NovalnetPayment.settings.tariff'] == undefined || this.config['NovalnetPayment.settings.tariff'] == '')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.config['NovalnetPayment.settings.tariff'] = tariff.id;\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\n\t\t\t\t\tthis.config['NovalnetPayment.settings.clientKey']\t= response.serverResponse.merchant.client_key;\n \t\t\t\t\t\n \t\t\t\t\tthis.$refs.configComponent.save().then((res) => {\n\t\t\t\t\t\tthis.isSaveSuccessful = true;\n\n\t\t\t\t\t\tif (res) {\n\t\t\t\t\t\t\tthis.config = res;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (this.acl.can('system.clear_cache')) {\n\t\t\t\t\t\t\tthis.cacheApiService.clear().then(() => {\n\t\t\t\t\t\t\t}).catch(() => {\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleSuccess'),\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.successMessage')\n\t\t\t\t\t\t});\n\t\t\t\t\t}).catch(() => {\n\t\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleError'),\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.errorMessage')\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\treturn;\n                }\n            }).catch((errorResponse) => {\n                    this.createNotificationError({\n                        title: this.$tc('novalnet-payment.settingForm.titleError'),\n                        message: this.$tc('novalnet-payment.settingForm.errorMessage')\n                    });\n                    this.isLoading = false;\n                    this.isTestSuccessful = false;\n            });\n\t\t},\n\n\t},\n\n    metaInfo() {\n        return {\n            title: this.$createTitle()\n        };\n    },\n});\n","import template from './novalnet-payment-credentials.html.twig';\nimport './novalnet-payment-credentials.scss';\n\nconst { Component, Mixin, Context} = Shopware;\nconst { Criteria } = Shopware.Data;\nconst { object, types } = Shopware.Utils;\n\nComponent.register('novalnet-payment-credentials', {\n    template,\n\n\tmixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('sw-inline-snippet')\n    ],\n\n\tname: 'NovalnetPaymentCredentials',\n\ticon: 'regular-cog',\n\n\tprops: {\n        actualConfigData: {\n            type: Object,\n            required: true\n        },\n        allConfigs: {\n            type: Object,\n            required: true\n        },\n        selectedSalesChannelId: {\n            required: true\n        },\n        domain: {\n            type: String,\n            required: true,\n            default: ''\n        }\n    },\n\n    data() {\n\t\tconst url = window.location .protocol + \"//\" + window.location.host + window.location.pathname;\n\t\tconst generatedUrl = url.split(\"/admin\").join(\"\");\n        return {\n\t\t\ttariffOptions: [],\n\t\t\tallConfigs: {},\n\t\t\tconfig: {},\n\t\t\tactualConfigData: {},\n\t\t\tshouldDisable: false,\n\t\t\tprojectMode: false,\n\t\t\tisLoading: false,\n\t\t\tisRequested : '',\n\t\t\tapiActivationKey: '',\n\t\t\ttariffId: '',\n\t\t\tshowMessage: false,\n\t\t\tNovalnetPaymentCallBackUrl : generatedUrl + \"/novalnet/callback\",\n\t\t\tpaymentAccessKey: '',\n\t\t\tbuttonLoad: false,\n\t\t\tgeneralInformation: this.$tc('novalnet-payment.module.generalInfo'),\n\t\t\tinstallationInformation: this.$tc('novalnet-payment.module.installationInfo')\n\t\t}\n\t},\n\n\tinject: [\n        'repositoryFactory',\n        'NovalPaymentApiCredentialsService',\n        'systemConfigApiService',\n        'acl',\n    ],\n\n    watch: {\n        actualConfigData: {\n            handler(configData) {\n\t\t\t\t\n                if (!configData) {\n                    return;\n                }\n                this.$emit('input', configData);\n            },\n            deep: true\n        }\n    },\n\n    computed: {\n        actualConfigData: {\n            get() {\n                return this.allConfigs[this.selectedSalesChannelId];\n            },\n            set(config) {\n                this.allConfigs = {\n                    ...this.allConfigs,\n                    [this.selectedSalesChannelId]: config\n                };\n            }\n        },\n    },\n\n\tcreated() {\n\t\tthis.createdComponent();\n    },\n\n    updated() {\n\t\tthis.createdComponent();\n\t},\n\n    methods: {\n        checkTextFieldInheritance(value) {\n            if (typeof value !== 'string') {\n                return true;\n            }\n\n            return value.length <= 0;\n        },\n\n        checkBoolFieldInheritance(value) {\n            return typeof value !== 'boolean';\n        },\n\n        checkNumberFieldInheritance(value) {\n            return typeof value !== 'int';\n        },\n        \n        getInheritValue(key) {\n            if (this.selectedSalesChannelId == null ) {\n\t\t\t\treturn this.actualConfigData[key];\n\t\t\t} else {\n\t\t\t\treturn this.allConfigs['null'][key];\n\t\t\t}\n        },\n\n        onCheckApi() {\n\t\t\tif(event.target.name === 'NovalnetPayment.settings.clientId') {\n\t\t\t\tthis.apiActivationKey = this.actualConfigData['NovalnetPayment.settings.clientId'] = event.target.value;\n\t\t\t} else if(event.target.name === 'NovalnetPayment.settings.accessKey') {\n\t\t\t\tthis.paymentAccessKey = this.actualConfigData['NovalnetPayment.settings.accessKey'] = event.target.value;\n\t\t\t}\n\n\t\t\tif (this.apiActivationKey === '' && this.paymentAccessKey === '')\n\t\t\t{\n\n\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleError'),\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.apiFailureMessage')\n\t\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.isRequested = '';\n\t\t\tthis.showMessage = true;\n\t\t\tthis.createdComponent();\n\t\t},\n\n        createdComponent() {\n\t\t\tconst me = this;\n\n\t\t\tif(this.actualConfigData !== undefined && this.isRequested !== this.selectedSalesChannelId)\n\t\t\t{\n\t\t\t\tthis.isRequested\t\t= this.selectedSalesChannelId;\n\t\t\t\tthis.apiActivationKey\t= this.actualConfigData['NovalnetPayment.settings.clientId'] || this.allConfigs.null['NovalnetPayment.settings.clientId'];\n\t\t\t\tthis.paymentAccessKey\t= (this.actualConfigData['NovalnetPayment.settings.accessKey'] || this.allConfigs.null['NovalnetPayment.settings.accessKey']);\n\n\t\t\t\tif(this.apiActivationKey !== undefined && this.apiActivationKey !== '' && this.paymentAccessKey !== undefined && this.paymentAccessKey !== '' )\n\t\t\t\t{\n                    this.apiActivationKey = this.apiActivationKey.replace(/\\s/g, \"\");\n                    this.paymentAccessKey = this.paymentAccessKey.replace(/\\s/g, \"\");\n\t\t\t\t\tthis.isLoading = true;\n\t\t\t\t\tthis.NovalPaymentApiCredentialsService.validateApiCredentials(this.apiActivationKey, this.paymentAccessKey).then((response) => {\n\t\t\t\t\t\tconst status = response.serverResponse.result.status_code;\n\t\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\t\tif(status !== 100)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(this.showMessage === true)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleError'),\n\t\t\t\t\t\t\t\t\tmessage: response.serverResponse.result.status_text,\n\t\t\t\t\t\t\t\t\tautoClose: true\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.showMessage = false;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tme.tariffOptions = [];\n\t\t\t\t\t\t\tresponse.tariffResponse.forEach(((tariff) => {\n\n\t\t\t\t\t\t\t\tthis.actualConfigData['NovalnetPayment.settings.clientKey']\t= response.serverResponse.merchant.client_key;\n\n\t\t\t\t\t\t\t\tme.tariffOptions.push({\n\t\t\t\t\t\t\t\t\tvalue: tariff.id,\n\t\t\t\t\t\t\t\t\tlabel: tariff.name\n\t\t\t\t\t\t\t\t});\n\n                                if(this.tariffId === undefined || this.tariffId === '')\n                                {\n                                    this.tariffId = tariff.id;\n                                }\n\n\t\t\t\t\t\t\t\tif(this.showMessage === true)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleSuccess'),\n\t\t\t\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.successMessage'),\n\t\t\t\t\t\t\t\t\t\tautoClose: true\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthis.showMessage = false;\n\t\t\t\t\t\t\t\tif(response.serverResponse.merchant.test_mode === 1)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.projectMode = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}));\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}).catch((errorResponse) => {\n\t\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n        configureWebhookUrl() {\n\t\t\tconst productActivationKey\t= this.apiActivationKey || this.actualConfigData['NovalnetPayment.settings.clientKey'];\n\t\t\tconst accessKey\t\t\t\t= this.paymentAccessKey || this.actualConfigData['NovalnetPayment.settings.accessKey'];\n\n\t\t\tif ( productActivationKey === undefined || productActivationKey === '' || accessKey === undefined || accessKey === '')\n\t\t\t{\n\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleError'),\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.apiFailureMessage')\n\t\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif( this.NovalnetPaymentCallBackUrl)\n\t\t\t{\n\t\t\t\tif (/^(http|https):\\/\\/[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,}(:[0-9]{1,5})?(\\/.*)?$/i.test(this.NovalnetPaymentCallBackUrl) === false)\n\t\t\t\t{\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.webhookUrlFailure')\n\t\t\t\t\t});\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tthis.buttonLoad = true;\n\n\t\t\t\tthis.NovalPaymentApiCredentialsService.configureWebhookUrl(this.NovalnetPaymentCallBackUrl, productActivationKey, accessKey).then((response) => {\n\n\t\t\t\t\t\tif(response.result.status !== undefined && response.result.status != null && response.result.status !== '' && response.result.status === 'SUCCESS')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.webhookUrlSuccess')\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else if(response.result.status_text !== undefined && response.result.status_text != null && response.result.status_text !== '') {\n\t\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\t\tmessage: response.result.status_text,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.webhookUrlFailure')\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\tthis.buttonLoad = false;\n\n\t\t\t\t}).catch((errorResponse) => {\n\t\t\t\t\tthis.buttonLoad = false;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n    }\n\n});\n","export default \"{% block novalnet_payment_content_card_channel_config_credentials %}\\n<sw-card-view style=\\\"position: relative;\\\">\\n\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet-payment-settings-fields\\\">\\n\\t\\t<sw-card class=\\\"sw-card--grid\\\"\\n\\t\\t\\t\\t :title=\\\"$tc('novalnet-payment.settingForm.credentials.cardTitle')\\\">\\n\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_credentials_card_container %}\\n\\t\\t\\t\\t<sw-container>\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_credentials_card_container_settings %}\\n\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t<sw-alert v-if=\\\"projectMode\\\" variant=\\\"info\\\" appearance=\\\"default\\\" :showIcon=\\\"true\\\" :closable=\\\"false\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.module.projectInfo') }}\\n\\t\\t\\t\\t\\t\\t</sw-alert>\\n\\n\\t\\t\\t\\t\\t\\t<div v-html=\\\"generalInformation\\\" class=\\\"novalnet_payment-settings-project\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div v-html=\\\"installationInformation\\\" class=\\\"novalnet_payment-settings-project\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<br>\\n\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_credentials_card_container_settings_client_id %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.clientId']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.clientId']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.clientId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"apiActivationKey == null ? props.currentValue : apiActivationKey\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.credentials.activationKey.label') | raw \\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.credentials.activationKey.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"!acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"onCheckApi\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.accessKey']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.accessKey']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.accessKey\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"paymentAccessKey == null ? props.currentValue : paymentAccessKey\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t    autocomplete=\\\"off\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.credentials.accessKey.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.credentials.accessKey.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"!acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"onCheckApi\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_credentials_card_container_settings_break %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_credentials_card_container_settings_client_secret %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.clientKey']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.clientKey']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.clientKey\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   v-show=\\\"shouldDisable\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"!acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.tariff']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.tariff']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-single-select name=\\\"NovalnetPayment.settings.tariff\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :v-model=\\\"tariffId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :options=\\\"tariffOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :label=\\\"$tc('novalnet-payment.settingForm.credentials.tariff.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :helpText=\\\"$tc('novalnet-payment.settingForm.credentials.tariff.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :disabled=\\\"!acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  @change=\\\"props.updateCurrentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-single-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.emailMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.emailMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\"  >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.emailMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.credentials.orderEmailMode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.credentials.orderEmailMode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_loading %}\\n                        <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n                    {% endblock %}\\n\\n\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n\\t{% block novalnet_payment_content_card_channel_config_merchant_credentials %}\\n\\t\\t<sw-card class=\\\"sw-card--grid\\\"\\n\\t\\t\\t\\t :title=\\\"$tc('novalnet-payment.settingForm.merchantSettings.cardTitle')\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_merchant_credentials_card_container %}\\n\\t\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_merchant_credentials_card_container_settings %}\\n\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-merchant-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_merchant_credentials_card_container_settings_ip %}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.callbackUrl']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.callbackUrl']\\\"\\n                                                    >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.callbackUrl\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   v-model=\\\"NovalnetPaymentCallBackUrl\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   class=\\\"novalnet-payment-callback-field\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t    :label=\\\"$tc('novalnet-payment.settingForm.merchantSettings.callbackUrl.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t    :helpText=\\\"$tc('novalnet-payment.settingForm.merchantSettings.callbackUrl.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"!acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-button-process :disabled=\\\"false || !acl.can('novalnet_payment.editor')\\\" :isLoading=\\\"buttonLoad\\\"  @click=\\\"configureWebhookUrl()\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.merchantSettings.callbackUrl.button') }}\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-button-process>\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.deactivateIp']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.deactivateIp']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.deactivateIp\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :label=\\\"$tc('novalnet-payment.settingForm.merchantSettings.deactivateIp.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :helpText=\\\"$tc('novalnet-payment.settingForm.merchantSettings.deactivateIp.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.mailTo']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.mailTo')\\\"\\n                                                    :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.mailTo')\\\"\\n                                                    :label=\\\"$tc('novalnet-payment.settingForm.merchantSettings.mailTo.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:helpText=\\\"$tc('novalnet-payment.settingForm.merchantSettings.mailTo.tooltipText')\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.mailTo\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :isInherited=\\\"props.isInherited\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t</div>\\n</sw-card-view>\\n{% endblock %}\\n\";","import template from './novalnet-payment-settings-icon.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.register('novalnet-payment-settings-icon', {\n    template\n});\n","export default \"{% block novalnet_payment_settings_icon %}\\n    <img class=\\\"sw-settings-index__novalnet-payment-icon\\\" :src=\\\"'novalnetpayment/administration/plugin.png' | asset\\\">\\n{% endblock %}\\n\";","import template from './novalnet-payment-configuration.html.twig';\nimport './novalnet-payment-configuration.scss';\n\nconst { Component } = Shopware;\n\nComponent.register('novalnet-payment-configuration', {\n    template,\n\n\tname: 'NovalnetPaymentConfiguration',\n\ticon: 'regular-cog',\n\t\n\tinject: ['acl'],\n\n\tprops: {\n        actualConfigData: {\n            type: Object,\n            required: true\n        },\n        allConfigs: {\n            type: Object,\n            required: true\n        },\n        selectedSalesChannelId: {\n            required: true\n        }\n    },\n\n    data() {\n        return {\n            selected: 'capture',\n            paypalInformation: this.$tc('novalnet-payment.settingForm.paymentSettings.paypal.configureLink'),\n            sellerNamePlaceHolder: window.location.host\n        };\n    },\n\n    computed: {\n\t\tonholdOptions() {\n            return [\n                {\n                    id: 'capture',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.onHold.capture')\n                },\n                {\n                    id: 'authroize',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.onHold.authroize')\n                }\n            ];\n        },\n        onHoldZeroOptions() {\n            return [\n                {\n                    id: 'capture',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.onHold.capture')\n                },\n                {\n                    id: 'authroize',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.onHold.authroize')\n                },\n                {\n                    id: 'zero_amount',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.onHold.zeroAmountBooking')\n                }\n            ];\n        },\n        onCaptureZeroOptions() {\n            return [\n                {\n                    id: 'capture',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.onHold.capture')\n                },\n                {\n                    id: 'zero_amount',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.onHold.zeroAmountBooking')\n                }\n            ];\n        },\n        displayFieldOptions() {\n            return [\n                {\n                    id: 'cart',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.displayFields.cartPage')\n                },\n                {\n                    id: 'register',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.displayFields.registerPage')\n                },\n                {\n                    id: 'ajaxCart',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.displayFields.miniCartPage')\n                },\n                {\n                    id: 'productDetailPage',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.displayFields.productPage')\n                },\n                {\n                    id: 'productListingPage',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.displayFields.productListingPage')\n                }\n            ];\n        },\n        buttonThemeOptions() {\n            return [\n                {\n                    id: 'black',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonTheme.dark')\n                },\n                {\n                    id: 'white',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonTheme.light')\n                },\n                {\n                    id: 'white-outline',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonTheme.outline')\n                }\n            ];\n        },\n        buttonGpayThemeOptions() {\n            return [\n                {\n                    id: 'default',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonTheme.default')\n                },\n                {\n                    id: 'black',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonTheme.black')\n                },\n                {\n                    id: 'white',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonTheme.white')\n                }\n            ];\n        },\n        buttonTypeOptions() {\n            return [\n                {\n                    id: 'plain',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.default')\n                },\n                {\n                    id: 'buy',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.buy')\n                },\n                {\n                    id: 'donate',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.donate')\n                },\n                {\n                    id: 'book',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.book')\n                },\n                {\n                    id: 'contribute',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.contribute')\n                },\n                {\n                    id: 'check-out',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.checkout')\n                },\n                {\n                    id: 'order',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.order')\n                },\n                {\n                    id: 'pay',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.pay')\n                },\n                {\n                    id: 'subscribe',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.subscribe')\n                },\n                {\n                    id: 'tip',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.tip')\n                },\n                {\n                    id: 'rent',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.rent')\n                },\n                {\n                    id: 'reload',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.reload')\n                },\n                {\n                    id: 'support',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.support')\n                }\n            ];\n        },\n        buttonGpayTypeOptions() {\n            return [\n                {\n                    id: 'book',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonType.book')\n                },\n                {\n                    id: 'buy',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonType.buy')\n                },\n                {\n                    id: 'checkout',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonType.checkout')\n                },\n                {\n                    id: 'donate',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonType.donate')\n                },\n                {\n                    id: 'order',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonType.order')\n                },\n                {\n                    id: 'pay',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonType.pay')\n                },\n                {\n                    id: 'plain',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonType.plain')\n                },\n                {\n                    id: 'subscribe',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonType.subscribe')\n                }\n            ];\n        },\n        instalmentOptions() {\n\n\t\t\tlet options = [];\n\t\t\tconst cycles = ['2','3','4','5','6','7','8','9','10','11','12','15','18','21','24', '36'];\n\t\t\tconst translated = this.$tc('novalnet-payment.settingForm.paymentSettings.instalmentCycleInfo.cycle');\n\t\t\tcycles.forEach(function(index) {\n\t\t\t\toptions.push({\n\t\t\t\t\tid: index,\n\t\t\t\t\tname: index + translated\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn options;\n\t\t}\n\t},\n\n    methods: {\n        checkTextFieldInheritance(value) {\n            if (typeof value !== 'string') {\n                return true;\n            }\n            return value.length <= 0;\n        },\n\n        checkBoolFieldInheritance(value) {\n\n            return typeof value !== 'boolean';\n        },\n        \n        getInheritValue(key) {\n            if (this.selectedSalesChannelId == null ) {\n\t\t\t\treturn this.actualConfigData[key];\n\t\t\t} else {\n\t\t\t\treturn this.allConfigs['null'][key];\n\t\t\t}\n        },\n    }\n});\n","export default \"{% block novalnet_payment_content_card_channel_config_payment %}\\n<sw-card-view style=\\\"position: relative;\\\">\\n    <sw-card class=\\\"sw-card--grid\\\">\\n        {% block novalnet_payment_content_card_channel_config_payment_card_sepa_container %}\\n            <sw-container>\\n                <sw-collapse>\\n\\n                    <div slot=\\\"header\\\">\\n                        <div class=\\\"novalnet_payment_card_title\\\">\\n                                {{ $tc('novalnet-payment.settingForm.paymentSettings.sepa.cardTitle') }}\\n                        </div>\\n                        <div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n                            <sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n                            </sw-icon>\\n                        </div>\\n                        </div>\\n\\n                    <div slot=\\\"content\\\">\\n                        {% block novalnet_payment_content_card_channel_config_payment_card_sepa_container_settings %}\\n                            <div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_sepa %}\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.sepaTestMode']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepaTestMode']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.sepaTestMode\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :isInherited=\\\"props.isInherited\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\" \\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.sepaOneclick']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepaOneclick']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.sepaOneclick\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.oneclick.label')\\\"\\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.oneclick.tooltipText')\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :isInherited=\\\"props.isInherited\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.sepaDueDate']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.sepaDueDate')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.sepaDueDate')\\\" \\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.sepa.dueDate.label')\\\"\\n                                                        :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.sepa.dueDate.tooltipText')\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-number-field name=\\\"NovalnetPayment.settings.sepaDueDate\\\"\\n                                                             numberType=\\\"int\\\"\\n                                                             :min=\\\"2\\\"\\n                                                             :max=\\\"14\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             :isInherited=\\\"props.isInherited\\\"\\n                                                             :value=\\\"props.currentValue\\\"\\n                                                             @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-number-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.sepaOnHold']\\\"\\n\\t\\t\\t\\t\\t\\t\\t                            :has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.sepaOnHold')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.sepaOnHold')\\\"\\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.label')\\\"\\n                                                        :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.tooltipText')\\\"\\n                                                        >\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-single-select name=\\\"NovalnetPayment.settings.sepaOnHold\\\"\\n                                                              labelProperty=\\\"name\\\"\\n                                                              valueProperty=\\\"id\\\"\\n                                                              :options=\\\"onHoldZeroOptions\\\"\\n                                                              :mapInheritance=\\\"props\\\"\\n                                                              :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                              :isInherited=\\\"props.isInherited\\\"\\n                                                              :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n                                                              @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-single-select>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.sepaOnHoldAmount']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepaOnHoldAmount']\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-number-field name=\\\"NovalnetPayment.settings.sepaOnHoldAmount\\\"\\n                                                             numberType=\\\"int\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountLabel')\\\"\\n                                                             :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip')\\\"\\n                                                             :value=\\\"props.currentValue == 0 ? null : props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-number-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.sepaNotify']\\\"\\n                                                         :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepaNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\"\\n                                                        >\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-text-field name=\\\"NovalnetPayment.settings.sepaNotify\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\"\\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-text-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                </sw-collapse>\\n            </sw-container>\\n        {% endblock %}\\n    </sw-card>\\n    \\n     <sw-card class=\\\"sw-card--grid\\\">\\n        {% block novalnet_payment_content_card_channel_config_payment_card_directdebitach_container %}\\n            <sw-container>\\n                <sw-collapse>\\n\\n                    <div slot=\\\"header\\\">\\n                        <div class=\\\"novalnet_payment_card_title\\\">\\n                                {{ $tc('novalnet-payment.settingForm.paymentSettings.directdebitach.cardTitle') }}\\n                        </div>\\n                        <div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n                            <sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n                            </sw-icon>\\n                        </div>\\n                        </div>\\n\\n                    <div slot=\\\"content\\\">\\n                        {% block novalnet_payment_content_card_channel_config_payment_card_sepa_container_settings %}\\n                            <div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_directdebitach %}\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.directdebitachTestMode']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.directdebitachTestMode']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.directdebitachTestMode\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :isInherited=\\\"props.isInherited\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\" \\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.directdebitachOneclick']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.directdebitachOneclick']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.directdebitachOneclick\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.oneclick.label')\\\"\\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.oneclick.tooltipText')\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :isInherited=\\\"props.isInherited\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    \\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.directdebitachOnHold']\\\"\\n\\t\\t\\t\\t\\t\\t\\t                            :has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.directdebitachOnHold')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.directdebitachOnHold')\\\"\\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.label')\\\"\\n                                                        :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.tooltipText')\\\"\\n                                                        >\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-single-select name=\\\"NovalnetPayment.settings.directdebitachOnHold\\\"\\n                                                              labelProperty=\\\"name\\\"\\n                                                              valueProperty=\\\"id\\\"\\n                                                              :options=\\\"onCaptureZeroOptions\\\"\\n                                                              :mapInheritance=\\\"props\\\"\\n                                                              :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                              :isInherited=\\\"props.isInherited\\\"\\n                                                              :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n                                                              @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-single-select>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    \\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.directdebitacNotify']\\\"\\n                                                         :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.directdebitacNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\"\\n                                                        >\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-text-field name=\\\"NovalnetPayment.settings.directdebitacNotify\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\"\\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-text-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                </sw-collapse>\\n            </sw-container>\\n        {% endblock %}\\n    </sw-card>\\n\\n    <sw-card class=\\\"sw-card--grid\\\">\\n\\n        {% block novalnet_payment_content_card_channel_config_payment_card_sepaguarantee_container %}\\n            <sw-container>\\n                <sw-collapse>\\n\\n                    <div slot=\\\"header\\\">\\n                        <div class=\\\"novalnet_payment_card_title\\\">\\n                                {{ $tc('novalnet-payment.settingForm.paymentSettings.sepaguarantee.cardTitle') }}\\n                        </div>\\n                        <div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n                            <sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n                            </sw-icon>\\n                        </div>\\n                        </div>\\n\\n                    <div slot=\\\"content\\\">\\n                        {% block novalnet_payment_content_card_channel_config_payment_card_sepaguarantee_container_settings %}\\n                            <div class=\\\"guarantee_conditions\\\">\\n                                <p class=\\\"guarantee_condtions_headings\\\">{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.title') }}<p/>\\n                                    <p>\\n                                        <ul class=\\\"guarantee_condtions_list\\\">\\n                                            <li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.country') }}</li>\\n                                            <li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.b2b') }}</li>\\n                                            <li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.currency') }}</li>\\n                                            <li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.amount') }}</li>\\n                                            <li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.age') }}</li>\\n                                            <li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.address') }}</li>\\n                                        </ul>\\n                                    </p>\\n                            </div>\\n                            <div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_sepaguarantee %}\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.sepaguaranteeTestMode']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepaguaranteeTestMode']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.sepaguaranteeTestMode\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :isInherited=\\\"props.isInherited\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.sepaguaranteeOneclick']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepaguaranteeOneclick']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.sepaguaranteeOneclick\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :isInherited=\\\"props.isInherited\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.oneclick.label')\\\"\\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.oneclick.tooltipText')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.sepaguaranteeMinimumOrderAmount']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepaguaranteeMinimumOrderAmount']\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-number-field name=\\\"NovalnetPayment.settings.sepaguaranteeMinimumOrderAmount\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :min=\\\"999\\\"\\n                                                           :allowEmpty=\\\"false\\\"\\n                                                           numberType=\\\"integer\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.label')\\\"\\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.tooltipText')\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-number-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.sepaguaranteeOnHold']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.sepaguaranteeOnHold')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.sepaguaranteeOnHold')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-single-select name=\\\"NovalnetPayment.settings.sepaguaranteeOnHold\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  labelProperty=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  valueProperty=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :options=\\\"onholdOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :isInherited=\\\"props.isInherited\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-single-select>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    \\n                                     <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.sepaguaranteeOnHoldAmount']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepaguaranteeOnHoldAmount']\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-number-field name=\\\"NovalnetPayment.settings.sepaguaranteeOnHoldAmount\\\"\\n                                                             numberType=\\\"int\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountLabel')\\\"\\n                                                             :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip')\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             :value=\\\"props.currentValue == 0 ? null : props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-number-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.sepaguaranteeForceGuarantee']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepaguaranteeForceGuarantee']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.sepaguaranteeForceGuarantee\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.forceGuarantee.label')\\\"\\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.forceGuarantee.tooltipText')\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :isInherited=\\\"props.isInherited\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <div class=\\\"novalnet_payment_force_guarantee_enable_condtion\\\">{{ $tc('novalnet-payment.settingForm.paymentSettings.forceGuarantee.sepacondition') }}</div>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.sepaguaranteeAllowB2B']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepaguaranteeAllowB2B']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.sepaguaranteeAllowB2B\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.allowB2B.label')\\\"\\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.allowB2B.tooltipText')\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :isInherited=\\\"props.isInherited\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.sepaguaranteeNotify']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepaguaranteeNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\"\\n                                                        >\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-text-field name=\\\"NovalnetPayment.settings.sepaguaranteeNotify\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\"\\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n                                                           :isInherited=\\\"props.isInherited\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-text-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                </sw-collapse>\\n            </sw-container>\\n        {% endblock %}\\n    </sw-card>\\n    <sw-card class=\\\"sw-card--grid\\\">\\n\\n        {% block novalnet_payment_content_card_channel_config_payment_card_container %}\\n            <sw-container>\\n                <sw-collapse>\\n                    <div slot=\\\"header\\\">\\n                        <div class=\\\"novalnet_payment_card_title\\\">\\n                                {{ $tc('novalnet-payment.settingForm.paymentSettings.creditcard.cardTitle') }}\\n                        </div>\\n                        <div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n                            <sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n                            </sw-icon>\\n                        </div>\\n                        </div>\\n                    <div slot=\\\"content\\\">\\n\\n                        {% block novalnet_payment_content_card_channel_config_payment_card_container_settings %}\\n                            <div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_creditcard %}\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.creditcardTestMode']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.creditcardTestMode']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.creditcardTestMode\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.creditcardOneclick']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.creditcardOneclick']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.creditcardOneclick\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.oneclick.label')\\\"\\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.oneclick.tooltipText')\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.creditcardInline']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.creditcardInline']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.creditcardInline\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.creditcard.inline.label')\\\"\\n                                                             :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.creditcard.inline.tooltipText')\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             :value=\\\"props.currentValue\\\"\\n                                                             @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.creditcardEnforcecc3D']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.creditcardEnforcecc3D']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.creditcardEnforcecc3D\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.creditcard.enforcecc3D.label')\\\"\\n                                                             :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.creditcard.enforcecc3D.tooltipText')\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             :value=\\\"props.currentValue\\\"\\n                                                             @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.creditcardOnHold']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.creditcardOnHold')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.creditcardOnHold')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.label')\\\"\\n                                                :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.tooltipText')\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-single-select name=\\\"NovalnetPayment.settings.creditcardOnHold\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :mapInheritance=\\\"props\\\"\\n                                                              labelProperty=\\\"name\\\"\\n                                                              valueProperty=\\\"id\\\"\\n                                                              :options=\\\"onHoldZeroOptions\\\"\\n                                                              :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                              :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n                                                              @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-single-select>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                   <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.creditcardOnHoldAmount']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.creditcardOnHoldAmount']\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-number-field name=\\\"NovalnetPayment.settings.creditcardOnHoldAmount\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             numberType=\\\"int\\\"\\n                                                             :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountLabel')\\\"\\n                                                             :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip')\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             :value=\\\"props.currentValue == 0 ? null : props.currentValue\\\"\\n                                                             @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-number-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.creditcardNotify']\\\"\\n                                                :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.creditcardNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-text-field name=\\\"NovalnetPayment.settings.creditcardNotify\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :isInherited=\\\"props.isInherited\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\"\\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-text-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n\\n                        <div class=\\\"novalnet_payment_css_card_title\\\">\\n                                {{ $tc('novalnet-payment.settingForm.paymentSettings.creditcard.css.cardTitle') }}\\n                        </div>\\n\\n                        {% block novalnet_payment_content_card_channel_config_payment_card_css_container_settings %}\\n                            <div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_creditcard_css %}\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.creditcardLabel']\\\"\\n                                                :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.creditcardLabel']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-text-field name=\\\"NovalnetPayment.settings.creditcardLabel\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.creditcardLabel')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.creditcard.css.label')\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-text-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.creditcardInput']\\\"\\n                                                :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.creditcardInput']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-text-field name=\\\"NovalnetPayment.settings.creditcardInput\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.creditcard.css.input')\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-text-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.creditcardCss']\\\"\\n                                                       :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.creditcardCss']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-text-field name=\\\"NovalnetPayment.settings.creditcardCss\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.creditcard.css.css')\\\">\\n                                            </sw-text-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n\\n                    </div>\\n                </sw-collapse>\\n            </sw-container>\\n        {% endblock %}\\n    </sw-card>\\n    \\n    <sw-card class=\\\"sw-card--grid\\\">\\n        {% block novalnet_payment_content_card_channel_config_payment_card_applepay_container %}\\n            <sw-container>\\n                <sw-collapse>\\n                    <div slot=\\\"header\\\">\\n                        <div class=\\\"novalnet_payment_card_title\\\">\\n                                {{ $tc('novalnet-payment.settingForm.paymentSettings.applepay.cardTitle') }}\\n                        </div>\\n                        <div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n                            <sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n                            </sw-icon>\\n                        </div>\\n                        </div>\\n\\n                    <div slot=\\\"content\\\">\\n                        {% block novalnet_payment_content_card_channel_config_payment_card_applepay_container_settings %}\\n                            <div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_applepay %}\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.applepayTestMode']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.applepayTestMode']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.applepayTestMode\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.applepayOnHold']\\\"\\n                                                        :has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.applepayOnHold')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.applepayOnHold')\\\"\\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.label')\\\"\\n                                                        :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.tooltipText')\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-single-select name=\\\"NovalnetPayment.settings.applepayOnHold\\\"\\n                                                              labelProperty=\\\"name\\\"\\n                                                              valueProperty=\\\"id\\\"\\n                                                              :mapInheritance=\\\"props\\\"\\n                                                              :options=\\\"onHoldZeroOptions\\\"\\n                                                              :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                              :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n                                                              @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-single-select>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.applepayOnHoldAmount']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.applepayOnHoldAmount']\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-number-field name=\\\"NovalnetPayment.settings.applepayOnHoldAmount\\\"\\n                                                             numberType=\\\"int\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountLabel')\\\"\\n                                                             :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip')\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             :value=\\\"props.currentValue == 0 ? null : props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-number-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.applepaySellerName']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.applepaySellerName']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-text-field name=\\\"NovalnetPayment.settings.applepaySellerName\\\"\\n                                                           :mapInheritance=\\\"props\\\"  \\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.applepay.sellerName.label')\\\" \\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.applepay.sellerName.tooltipText')\\\"\\n                                                           :placeholder=\\\"sellerNamePlaceHolder\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-text-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                     <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.applepayNotify']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.applepayNotify']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-text-field name=\\\"NovalnetPayment.settings.applepayNotify\\\"\\n                                                           :mapInheritance=\\\"props\\\"  :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-text-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n\\n                                    <div class=\\\"novalnet_payment_applepay\\\">{{ $tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonTitle') }}</div>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.applepayButtonType']\\\"\\n                                                        :has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.applepayButtonType')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.applepayButtonType')\\\"\\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonTypeLabel')\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-single-select name=\\\"NovalnetPayment.settings.applepayButtonType\\\"\\n                                                              labelProperty=\\\"name\\\"\\n                                                              valueProperty=\\\"id\\\"\\n                                                              :mapInheritance=\\\"props\\\"\\n                                                              :options=\\\"buttonTypeOptions\\\"\\n                                                              :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                              :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n                                                              @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-single-select>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.applepayButtonTheme']\\\"\\n                                                        :has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.applepayButtonTheme')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.applepayButtonTheme')\\\"\\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonTheme.label')\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-single-select name=\\\"NovalnetPayment.settings.applepayButtonTheme\\\"\\n                                                              labelProperty=\\\"name\\\"\\n                                                              valueProperty=\\\"id\\\"\\n                                                              :options=\\\"buttonThemeOptions\\\"\\n                                                              :mapInheritance=\\\"props\\\"\\n                                                              :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                              :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n                                                              @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-single-select>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.applepayButtonHeight']\\\"\\n                                                        :has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.applepayButtonHeight')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.applepayButtonHeight')\\\"\\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonHeight.label')\\\" \\n                                                        :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonHeight.tooltipText')\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-number-field name=\\\"NovalnetPayment.settings.applepayButtonHeight\\\"\\n                                                             numberType=\\\"int\\\" \\n                                                             :step=\\\"null\\\" \\n                                                             :min=\\\"30\\\" \\n                                                             :max=\\\"64\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             :value=\\\"props.currentValue\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-number-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.applepayButtonRadius']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.applepayButtonRadius']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-number-field name=\\\"NovalnetPayment.settings.applepayButtonRadius\\\"\\n                                                             numberType=\\\"int\\\" \\n                                                             :step=\\\"null\\\" \\n                                                             :min=\\\"0\\\" \\n                                                             :max=\\\"10\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonRadius.label')\\\" \\n                                                             :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonRadius.tooltipText')\\\"\\n                                                             :value=\\\"props.currentValue\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-number-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.applepayDisplayFields']\\\"\\n                                                    :has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.applepayDisplayFields')\\\"\\n                                                    :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.applepayDisplayFields')\\\"\\n                                                    :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.applepay.displayFields.label')\\\"\\n                                                    :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.applepay.displayFields.tooltipText')\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-multi-select name=\\\"NovalnetPayment.settings.applepayDisplayFields\\\"\\n                                                     :placeholder=\\\"$tc('novalnet-payment.settingForm.paymentSettings.applepay.displayFields.emptyText')\\\"\\n                                                     :mapInheritance=\\\"props\\\"\\n                                                     labelProperty=\\\"name\\\"\\n                                                     valueProperty=\\\"id\\\"\\n                                                     :options=\\\"displayFieldOptions\\\"\\n                                                     :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                     :value=\\\"props.currentValue\\\"\\n                                                     @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-multi-select>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                </sw-collapse>\\n            </sw-container>\\n        {% endblock %}\\n    </sw-card>\\n    \\n    <sw-card class=\\\"sw-card--grid\\\">\\n        {% block novalnet_payment_content_card_channel_config_payment_card_googlepay_container %}\\n            <sw-container>\\n                <sw-collapse>\\n                    <div slot=\\\"header\\\">\\n                        <div class=\\\"novalnet_payment_card_title\\\">\\n                                {{ $tc('novalnet-payment.settingForm.paymentSettings.googlepay.cardTitle') }}\\n                        </div>\\n                        <div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n                            <sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n                            </sw-icon>\\n                        </div>\\n                        </div>\\n\\n                    <div slot=\\\"content\\\">\\n                        {% block novalnet_payment_content_card_channel_config_payment_card_googlepay_container_settings %}\\n                            <div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_googlepay %}\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.googlepayTestMode']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.googlepayTestMode']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.googlepayTestMode\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.googlepayOnHold']\\\"\\n                                                        :has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.googlepayOnHold')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.googlepayOnHold')\\\"\\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.label')\\\"\\n                                                        :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.tooltipText')\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-single-select name=\\\"NovalnetPayment.settings.googlepayOnHold\\\"\\n                                                              labelProperty=\\\"name\\\"\\n                                                              valueProperty=\\\"id\\\"\\n                                                              :options=\\\"onHoldZeroOptions\\\"\\n                                                              :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                              :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n                                                              @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-single-select>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.googlepayOnHoldAmount']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.googlepayOnHoldAmount']\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-number-field name=\\\"NovalnetPayment.settings.googlepayOnHoldAmount\\\"\\n                                                             numberType=\\\"int\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountLabel')\\\"\\n                                                             :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip')\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             :value=\\\"props.currentValue == 0 ? null : props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-number-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.googlepaySellerName']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.googlepaySellerName']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-text-field name=\\\"NovalnetPayment.settings.googlepaySellerName\\\"\\n                                                           :mapInheritance=\\\"props\\\"  \\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.googlepay.sellerName.label')\\\" \\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.googlepay.sellerName.tooltipText')\\\"\\n                                                           :placeholder=\\\"sellerNamePlaceHolder\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-text-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.googlepayMerchantId']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.googlepayMerchantId']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-text-field name=\\\"NovalnetPayment.settings.googlepayMerchantId\\\"\\n                                                           :mapInheritance=\\\"props\\\"  :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.googlepay.merchantId.label')\\\" :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.googlepay.merchantId.tooltipText')\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-text-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.googlepayEnforcecc3D']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.googlepayEnforcecc3D']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.googlepayEnforcecc3D\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.creditcard.enforcecc3D.label')\\\"\\n                                                             :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.creditcard.enforcecc3D.tooltipText')\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             :value=\\\"props.currentValue\\\"\\n                                                             @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.googlepayNotify']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.googlepayNotify']\\\"\\n                                                        >\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-text-field name=\\\"NovalnetPayment.settings.googlepayNotify\\\"\\n                                                           :mapInheritance=\\\"props\\\"  :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" \\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-text-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <div class=\\\"novalnet_payment_googlepay\\\">{{ $tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonTitle') }}</div>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.googlepayButtonType']\\\"\\n                                                        :has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.googlepayButtonType')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.googlepayButtonType')\\\"\\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonTypeLabel')\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-single-select name=\\\"NovalnetPayment.settings.googlepayButtonType\\\"\\n                                                              labelProperty=\\\"name\\\"\\n                                                              valueProperty=\\\"id\\\"\\n                                                              :options=\\\"buttonGpayTypeOptions\\\"\\n                                                              :mapInheritance=\\\"props\\\"\\n                                                              :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                              :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n                                                              @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-single-select>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.googlepayButtonHeight']\\\"\\n                                                        :has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.googlepayButtonHeight')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.googlepayButtonHeight')\\\"\\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonHeight.label')\\\" \\n                                                        :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonHeight.tooltipText')\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-number-field name=\\\"NovalnetPayment.settings.googlepayButtonHeight\\\"\\n                                                             numberType=\\\"int\\\" \\n                                                             :step=\\\"null\\\" \\n                                                             :min=\\\"40\\\" \\n                                                             :max=\\\"100\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             :value=\\\"props.currentValue\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-number-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.googlepayDisplayFields']\\\"\\n                                                        :has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.googlepayDisplayFields')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.googlepayDisplayFields')\\\"\\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.googlepay.displayFields.label')\\\"\\n                                                        :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.googlepay.displayFields.tooltipText')\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-multi-select name=\\\"NovalnetPayment.settings.googlepayDisplayFields\\\"\\n                                                     :placeholder=\\\"$tc('novalnet-payment.settingForm.paymentSettings.googlepay.displayFields.emptyText')\\\"\\n                                                     labelProperty=\\\"name\\\"\\n                                                     valueProperty=\\\"id\\\"\\n                                                     :mapInheritance=\\\"props\\\"\\n                                                     :options=\\\"displayFieldOptions\\\"\\n                                                     :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                     :value=\\\"props.currentValue\\\"\\n                                                     @change=\\\"props.updateCurrentValue\\\">\\n                                            </sw-multi-select>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                </sw-collapse>\\n            </sw-container>\\n        {% endblock %}\\n    </sw-card>\\n\\n    <sw-card class=\\\"sw-card--grid\\\">\\n        {% block novalnet_payment_content_card_channel_config_payment_card_invoice_container %}\\n\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t<div slot=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.invoice.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"content\\\">\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_invoice_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_invoice %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.invoiceTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.invoiceTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.invoiceTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.invoiceDueDate']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.invoiceDueDate')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.invoiceDueDate')\\\"\\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.invoice.dueDate.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t    :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.invoice.dueDate.tooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-number-field name=\\\"NovalnetPayment.settings.invoiceDueDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t numberType=\\\"int\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :min=\\\"7\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue == 0 ? null : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.invoiceOnHold']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.invoiceOnHold')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.invoiceOnHold')\\\"\\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t    :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.tooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-single-select name=\\\"NovalnetPayment.settings.invoiceOnHold\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  labelProperty=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  valueProperty=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :options=\\\"onholdOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-single-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.invoiceOnHoldAmount']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.invoiceOnHoldAmount']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-number-field name=\\\"NovalnetPayment.settings.invoice.invoiceOnHoldAmount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t numberType=\\\"int\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountLabel')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue == 0 ? null : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.invoiceNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.invoiceNotify']\\\"\\n                                                        >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.invoiceNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" \\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t</sw-container>\\n        {% endblock %}\\n    </sw-card>\\n\\n    <sw-card class=\\\"sw-card--grid\\\">\\n\\n        {% block novalnet_payment_content_card_channel_config_payment_card_invoiceguarantee_container %}\\n\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t<sw-collapse>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.invoiceguarantee.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"content\\\">\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_invoiceguarantee_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"guarantee_conditions\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"guarantee_condtions_headings\\\">{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.title') }}<p/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"guarantee_condtions_list\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.country') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.b2b') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.currency') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.amount') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.age') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.address') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_invoiceguarantee %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.invoiceguaranteeTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.invoiceguaranteeTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.invoiceguaranteeTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.invoiceguaranteeMinimumOrderAmount']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.invoiceguaranteeMinimumOrderAmount')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.invoiceguaranteeMinimumOrderAmount')\\\" \\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.tooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-number-field name=\\\"NovalnetPayment.settings.invoiceguaranteeMinimumOrderAmount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :min=\\\"999\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :allowEmpty=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   numberType=\\\"integer\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.invoiceguaranteeOnHold']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.invoiceguaranteeOnHold')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.invoiceguaranteeOnHold')\\\"\\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t    :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.tooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-single-select name=\\\"NovalnetPayment.settings.invoiceguaranteeOnHold\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  labelProperty=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  valueProperty=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :options=\\\"onholdOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-single-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.invoiceguaranteeOnHoldAmount']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.invoiceguaranteeOnHoldAmount']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-number-field name=\\\"NovalnetPayment.settings.invoiceguaranteeOnHoldAmount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t numberType=\\\"int\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountLabel')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue == 0 ? null : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.invoiceguaranteeForceGuarantee']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.invoiceguaranteeForceGuarantee']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.invoiceguaranteeForceGuarantee\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.forceGuarantee.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.forceGuarantee.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_force_guarantee_enable_condtion\\\">{{ $tc('novalnet-payment.settingForm.paymentSettings.forceGuarantee.invoicecondition') }}</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.invoiceguaranteeAllowB2B']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.invoiceguaranteeAllowB2B']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.invoiceguaranteeAllowB2B\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.allowB2B.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.allowB2B.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.invoiceguaranteeNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.invoiceguaranteeNotify']\\\"\\n                                                        >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.invoiceguaranteeNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" \\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t</sw-container>\\n        {% endblock %}\\n    </sw-card>\\n\\n    <sw-card class=\\\"sw-card--grid\\\">\\n\\n        {% block novalnet_payment_content_card_channel_config_payment_card_prepayment_container %}\\n\\t\\t\\t<sw-container>\\n\\n\\t\\t\\t\\t<sw-collapse>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.prepayment.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"content\\\">\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_prepayment_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_prepayment %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.prepaymentTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.prepaymentTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.prepaymentTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.prepaymentDueDate']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.prepaymentDueDate')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.prepaymentDueDate')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.prepayment.dueDate.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t    :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.prepayment.dueDate.tooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-number-field name=\\\"NovalnetPayment.settings.prepaymentDueDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t numberType=\\\"int\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :min=\\\"7\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :max=\\\"28\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue == 0 ? null : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.prepaymentNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.prepaymentNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.prepaymentNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t</sw-container>\\n        {% endblock %}\\n    </sw-card>\\n\\n    <sw-card class=\\\"sw-card--grid\\\">\\n        {% block novalnet_payment_content_card_channel_config_payment_card_ideal_container %}\\n\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t<sw-collapse>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.ideal.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"content\\\">\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_ideal_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_ideal %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.idealTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.idealTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.idealTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.idealNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.idealNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.idealNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t</sw-container>\\n        {% endblock %}\\n    </sw-card>\\n    <sw-card class=\\\"sw-card--grid\\\">\\n        {% block novalnet_payment_content_card_channel_config_payment_card_sofort_container %}\\n\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t<sw-collapse>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.sofort.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"content\\\">\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_sofort_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_sofort %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.sofortTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sofortTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.sofortTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.sofortNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sofortNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.sofortNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t</sw-container>\\n        {% endblock %}\\n    </sw-card>\\n    \\n    <sw-card class=\\\"sw-card--grid\\\">\\n        {% block novalnet_payment_content_card_channel_config_payment_card_onlinebanktransfer_container %}\\n\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t<sw-collapse>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.onlinebanktransfer.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"content\\\">\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_onlinebanktransfer_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_onlinebanktransfer %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.onlinebanktransferTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.onlinebanktransferTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.onlinebanktransferTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.onlinebanktransferNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.onlinebanktransferNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.onlinebanktransferNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t</sw-container>\\n        {% endblock %}\\n    </sw-card>\\n\\n    <sw-card class=\\\"sw-card--grid\\\">\\n        {% block novalnet_payment_content_card_channel_config_payment_card_giropay_container %}\\n\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t<sw-collapse>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.giropay.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"content\\\">\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_giropay_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_giropay %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.giropayTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.giropayTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.giropayTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.giropayNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.giropayNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.giropayNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t</sw-container>\\n        {% endblock %}\\n    </sw-card>\\n\\n    <sw-card class=\\\"sw-card--grid\\\">\\n\\n        {% block novalnet_payment_content_card_channel_config_payment_card_cashpayment_container %}\\n\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t<sw-collapse>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.cashpayment.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"content\\\">\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_cashpayment_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_cashpayment %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.cashpaymentTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.cashpaymentTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.cashpaymentTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.cashpaymentDueDate']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.cashpaymentDueDate')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.cashpaymentDueDate')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.cashpayment.dueDate.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.cashpayment.dueDate.tooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-number-field name=\\\"NovalnetPayment.settings.cashpaymentDueDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t numberType=\\\"int\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :min=\\\"1\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.cashpaymentNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.cashpaymentNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.cashpaymentNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t</sw-container>\\n        {% endblock %}\\n    </sw-card>\\n\\n    <sw-card class=\\\"sw-card--grid\\\">\\n        {% block novalnet_payment_content_card_channel_config_payment_card_przelewy24_container %}\\n\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t<sw-collapse>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.przelewy24.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"content\\\">\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_przelewy24_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_przelewy24 %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.przelewy24TestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.przelewy24TestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.przelewy24TestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.przelewy24Notify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.przelewy24Notify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.przelewy24Notify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t</sw-container>\\n        {% endblock %}\\n    </sw-card>\\n\\n    <sw-card class=\\\"sw-card--grid\\\">\\n        {% block novalnet_payment_content_card_channel_config_payment_card_eps_container %}\\n\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t<sw-collapse>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.eps.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"content\\\">\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_eps_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_eps %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.epsTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.epsTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.epsTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.epsNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.epsNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.epsNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t</sw-container>\\n        {% endblock %}\\n    </sw-card>\\n\\n    <sw-card class=\\\"sw-card--grid\\\">\\n\\n        {% block novalnet_payment_content_card_channel_config_payment_card_invoiceinstalment_container %}\\n\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t<sw-collapse>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.invoiceinstalment.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"content\\\">\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_invoiceinstalment_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"guarantee_conditions\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"guarantee_condtions_headings\\\">{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.title') }}<p/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"guarantee_condtions_list\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.country') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.b2b') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.currency') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.instalmentAmount') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.instalmentCycleAmount') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.age') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.address') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_invoiceinstalment %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.invoiceinstalmentTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.invoiceinstalmentTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.invoiceinstalmentTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.invoiceinstalmentMinimumOrderAmount']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.invoiceinstalmentMinimumOrderAmount')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.invoiceinstalmentMinimumOrderAmount')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.instalmentLabel')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.instalmentTooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-number-field name=\\\"NovalnetPayment.settings.invoiceinstalmentMinimumOrderAmount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :min=\\\"1998\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :allowEmpty=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   numberType=\\\"integer\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.invoiceinstalmentOnHold']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.invoiceinstalmentOnHold')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.invoiceinstalmentOnHold')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.tooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-single-select name=\\\"NovalnetPayment.settings.invoiceinstalmentOnHold\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  labelProperty=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  valueProperty=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :options=\\\"onholdOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-single-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.invoiceinstalmentOnHoldAmount']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepainstalmentOnHoldAmount']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-number-field name=\\\"NovalnetPayment.settings.invoiceinstalmentOnHoldAmount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t                 :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountLabel')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t     :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t numberType=\\\"int\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue == 0 ? null : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.invoiceinstalmentProductPageInfo']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.invoiceinstalmentProductPageInfo']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.invoiceinstalmentProductPageInfo\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.productPageInfo.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.productPageInfo.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.invoiceinstalmentCycles']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.invoiceinstalmentCycles')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.invoiceinstalmentCycles')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.instalmentCycleInfo.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.instalmentCycleInfo.tooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-multi-select name=\\\"NovalnetPayment.settings.invoiceinstalmentCycles\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t labelProperty=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t valueProperty=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :options=\\\"instalmentOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :isInherited=\\\"props.isInherited\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-multi-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.invoiceinstalmentAllowB2B']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.invoiceinstalmentAllowB2B']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.invoiceinstalmentAllowB2B\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.allowB2B.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.allowB2B.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.invoiceinstalmentNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepainstalmentNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.invoiceinstalmentNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t</sw-container>\\n        {% endblock %}\\n    </sw-card>\\n\\n    <sw-card class=\\\"sw-card--grid\\\">\\n\\n        {% block novalnet_payment_content_card_channel_config_payment_card_sepainstalment_container %}\\n\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t<sw-collapse>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.sepainstalment.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"content\\\">\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_sepainstalment_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"guarantee_conditions\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"guarantee_condtions_headings\\\">{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.title') }}<p/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"guarantee_condtions_list\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.country') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.b2b') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.currency') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.instalmentAmount') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.instalmentCycleAmount') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.age') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.address') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_sepainstalment %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.sepainstalmentTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepainstalmentTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.sepainstalmentTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.sepainstalmentMinimumOrderAmount']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.sepainstalmentMinimumOrderAmount')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.sepainstalmentMinimumOrderAmount')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.instalmentLabel')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.instalmentTooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-number-field name=\\\"NovalnetPayment.settings.sepainstalmentMinimumOrderAmount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :min=\\\"1998\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :allowEmpty=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   numberType=\\\"integer\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.sepainstalmentOneclick']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepainstalmentOneclick']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.sepainstalmentOneclick\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.oneclick.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.oneclick.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.sepainstalmentOnHold']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.sepainstalmentOnHold')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.sepainstalmentOnHold')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.tooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-single-select name=\\\"NovalnetPayment.settings.sepainstalmentOnHold\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  labelProperty=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  valueProperty=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :options=\\\"onholdOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-single-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.sepainstalmentOnHoldAmount']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepainstalmentOnHoldAmount']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-number-field name=\\\"NovalnetPayment.settings.sepainstalmentOnHoldAmount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t numberType=\\\"int\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountLabel')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue == 0 ? null : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.sepainstalmentProductPageInfo']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepainstalmentProductPageInfo']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.sepainstalmentProductPageInfo\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.productPageInfo.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.productPageInfo.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.sepainstalmentCycles']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.sepainstalmentCycles')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.sepainstalmentCycles')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.instalmentCycleInfo.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t    :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.instalmentCycleInfo.tooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-multi-select name=\\\"NovalnetPayment.settings.sepainstalmentCycles\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t labelProperty=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t valueProperty=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :options=\\\"instalmentOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :isInherited=\\\"props.isInherited\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-multi-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.sepainstalmentAllowB2B']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepainstalmentAllowB2B']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.sepainstalmentAllowB2B\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.allowB2B.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.allowB2B.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.sepainstalmentNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepainstalmentNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.sepainstalmentNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t</sw-container>\\n        {% endblock %}\\n    </sw-card>\\n\\n    <sw-card class=\\\"sw-card--grid\\\">\\n        {% block novalnet_payment_content_card_channel_config_payment_card_paypal_container %}\\n\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t<div slot=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.paypal.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"content\\\">\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_paypal_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_paypal %}\\n                                    <div v-html=\\\"paypalInformation\\\" class=\\\"novalnet_payment-settings-paypal-project\\\">\\n                                    </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.paypalTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.paypalTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.paypalTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_paypal_condition\\\">{{ $tc('novalnet-payment.settingForm.paymentSettings.paypal.condition') }}</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.paypalOnHold']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.paypalOnHold')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.paypalOnHold')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t    :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.tooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-single-select name=\\\"NovalnetPayment.settings.paypalOnHold\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  labelProperty=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  valueProperty=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :options=\\\"onholdOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-single-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.paypalOnHoldAmount']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.paypalOnHoldAmount']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-number-field name=\\\"NovalnetPayment.settings.paypalOnHoldAmount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t numberType=\\\"int\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountLabel')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue == 0 ? null : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.paypalNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.paypalNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.paypalNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t</sw-container>\\n        {% endblock %}\\n    </sw-card>\\n\\n     <sw-card class=\\\"sw-card--grid\\\">\\n        {% block novalnet_payment_content_card_channel_config_payment_card_postfinancecard_container %}\\n\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t<sw-collapse>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.postfinancecard.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"content\\\">\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_postfinancecard_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_postfinancecard %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.postfinancecardTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.postfinancecardTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.postfinancecardTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.postfinancecardNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.postfinancecardNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.postfinancecardNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t</sw-container>\\n        {% endblock %}\\n    </sw-card>\\n\\n    <sw-card class=\\\"sw-card--grid\\\">\\n        {% block novalnet_payment_content_card_channel_config_payment_card_postfinance_container %}\\n\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t<sw-collapse>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.postfinance.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"content\\\">\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_postfinance_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_postfinance %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.postfinanceTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.postfinanceTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.postfinanceTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.postfinanceNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.postfinanceNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.postfinanceNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t</sw-container>\\n        {% endblock %}\\n    </sw-card>\\n\\n    <sw-card class=\\\"sw-card--grid\\\">\\n        {% block novalnet_payment_content_card_channel_config_payment_card_bancontact_container %}\\n\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t<sw-collapse>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.bancontact.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"content\\\">\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_bancontact_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_bancontact %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.bancontactTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.bancontactTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.bancontactTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.bancontactNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.bancontactNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.bancontactNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t</sw-container>\\n        {% endblock %}\\n    </sw-card>\\n\\n    <sw-card class=\\\"sw-card--grid\\\">\\n        {% block novalnet_payment_content_card_channel_config_payment_card_multibanco_container %}\\n\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t<sw-collapse>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.multibanco.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"content\\\">\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_multibanco_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_multibanco %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.multibancoTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.multibancoTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.multibancoTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.multibancoNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.multibancoNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.multibancoNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t</sw-container>\\n        {% endblock %}\\n    </sw-card>\\n    \\n    <sw-card class=\\\"sw-card--grid\\\">\\n        {% block novalnet_payment_content_card_channel_config_payment_card_alipay_container %}\\n\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t<sw-collapse>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.alipay.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"content\\\">\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_alipay_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_alipay %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.alipayTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.alipayTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.alipayTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.alipayNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.alipayNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.alipayNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t</sw-container>\\n        {% endblock %}\\n    </sw-card>\\n    \\n    <sw-card class=\\\"sw-card--grid\\\">\\n        {% block novalnet_payment_content_card_channel_config_payment_card_wechatpay_container %}\\n\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t<sw-collapse>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.wechatpay.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"content\\\">\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_wechatpay_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_wechatpay %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.wechatpayTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.wechatpayTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.wechatpayTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.wechatpayNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.wechatpayNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.wechatpayNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t</sw-container>\\n        {% endblock %}\\n    </sw-card>\\n    \\n    <sw-card class=\\\"sw-card--grid\\\">\\n        {% block novalnet_payment_content_card_channel_config_payment_card_trustly_container %}\\n\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t<sw-collapse>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.trustly.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"content\\\">\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_trustly_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_trustly %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.trustlyTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.trustlyTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.trustlyTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.trustlyNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.trustlyNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.trustlyNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t</sw-container>\\n        {% endblock %}\\n    </sw-card>\\n    \\n    <sw-card class=\\\"sw-card--grid\\\">\\n        {% block novalnet_payment_content_card_channel_config_payment_card_payconiq_container %}\\n\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t<sw-collapse>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.payconiq.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"content\\\">\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_payconiq_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_payconiq %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.payconiqTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.payconiqTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.payconiqTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.payconiqNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.payconiqNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.payconiqNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t</sw-container>\\n        {% endblock %}\\n    </sw-card>\\n    \\n    <sw-card class=\\\"sw-card--grid\\\">\\n        {% block novalnet_payment_content_card_channel_config_payment_card_blik_container %}\\n\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t<sw-collapse>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.blik.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"content\\\">\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_blik_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_blik %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.blikTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.blikTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.blikTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.blikNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.blikNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.blikNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t</sw-container>\\n        {% endblock %}\\n    </sw-card>\\n    \\n    <sw-card class=\\\"sw-card--grid\\\">\\n        {% block novalnet_payment_content_card_channel_config_payment_card_mbway_container %}\\n\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t<sw-collapse>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.mbway.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"content\\\">\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_mbway_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_mbway %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.mbwayTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.mbwayTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.mbwayTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.mbwayNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.mbwayNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.mbwayNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t</sw-container>\\n        {% endblock %}\\n    </sw-card>\\n    \\n    <sw-card class=\\\"sw-card--grid\\\">\\n        {% block novalnet_payment_content_card_channel_config_payment_card_twint_container %}\\n\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t<sw-collapse>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.twint.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div slot=\\\"content\\\">\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_twint_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_twint %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.twintTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.twintTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.twintTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model=\\\"actualConfigData['NovalnetPayment.settings.twintNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.twintNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.twintNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @change=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t</sw-container>\\n        {% endblock %}\\n    </sw-card>\\n\\n</sw-card-view>\\n{% endblock %}\\n\";","export default \"{% block novalnet_payment_order_refund_modal %}\\n    <sw-modal :title=\\\"$tc('novalnet-payment.settingForm.extension.refundButton')\\\"\\n              @modal-close=\\\"closeModal\\\">\\n\\t\\t\\n\\t\\t\\t{% block novalnet_payment_order_refund_modal_content %}\\n\\t\\t\\t\\t<template #default>\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_refund_modal_content_info_text %}\\n\\t\\t\\t\\t\\t\\t<sw-container columns=\\\"1fr\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tgap=\\\"0px 30px\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-number-field v-model=\\\"refundableAmount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:min=\\\"0\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:allowEmpty=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnumberType=\\\"int\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:label=\\\"$tc('novalnet-payment.settingForm.extension.amountTitle')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:helpText=\\\"$tc('novalnet-payment.settingForm.extension.refundDescription')\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t<sw-text-field v-model=\\\"reason\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t:placeholder=\\\"$tc('novalnet-payment.settingForm.extension.refundReference')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t:label=\\\"$tc('novalnet-payment.settingForm.extension.refundReference')\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</template>\\n\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t{% block novalnet_payment_order_refund_modal_actions %}\\n\\t\\t\\t\\t<template #modal-footer>\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_refund_modal_confirm %}\\n\\t\\t\\t\\t\\t\\t<sw-button secondary slim variant=\\\"primary\\\" :disabled=\\\"disable\\\" :square=\\\"false\\\" :block=\\\"false\\\" :isLoading=\\\"false\\\" @click=\\\"novalnetRefund\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.refundButton') }}\\n\\t\\t\\t\\t\\t\\t</sw-button>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</template>\\n\\t\\t\\t{% endblock %}\\n    </sw-modal>\\n{% endblock %}\\n\";","import template from './novalnet-payment-refund-modal.html.twig';\n\nconst { Component, Mixin } = Shopware;\nconst { currency } = Shopware.Utils.format;\n\nComponent.register('novalnet-payment-refund-modal', {\n    template,\n\n    props: {\n        refundableAmount: {\n            type: Number,\n            required: true\n        },\n        order: {\n            type: Object,\n            required: true\n        },\n        item: {\n            type: Object,\n            required: true\n        }\n    },\n\n    inject: [\n        'NovalPaymentApiCredentialsService',\n        'repositoryFactory'\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('sw-inline-snippet')\n    ],\n\n    data() {\n        return {\n            reason: '',\n            disable: false,\n        };\n    },\n\n    methods: {\n\n\t\tcloseModal() {\n            this.$emit('modal-close');\n        },\n\n        novalnetRefund()\n        {\n            let refundAmount\t= this.refundableAmount;\n            const reason\t\t= this.reason;\n            const orderNumber\t= this.order.orderNumber;\n\n\t\t\tif(refundAmount == '0')\n\t\t\t{\n\t\t\t\tthis.createNotificationError({\n\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.amountRefundError')\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.disable = true;\n\t\t\t\n            this.NovalPaymentApiCredentialsService.refundPayment(\n                orderNumber,\n                refundAmount,\n                reason,\n                this.item.reference,\n            ).then((response) => {\n\n\t\t\t\tif(\tresponse.result != undefined && response.result != null && response.result != '')\n\t\t\t\t{\n\t\t\t\t\tif(response.result.status != undefined && response.result.status != null && response.result.status != '' && response.result.status == 'SUCCESS')\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.extension.refundSuccess')\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if(response.result.status_text != undefined && response.result.status_text != null && response.result.status_text != '') {\n\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: response.result.status_text,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.failureMessage')\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.failureMessage')\n\t\t\t\t\t});\n\t\t\t\t}\n                this.$emit('modal-close');\n                setTimeout(this.$router.go, 3000);\n            }).catch((errorResponse) => {\n                    this.createNotificationError({\n                        message: `${errorResponse.title}: ${errorResponse.message}`,\n                        autoClose: false\n                    });\n                    this.$emit('modal-close');\n            });\n\t\t},\n\t}\n});\n","export default \"{% block novalnet_payment_order_refund_modal %}\\n    <sw-modal :title=\\\"$tc('novalnet-payment.settingForm.extension.zeroAmountButton')\\\"\\n              @modal-close=\\\"closeModal\\\">\\n\\t\\t\\n\\t\\t\\t{% block novalnet_payment_order_zero_amount_modal_content %}\\n\\t\\t\\t\\t<template #default>\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_zero_amount_modal_content_info_text %}\\n\\t\\t\\t\\t\\t\\t<sw-container columns=\\\"1fr\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tgap=\\\"0px 30px\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-number-field v-model=\\\"orderAmount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:min=\\\"0\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:allowEmpty=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnumberType=\\\"int\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:label=\\\"$tc('novalnet-payment.settingForm.extension.zeroAmountTitle')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:helpText=\\\"$tc('novalnet-payment.settingForm.extension.zeroAmountDescription')\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</template>\\n\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t{% block novalnet_payment_order_zero_amount_modal_actions %}\\n\\t\\t\\t\\t<template #modal-footer>\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_zero_amount_modal_confirm %}\\n\\t\\t\\t\\t\\t\\t<sw-button secondary slim variant=\\\"primary\\\" :disabled=\\\"disable\\\" :square=\\\"false\\\" :block=\\\"false\\\" :isLoading=\\\"false\\\" @click=\\\"novalnetBookAmount\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.bookButton') }}\\n\\t\\t\\t\\t\\t\\t</sw-button>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</template>\\n\\t\\t\\t{% endblock %}\\n    </sw-modal>\\n{% endblock %}\\n\";","import template from './novalnet-payment-book-amount-modal.html.twig';\n\nconst { Component, Mixin } = Shopware;\nconst { currency } = Shopware.Utils.format;\n\nComponent.register('novalnet-payment-book-amount-modal', {\n    template,\n\n    props: {\n        orderAmount: {\n            type: Number,\n            required: true\n        },\n        order: {\n            type: Object,\n            required: true\n        }\n    },\n\n    inject: [\n        'NovalPaymentApiCredentialsService',\n        'repositoryFactory'\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('sw-inline-snippet')\n    ],\n\n    data() {\n        return {\n            reason: '',\n            disable: false,\n        };\n    },\n\n    methods: {\n\n\t\tcloseModal() {\n            this.$emit('modal-close');\n        },\n\n        novalnetBookAmount()\n        {\n            const orderAmount = this.orderAmount;\n            const orderId     = this.order.id;\n            \n\t\t\tif(orderAmount == 0)\n\t\t\t{\n\t\t\t\tthis.createNotificationError({\n\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.amountError')\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.disable = true;\n            this.NovalPaymentApiCredentialsService.BookOrderAmount(\n\t\t\t\torderId,\n                orderAmount\n            ).then((response) => {\n\n\t\t\t\tif(\tresponse.result != undefined && response.result != null && response.result != '')\n\t\t\t\t{\n\t\t\t\t\tif(response.result.status != undefined && response.result.status != null && response.result.status != '' && response.result.status == 'SUCCESS')\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.extension.bookedSuccess')\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if(response.result.status_text != undefined && response.result.status_text != null && response.result.status_text != '') {\n\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: response.result.status_text,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.failureMessage')\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.failureMessage')\n\t\t\t\t\t});\n\t\t\t\t}\n                this.$emit('modal-close');\n                setTimeout(this.$router.go, 3000);\n            }).catch((errorResponse) => {\n                    this.createNotificationError({\n                        message: `${errorResponse.title}: ${errorResponse.message}`,\n                        autoClose: false\n                    });\n                    this.$emit('modal-close');\n            });\n\t\t},\n\t}\n});\n","export default \"{% block novalnet_payment_order_refund_modal %}\\n    <sw-modal :title=\\\"$tc('novalnet-payment.settingForm.extension.instalmentCancelLabel')\\\"\\n              @modal-close=\\\"closeModal\\\">\\n\\n\\t\\t\\t{% block novalnet_payment_order_refund_modal_content %}\\n\\t\\t\\t\\t<template #default>\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_refund_modal_content_info_text %}\\n                        <sw-container columns=\\\"1fr\\\"\\n                                      gap=\\\"0px 30px\\\">\\n                            <div>\\n                                {{ $tc('novalnet-payment.settingForm.extension.instalmentCancelMessage') }}\\n                            </div>\\n                        </sw-container>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</template>\\n\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t{% block novalnet_payment_order_refund_modal_actions %}\\n\\t\\t\\t\\t<template #modal-footer>\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_refund_modal_confirm %}\\n\\t\\t\\t\\t\\t\\t<sw-button secondary slim variant=\\\"primary\\\" :disabled=\\\"disable\\\" :square=\\\"false\\\" :block=\\\"false\\\" :isLoading=\\\"false\\\" @click=\\\"novalnetInstalmentCancel\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.confirmLabel') }}\\n\\t\\t\\t\\t\\t\\t</sw-button>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</template>\\n\\t\\t\\t{% endblock %}\\n    </sw-modal>\\n{% endblock %}\\n\";","import template from './novalnet-payment-instalment-refund-modal.html.twig';\n\nconst { Component, Mixin } = Shopware;\nconst { currency } = Shopware.Utils.format;\n\nComponent.register('novalnet-payment-instalment-refund-modal', {\n    template,\n\n    props: {\n        cancelType: {\n            type: Number,\n            required: true\n        },\n        order: {\n            type: Object,\n            required: true\n        }\n    },\n\n    inject: [\n        'NovalPaymentApiCredentialsService',\n        'repositoryFactory'\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('sw-inline-snippet')\n    ],\n\n    data() {\n        return {\n            reason: '',\n            disable: false,\n        };\n    },\n\n    methods: {\n\n\t\tcloseModal() {\n            this.$emit('modal-close');\n        },\n\n        novalnetInstalmentCancel()\n        {\n            const orderNumber = this.order.orderNumber;\n            const cancelType  = this.cancelType;\n\t\t\tthis.disable = true;\n\t\t\t\n            this.NovalPaymentApiCredentialsService.instalmentCancel(\n                orderNumber,\n                cancelType,\n            ).then((response) => {\n\n\t\t\t\tif(\tresponse.result != undefined && response.result != null && response.result != '')\n\t\t\t\t{\n\t\t\t\t\tif(response.result.status != undefined && response.result.status != null && response.result.status != '' && response.result.status == 'SUCCESS')\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.extension.instalmentSuccessMsg')\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if(response.result.status_text != undefined && response.result.status_text != null && response.result.status_text != '') {\n\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: response.result.status_text,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.failureMessage')\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.failureMessage')\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.$emit('modal-close');\n                setTimeout(this.$router.go, 3000);\n            }).catch((errorResponse) => {\n                    this.createNotificationError({\n                        message: `${errorResponse.title}: ${errorResponse.message}`,\n                        autoClose: false\n                    });\n                    this.$emit('modal-close');\n            });\n\t\t},\n\t}\n});\n","export default \"{% block novalnet_payment_order_manage_modal %}\\n    <sw-modal :title=\\\"$tc('novalnet-payment.settingForm.extension.Managetitle')\\\"\\n              @modal-close=\\\"closeModal\\\">\\n\\n        {% block novalnet_payment_order_manage_modal_content %}\\n            <template #default>\\n\\n                {% block novalnet_payment_order_manage_modal_content_info_text %}\\n                    <sw-container columns=\\\"1fr\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tgap=\\\"0px 30px\\\">\\n\\t\\t\\t\\t\\t\\t<div v-if=\\\"status == 100\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.confirmMessage') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div v-if=\\\"status == 103\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.cancelMessage') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</sw-container>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block novalnet_payment_order_manage_modal_actions %}\\n            <template #modal-footer>\\n\\n                {% block novalnet_payment_order_manage_modal_confirm %}\\n                    <sw-button secondary slim variant=\\\"primary\\\" :disabled=\\\"disable\\\" :square=\\\"false\\\" :block=\\\"false\\\" :isLoading=\\\"false\\\" @click=\\\"novalnetOnhold\\\">\\n\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.confirmLabel') }}\\n\\t\\t\\t\\t\\t</sw-button>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n    </sw-modal>\\n{% endblock %}\\n\";","import template from './novalnet-payment-manage-transaction-modal.html.twig';\n\nconst { Component, Mixin } = Shopware;\nconst { currency } = Shopware.Utils.format;\n\nComponent.register('novalnet-payment-manage-transaction-modal', {\n    template,\n\n    props: {\n        status: {\n            type: Number,\n            required: true\n        },\n        order: {\n            type: Object,\n            required: true\n        }\n    },\n\n    inject: [\n        'NovalPaymentApiCredentialsService',\n        'repositoryFactory'\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('sw-inline-snippet')\n    ],\n\n    data() {\n        return {\n            confirm: true,\n            cancel: false,\n            disable: false\n        };\n    },\n\n    methods: {\n\n\t\tcloseModal() {\n            this.$emit('modal-close');\n        },\n\n\t\tnovalnetOnhold()\n        {\n\t\t\tlet status\t= this.status;\n\t\t\tconst orderNumber\t= this.order.orderNumber;\n\n\t\t\tif( status == '' || status == undefined )\n\t\t\t{\n\t\t\t\tthis.createNotificationError({\n\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.extension.onholdLabel')\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.disable = true;\n\n\t\t\tthis.NovalPaymentApiCredentialsService.managePayment(\n                orderNumber,\n                status\n            ).then((response) => {\n\n\t\t\t\tif(\tresponse.result != undefined && response.result != null && response.result != '')\n\t\t\t\t{\n\t\t\t\t\tif(response.result.status != undefined && response.result.status != null && response.result.status != '' && response.result.status == 'SUCCESS')\n\t\t\t\t\t{\n\t\t\t\t\t\tif(status == '100') {\n\t\t\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.extension.onholdSuccess')\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else if(status == '103') {\n\t\t\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.extension.onholdCancel')\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if(response.result.status_text != undefined && response.result.status_text != null && response.result.status_text != '') {\n\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: response.result.status_text,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.failureMessage')\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n                this.$emit('modal-close');\n                setTimeout(this.$router.go, 3000);\n            }).catch((errorResponse) => {\n                    this.createNotificationError({\n                        message: `${errorResponse.title}: ${errorResponse.message}`,\n                        autoClose: false\n                    });\n                    this.$emit('modal-close');\n            });\n\t\t}\n\t}\n});\n","export default \"    {% block sw_order_create_details_payment %}\\n    <sw-card\\n        class=\\\"sw-order-create-details__payment\\\"\\n        position-identifier=\\\"sw-order-create-details-payment\\\"\\n        :title=\\\"$tc('sw-order.createBase.detailsTab.labelTransactionCard')\\\"\\n    >\\n        <sw-container\\n            class=\\\"sw_order_create-details__payment-container\\\"\\n            gap=\\\"0px 30px\\\"\\n            columns=\\\"1fr 1fr\\\"\\n        >\\n            <sw-order-customer-address-select\\n                {% if VUE3 %}\\n                v-model:value=\\\"context.billingAddressId\\\"\\n                {% else %}\\n                v-model=\\\"context.billingAddressId\\\"\\n                {% endif %}\\n                :label=\\\"$tc('sw-order.createBase.labelBillingAddress')\\\"\\n                :placeholder=\\\"$tc('sw-order.createBase.placeholderBillingAddress')\\\"\\n                :same-address-value=\\\"context.shippingAddressId\\\"\\n                :customer=\\\"customer\\\"\\n            />\\n\\n            <sw-entity-single-select\\n                {% if VUE3 %}\\n                v-model:value=\\\"context.paymentMethodId\\\"\\n                {% else %}\\n                v-model=\\\"context.paymentMethodId\\\"\\n                {% endif %}\\n                entity=\\\"payment_method\\\"\\n                label-property=\\\"distinguishableName\\\"\\n                class=\\\"sw_order_create-details__payment-method\\\"\\n                :criteria=\\\"paymentMethodCriteria\\\"\\n                :label=\\\"$tc('sw-order.createBase.labelPaymentMethod')\\\"\\n                :placeholder=\\\"$tc('sw-order.createBase.placeholderPaymentMethod')\\\"\\n                show-clearable-button\\n                required\\n            />\\n\\n            <sw-entity-single-select\\n                {% if VUE3 %}\\n                v-model:value=\\\"context.currencyId\\\"\\n                {% else %}\\n                v-model=\\\"context.currencyId\\\"\\n                {% endif %}\\n                class=\\\"sw_order_create-details__currency\\\"\\n                entity=\\\"currency\\\"\\n                :criteria=\\\"currencyCriteria\\\"\\n                :label=\\\"$tc('sw-order.createBase.labelCurrency')\\\"\\n                :placeholder=\\\"$tc('sw-order.createBase.placeholderCurrency')\\\"\\n                show-clearable-button\\n                required\\n            />\\n        </sw-container>\\n    </sw-card>\\n    {% endblock %}\\n\";","import template from './sw-order-create-details.html.twig';\nconst { Component, State, Mixin, Filter, Context, ContextSwitchParameters} = Shopware;\nconst Criteria = Shopware.Data.Criteria;\nconst { currency } = Shopware.Utils.format;\n\nComponent.override('sw-order-create-details', {\n    template,\n\n    inject: [\n        'NovalPaymentApiCredentialsService',\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification')\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n        };\n    },\n\n    computed: {\n        salesChannelId() {\n            return this.salesChannelContext?.salesChannel.id || '';\n        },\n       \n        salesChannelContext(){\n            return State.get('swOrder').context;\n        },\n        \n        paymentMethodCriteria() {\n            const criteria = new Criteria();\n            criteria.addFilter(Criteria.equals('active', 1));\n\n            if (this.salesChannelId) {\n                criteria.addFilter(Criteria.equals('salesChannels.id', this.salesChannelId));\n            }\n            criteria.addFilter(Criteria.multi('OR', [\n                    Criteria.equals('customFields.novalnet_payment_method_name', null),\n                    Criteria.equals('customFields.novalnet_payment_method_name', 'novalnetinvoice'),\n                    Criteria.equals('customFields.novalnet_payment_method_name', 'novalnetprepayment'),\n                    Criteria.equals('customFields.novalnet_payment_method_name', 'novalnetmultibanco'),\n                    Criteria.equals('customFields.novalnet_payment_method_name', 'novalnetcashpayment'),\n                ]));\n            return criteria;\n        },\n    },\n  \n});\n","export default \"\\n{% block sw_order_create_options_payment_method %}\\n        <sw-entity-single-select\\n            v-model=\\\"context.paymentMethodId\\\"\\n            entity=\\\"payment_method\\\"\\n            label-property=\\\"distinguishableName\\\"\\n            class=\\\"sw-order-create-options__payment-method\\\"\\n            :criteria=\\\"paymentMethodCriteria\\\"\\n            :label=\\\"$tc('sw-order.createBase.labelPaymentMethod')\\\"\\n            :placeholder=\\\"$tc('sw-order.createBase.placeholderPaymentMethod')\\\"\\n            show-clearable-button\\n        />\\n{% endblock %}\\n\\n      \\n\\n\";","\nimport template from './sw-order-create-options.html.twig';\n\n\nconst { Component, State, Mixin, Filter, Context, ContextSwitchParameters} = Shopware;\nconst Criteria = Shopware.Data.Criteria;\nconst { currency } = Shopware.Utils.format;\n\nComponent.override('sw-order-create-options', {\n\t\n    inject: [\n        'NovalPaymentApiCredentialsService',\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification')\n    ],\n   \n    data() {\n         return {\n            isLoading: false\n        };\n    },\n\n    computed: {\n        salesChannelId() {\n            return State.get('swOrder').context?.salesChannel?.id ?? '';\n        },\n\n        paymentMethodCriteria() {\n            const criteria = new Criteria();\n            criteria.addFilter(Criteria.equals('active', 1));\n\n            if (this.salesChannelId) {\n                criteria.addFilter(Criteria.equals('salesChannels.id', this.salesChannelId));\n            }\n            criteria.addFilter(Criteria.multi('OR', [\n                    Criteria.equals('customFields.novalnet_payment_method_name', null),\n                    Criteria.equals('customFields.novalnet_payment_method_name', 'novalnetinvoice'),\n                    Criteria.equals('customFields.novalnet_payment_method_name', 'novalnetprepayment'),\n                    Criteria.equals('customFields.novalnet_payment_method_name', 'novalnetmultibanco'),\n                    Criteria.equals('customFields.novalnet_payment_method_name', 'novalnetcashpayment'),\n                ]));\n\n            return criteria;\n        },\n       \n    }\n\n    \n});\n","\nimport './extension/sw-order/view/sw-order-detail-details';\nimport './page/novalnet-payment-settings';\nimport './components/novalnet-payment-credentials';\nimport './components/novalnet-payment-settings-icon';\nimport './components/novalnet-payment-configuration';\nimport './extension/sw-order/view/novalnet-payment-refund-modal';\nimport './extension/sw-order/view/novalnet-payment-book-amount-modal';\nimport './extension/sw-order/view/novalnet-payment-instalment-refund-modal';\nimport './extension/sw-order/view/novalnet-payment-manage-transaction-modal';\nimport './extension/sw-order/view/sw-order-create-details';\nimport './extension/sw-order/component/sw-order-create-options';\n\n\nimport deDE from './snippet/de_DE.json';\nimport enGB from './snippet/en_GB.json';\n\nconst { Module } = Shopware;\n\nModule.register('novalnet-payment', {\n    type: 'plugin',\n    name: 'NovalnetPayment',\n    title: 'novalnet-payment.module.title',\n    description: 'novalnet-payment.module.description',\n    version: '1.0.0',\n    targetVersion: '1.0.0',\n    icon: 'regular-cog',\n\n    snippets: {\n        'de-DE': deDE,\n        'en-GB': enGB\n    },\n\n    routes: {\n        index: {\n            component: 'novalnet-payment-settings',\n            path: 'index',\n            meta: {\n                parentPath: 'sw.settings.index',\n                privilege: 'novalnet_payment.viewer',\n            }\n        },\n        detail: {\n            component: 'novalnet-payment-settings',\n            path: 'settings',\n            redirect: {\n                name: 'novalnet.payment.credentials'\n            },\n            children: {\n\t\t\t\tcredentials: {\n\t\t\t\t\tcomponent: 'novalnet-payment-credentials',\n\t\t\t\t\tpath: 'credentials',\n\t\t\t\t\tmeta: {\n\t\t\t\t\t\tparentPath: 'sw.settings.index',\n\t\t\t\t\t\tprivilege: 'novalnet_payment.viewer',\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tconfiguration: {\n\t\t\t\t\tcomponent: 'novalnet-payment-configuration',\n\t\t\t\t\tpath: 'configuration',\n\t\t\t\t\tmeta: {\n\t\t\t\t\t\tparentPath: 'sw.settings.index',\n\t\t\t\t\t\tprivilege: 'novalnet_payment.viewer',\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n    },\n    \n    settingsItem: {\n        group: 'plugins',\n        to: 'novalnet.payment.detail.credentials',\n        iconComponent: 'novalnet-payment-settings-icon',\n        backgroundEnabled: true,\n        privilege: 'novalnet_payment.viewer'\n    }\n});\n","const ApiService = Shopware.Classes.ApiService;\n\nclass NovalPaymentApiCredentialsService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'novalnet-payment') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n\n    validateApiCredentials(clientId, accessKey) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .post(\n                `_action/${this.getApiBasePath()}/validate-api-credentials`,\n                {\n\t\t\t\t\tclientId,\n\t\t\t\t\taccessKey\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\theaders: this.getBasicHeaders()\n\t\t\t\t}\n            )\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n    \n    refundPayment(orderNumber, refundAmount, reason, instalmentCycleTid) {\n        const apiRoute = `_action/${this.getApiBasePath()}/refund-payment`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n\t\t\t\torderNumber: orderNumber,\n                refundAmount: refundAmount,\n                reason: reason,\n                instalmentCycleTid: instalmentCycleTid,\n            },\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n    \n    instalmentCancel(orderNumber, cancelType) {\n        const apiRoute = `_action/${this.getApiBasePath()}/instalment-cancel`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n\t\t\t\torderNumber: orderNumber,\n                cancelType: cancelType,\n            },\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n    \n    BookOrderAmount(orderId, bookedAmount) {\n        const apiRoute = `_action/${this.getApiBasePath()}/book-amount`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n\t\t\t\torderId: orderId,\n                bookedAmount: bookedAmount\n            },\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n    \n    managePayment(orderNumber, status) {\n        const apiRoute = `_action/${this.getApiBasePath()}/manage-payment`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n\t\t\t\torderNumber: orderNumber,\n                status: status,                \n            },\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n    \n    getNovalnetAmount(orderNumber) {\n        const apiRoute = `_action/${this.getApiBasePath()}/transaction-amount`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n\t\t\t\torderNumber: orderNumber,\n            },\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n    \n    configureWebhookUrl(url, productActivationKey, paymentAccessKey) {\n        const apiRoute = `_action/${this.getApiBasePath()}/webhook-url-configure`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n\t\t\t\turl: url,\n\t\t\t\tproductActivationKey: productActivationKey,\n\t\t\t\tpaymentAccessKey: paymentAccessKey\n            },\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport default NovalPaymentApiCredentialsService;\n","import NovalPaymentApiCredentialsService\n    from '../../src/core/service/api/novalnet-payment-api-credentials.service';\n\nconst { Application } = Shopware;\n\nApplication.addServiceProvider('NovalPaymentApiCredentialsService', (container) => {\n    const initContainer = Application.getContainer('init');\n\n    return new NovalPaymentApiCredentialsService(initContainer.httpClient, container.loginService);\n});\n\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./novalnet-payment-settings.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"2907a316\", content, true, {});","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nimport listToStyles from './listToStyles'\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nexport default function addStylesClient (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./sw-order-detail-details.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3c679139\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ref--15-1!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--15-2!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--15-3!./novalnet-payment-configuration.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4bb63413\", content, true, {});","Shopware.Service('privileges')\n    .addPrivilegeMappingEntry({\n        category: 'permissions',\n        parent: 'orders',\n        key: 'novalnet_extension',\n        roles: {\n            viewer: {\n                privileges: [\n                    'novalnet_transaction_details:read',\n                    'novalnet_payment_token:read',\n                ],\n                dependencies: [],\n            },\n            editor: {\n                privileges: [\n                    'novalnet_transaction_details:update',\n                    'novalnet_payment_token:update',\n                    'order_transaction:read',\n                    'order_transaction:update',\n                ],\n                dependencies: [\n                    'novalnet_extension.viewer',\n                    'order.editor',\n                ],\n            },\n            creator: {\n                privileges: [\n                    'novalnet_transaction_details:create',\n                    'novalnet_payment_token:create',\n                ],\n                dependencies: [\n                    'novalnet_extension.viewer',\n                    'novalnet_extension.editor',\n                ],\n            },\n            deleter: {\n                privileges: [\n                    'novalnet_transaction_details:delete',\n                    'novalnet_payment_token:delete',\n                ],\n                dependencies: [\n                    'novalnet_extension.viewer',\n                ],\n            },\n        },\n    });\n\nShopware.Service('privileges').addPrivilegeMappingEntry({\n    category: 'permissions',\n    parent: 'novalnet_payment',\n    key: 'novalnet_payment',\n    roles: {\n        viewer: {\n            privileges: [\n                'system_config:read',\n                'sales_channel:read',\n            ],\n            dependencies: [],\n        },\n        editor: {\n            privileges: [\n                'system_config:update',\n                'system_config:create',\n                'system_config:delete',\n                'sales_channel:update',\n            ],\n            dependencies: [\n                'novalnet_payment.viewer',\n            ],\n        },\n    },\n});\n"],"sourceRoot":""}
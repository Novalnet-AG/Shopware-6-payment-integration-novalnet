{"version":3,"file":"static/js/novalnet-payment.js","mappings":"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","sources":["webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/acl/index.js","webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/components/novalnet-payment-configuration/novalnet-payment-configuration.scss?8cc7","webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/components/novalnet-payment-credentials/novalnet-payment-credentials.scss?9552","webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/sw-order-detail-details/sw-order-detail-details.scss?1280","webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/page/novalnet-payment-settings/novalnet-payment-settings.scss?078b","webpack://administration/./node_modules/vue-style-loader/lib/listToStyles.js","webpack://administration/./node_modules/vue-style-loader/lib/addStylesClient.js","webpack://administration/webpack/bootstrap","webpack://administration/webpack/runtime/define property getters","webpack://administration/webpack/runtime/hasOwnProperty shorthand","webpack://administration/webpack/runtime/publicPath","webpack://administration/data:text/javascript;charset=utf-8;base64,CiAgICAgICAgICAgIGlmICh3aW5kb3c/Ll9fc3dfXz8uYXNzZXRQYXRoKSB7CiAgICAgICAgICAgICAgICBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyA9IHdpbmRvdy5fX3N3X18uYXNzZXRQYXRoICsgJy9idW5kbGVzL25vdmFsbmV0cGF5bWVudC8nOwogICAgICAgICAgICB9CiAgICAgICAg","webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/page/novalnet-payment-settings/index.js","webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/page/novalnet-payment-settings/novalnet-payment-settings.html.twig","webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/components/novalnet-payment-settings-icon/index.js","webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/components/novalnet-payment-settings-icon/novalnet-payment-settings-icon.html.twig","webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/components/novalnet-payment-credentials/index.js","webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/components/novalnet-payment-credentials/novalnet-payment-credentials.html.twig","webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/components/novalnet-payment-configuration/index.js","webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/components/novalnet-payment-configuration/novalnet-payment-configuration.html.twig","webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/sw-order-detail-details/index.js","webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/sw-order-detail-details/sw-order-detail-details.html.twig","webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/novalnet-payment-refund-modal/index.js","webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/novalnet-payment-refund-modal/novalnet-payment-refund-modal.html.twig","webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/novalnet-payment-book-amount-modal/index.js","webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/novalnet-payment-book-amount-modal/novalnet-payment-book-amount-modal.html.twig","webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/novalnet-payment-instalment-refund-modal/index.js","webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/novalnet-payment-instalment-refund-modal/novalnet-payment-instalment-refund-modal.html.twig","webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/novalnet-payment-manage-transaction-modal/index.js","webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/extension/sw-order/view/novalnet-payment-manage-transaction-modal/novalnet-payment-manage-transaction-modal.html.twig","webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/module/novalnet-payment/index.js","webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/core/service/api/novalnet-payment-api-credentials.service.js","webpack://administration/../../../../../../custom/plugins/NovalnetPayment/src/Resources/app/administration/src/init/api-service.init.js"],"sourcesContent":["Shopware.Service('privileges')\n    .addPrivilegeMappingEntry({\n        category: 'permissions',\n        parent: 'orders',\n        key: 'novalnet_extension',\n        roles: {\n            viewer: {\n                privileges: [\n                    'novalnet_transaction_details:read',\n                    'novalnet_payment_token:read',\n                ],\n                dependencies: [],\n            },\n            editor: {\n                privileges: [\n                    'novalnet_transaction_details:update',\n                    'novalnet_payment_token:update',\n                    'order_transaction:read',\n                    'order_transaction:update',\n                ],\n                dependencies: [\n                    'novalnet_extension.viewer',\n                    'order.editor',\n                ],\n            },\n            creator: {\n                privileges: [\n                    'novalnet_transaction_details:create',\n                    'novalnet_payment_token:create',\n                ],\n                dependencies: [\n                    'novalnet_extension.viewer',\n                    'novalnet_extension.editor',\n                ],\n            },\n            deleter: {\n                privileges: [\n                    'novalnet_transaction_details:delete',\n                    'novalnet_payment_token:delete',\n                ],\n                dependencies: [\n                    'novalnet_extension.viewer',\n                ],\n            },\n        },\n    });\n\nShopware.Service('privileges').addPrivilegeMappingEntry({\n    category: 'permissions',\n    parent: 'novalnet_payment',\n    key: 'novalnet_payment',\n    roles: {\n        viewer: {\n            privileges: [\n                'system_config:read',\n                'sales_channel:read',\n            ],\n            dependencies: [],\n        },\n        editor: {\n            privileges: [\n                'system_config:update',\n                'system_config:create',\n                'system_config:delete',\n                'sales_channel:update',\n            ],\n            dependencies: [\n                'novalnet_payment.viewer',\n            ],\n        },\n    },\n});\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./novalnet-payment-configuration.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"409016f5\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./novalnet-payment-credentials.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"2626bda2\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./sw-order-detail-details.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"896c44ca\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./novalnet-payment-settings.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4ecc0253\", content, true, {});","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nimport listToStyles from './listToStyles'\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nexport default function addStylesClient (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"bundles/novalnetpayment/\";","\n            if (window?.__sw__?.assetPath) {\n                __webpack_public_path__ = window.__sw__.assetPath + '/bundles/novalnetpayment/';\n            }\n        ","import template from './novalnet-payment-settings.html.twig';\nimport './novalnet-payment-settings.scss';\n\nconst { Component, Mixin, Defaults } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.register('novalnet-payment-settings', {\n    template,\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('sw-inline-snippet')\n    ],\n\n    inject: [\n        'repositoryFactory',\n        'cacheApiService',\n        'acl',\n        'NovalPaymentApiCredentialsService'\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n            isSaveSuccessful: false,\n            clientIdFilled: false,\n            clientSecretFilled: false,\n            config: {},\n            salesChannels: []\n        };\n    },\n\n    computed: {\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        }\n    },\n\n    watch: {\n        config: {\n            handler(configData) {\n                if (!configData) {\n                    return;\n                }\n                const defaultConfig = this.$refs.configComponent.allConfigs.null;\n                const salesChannelId = this.$refs.configComponent.selectedSalesChannelId;\n\n                if (salesChannelId !== null) {\n\t\t\t\t\t\n\t\t\t\t\tif (!this.config['NovalnetPayment.settings.clientId'])\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.config['NovalnetPayment.settings.clientId'] = defaultConfig['NovalnetPayment.settings.clientId'];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (!this.config['NovalnetPayment.settings.accessKey'])\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.config['NovalnetPayment.settings.accessKey'] = defaultConfig['NovalnetPayment.settings.accessKey'];\n\t\t\t\t\t}\n                }\n                \n                this.$emit('salesChannelChanged');\n                this.$emit('update:value', configData);\n            },\n            deep: true,\n        },\n    },\n    \n    metaInfo() {\n        return {\n            title: this.$createTitle()\n        };\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n\t\tcreatedComponent() {\n            this.isLoading = true;\n            const criteria = new Criteria();\n            criteria.addFilter(Criteria.equalsAny('typeId', [\n                Defaults.storefrontSalesChannelTypeId,\n                Defaults.apiSalesChannelTypeId\n            ]));\n            this.salesChannelRepository.search(criteria, Shopware.Context.api).then(res => {\n                res.add({\n                    id: null,\n                    translated: {\n                        name: this.$tc('sw-sales-channel-switch.labelDefaultOption')\n                    }\n                });\n                this.salesChannels = res;\n            }).finally(() => {\n                this.isLoading = false;\n            });\n        },\n\n\t\tonSave() {\n\t\t\tthis.isSaveSuccessful = false;\n            this.isLoading = true;\n            \n            let clientId = this.getConfigValue('clientId');\n            let accessKey = this.getConfigValue('accessKey');\n            \n            if(clientId !== '' && clientId !== undefined)\n            {\n\t\t\t\tclientId = clientId.replace(/\\s/g, \"\");\n\t\t\t}\n\t\t\t\n\t\t\tif(accessKey !== '' && accessKey !== undefined)\n            {\n\t\t\t\taccessKey = accessKey.replace(/\\s/g, \"\");\n\t\t\t}\n            \n\n\t\t\tif (clientId == undefined || clientId == '')\n\t\t\t{\n\t\t\t\tthis.isLoading = false;\n\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleError'),\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.emptyMessage')\n\t\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t} else if (accessKey == undefined || accessKey == '') {\n\n\t\t\t\tthis.isLoading = false;\n\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleError'),\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.emptyAccessKeyMessage')\n\t\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.checkBackendConfiguration();\n\t\t},\n\n\t\tgetConfigValue(field) {\n            const defaultConfig = this.$refs.configComponent.allConfigs.null;\n            const salesChannelId = this.$refs.configComponent.selectedSalesChannelId;\n\n            if (salesChannelId === null) {\n                return this.config[`NovalnetPayment.settings.${field}`];\n            }\n\n            return this.config[`NovalnetPayment.settings.${field}`]\n                || defaultConfig[`NovalnetPayment.settings.${field}`];\n        },\n\n\t\tcheckBackendConfiguration() {\n\t\t\tconst me = this;\n\t\t\tconst clientId = this.getConfigValue('clientId').replace(/\\s/g, \"\");\n\t\t\tconst accessKey = this.getConfigValue('accessKey').replace(/\\s/g, \"\");\n\n\t\t\tthis.NovalPaymentApiCredentialsService.validateApiCredentials(clientId, accessKey).then((response) => {\n\n                if(response.serverResponse == undefined || response.serverResponse == '')\n                {\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleError'),\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.apiFailureMessage')\n\t\t\t\t\t});\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n                const status = response.serverResponse.result.status_code;\n                if(status != 100)\n                {\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleError'),\n\t\t\t\t\t\t\tmessage: response.serverResponse.result.status_text\n\t\t\t\t\t});\n\n\t\t\t\t\treturn;\n\t\t\t\t}else\n\t\t\t\t{\n\t\t\t\t\tresponse.tariffResponse.forEach(((tariff) => {\n\t\t\t\t\t\tif(this.config['NovalnetPayment.settings.tariff'] == undefined || this.config['NovalnetPayment.settings.tariff'] == '')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.config['NovalnetPayment.settings.tariff'] = tariff.id;\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\n\t\t\t\t\tthis.config['NovalnetPayment.settings.clientKey']\t= response.serverResponse.merchant.client_key;\n \t\t\t\t\t\n \t\t\t\t\tthis.$refs.configComponent.save().then((res) => {\n\t\t\t\t\t\tthis.isSaveSuccessful = true;\n\n\t\t\t\t\t\tif (res) {\n\t\t\t\t\t\t\tthis.config = res;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\t\tif (this.acl.can('system.clear_cache')) {\n\t\t\t\t\t\t\tthis.cacheApiService.clear().then(() => {\n\t\t\t\t\t\t\t}).catch(() => {\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleSuccess'),\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.successMessage')\n\t\t\t\t\t\t});\n\t\t\t\t\t}).catch(() => {\n\t\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleError'),\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.errorMessage')\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\treturn;\n                }\n            }).catch((errorResponse) => {\n                    this.createNotificationError({\n                        title: this.$tc('novalnet-payment.settingForm.titleError'),\n                        message: this.$tc('novalnet-payment.settingForm.errorMessage')\n                    });\n                    this.isLoading = false;\n                    this.isTestSuccessful = false;\n            });\n\t\t},\n\t},\n});\n","export default \"{% block novalnet_payment_settings %}\\n\\t<sw-page class=\\\"novalnet-payment\\\">\\n\\t\\t\\n\\t\\t{% block sw_promotion_v2_detail_header %}\\n\\t\\t\\t<template #smart-bar-header>\\n\\t\\t\\t\\t<h2>{{ $tc('sw-settings.index.title') }} <sw-icon name=\\\"regular-chevron-right-xs\\\" small></sw-icon> {{ $tc('novalnet-payment.settingForm.title') }} </h2>\\n\\t\\t\\t</template>\\n\\t\\t{% endblock %}\\n\\t\\t\\n\\t\\t{% block novalnet_payment_settings_actions %}\\n            <template #smart-bar-actions>\\n            \\n\\t\\t\\t\\t{% block novalnet_payment_actions_save %}\\n                    <sw-button-process class=\\\"sw-settings-login-registration__save-action\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   variant=\\\"primary\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"isSaveSuccessful\\\"\\n                                       :isLoading=\\\"isLoading\\\"\\n                                       :disabled=\\\"isLoading || !acl.can('novalnet_payment.editor')\\\"\\n                                       @click=\\\"onSave\\\">\\n                        {{ $tc('novalnet-payment.settingForm.buttons.save') }}\\n                    </sw-button-process>\\n                {% endblock %}\\n            \\n            </template>\\n        {% endblock %}\\n    \\n        {% block novalnet_payment_content %}\\n\\t\\t\\t<template #content>\\n\\t\\t\\t\\n\\t\\t\\t\\t{% block novalnet_payment_content_card_view %}\\n\\t\\t\\t\\t\\t<sw-card-view>\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_sales_channel_config %}\\n\\t\\t\\t\\t\\t\\t\\t<sw-sales-channel-config v-model:value=\\\"config\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t ref=\\\"configComponent\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t domain=\\\"NovalnetPayment.settings\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_sales_channelconfig_card %}\\n\\t\\t\\t\\t\\t\\t\\t\\t  <template #select=\\\"{ onInput, selectedSalesChannelId, salesChannel}\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_sales_channelconfig_card_sales_channel %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-card position-identifier=\\\"novalnet-payment-sales-channel-card\\\" :title=\\\"$tc('global.entities.sales_channel', 2)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-single-select v-model:value=\\\"selectedSalesChannelId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tlabelProperty=\\\"translated.name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvalueProperty=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:disabled=\\\"!acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:options=\\\"salesChannel\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:isLoading=\\\"isLoading\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t@update:value=\\\"onInput\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-single-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-card>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t\\t  </template>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_config_content_channel_config_cards %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"{ actualConfigData, allConfigs, selectedSalesChannelId }\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_config_content_tabs %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-tabs>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_credentials_card %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-tabs-item class=\\\"novalnet-payment-configuration-global-config\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:route=\\\"{ name: 'novalnet.payment.detail.credentials', params: { id: $route.params.id }}\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:title=\\\"$tc('novalnet-payment.module.globalTitle')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.module.globalTitle') }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-tabs-item>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-tabs-item class=\\\"novalnet-payment-configuration-payment-config\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :route=\\\"{ name: 'novalnet.payment.detail.configuration', params: { id: $route.params.id }}\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :title=\\\"$tc('novalnet-payment.module.paymentTitle')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.module.paymentTitle') }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-tabs-item>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-tabs>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_configuration_content_router_view %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"isLoading && !actualConfigData\\\" class=\\\"novalnet-payment-configurations\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-skeleton />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-skeleton />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template v-else>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<router-view v-slot=\\\"{ Component }\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<component\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:is=\\\"Component\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:isLoading=\\\"isLoading\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:actualConfigData=\\\"actualConfigData\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:allConfigs=\\\"allConfigs\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:selectedSalesChannelId=\\\"selectedSalesChannelId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</router-view>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</sw-sales-channel-config>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_loading %}\\n                            <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n                        {% endblock %}\\n                        \\n\\t\\t\\t\\t\\t</sw-card-view>\\n\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\n\\t\\t\\t</template>\\n        {% endblock %}\\n\\t</sw-page>\\n{% endblock %}\\n\";","import template from './novalnet-payment-settings-icon.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.register('novalnet-payment-settings-icon', {\n    template,\n    \n    computed: {\n\t\tassetFilter() {\n            return Shopware.Filter.getByName('asset');\n        }\n\t}\n});\n","export default \"{% block novalnet_payment_settings_icon %}\\n    <img class=\\\"sw-settings-index__novalnet-payment-icon\\\" :src=\\\"assetFilter('novalnetpayment/administration/plugin.png')\\\">\\n{% endblock %}\\n\";","import template from './novalnet-payment-credentials.html.twig';\nimport './novalnet-payment-credentials.scss';\n\nconst { Component, Mixin } = Shopware;\n\nComponent.register('novalnet-payment-credentials', {\n    template,\n\n\tmixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('sw-inline-snippet')\n    ],\n\n\tprops: {\n        actualConfigData: {\n            type: Object,\n            required: true\n        },\n        allConfigs: {\n            type: Object,\n            required: true\n        },\n        selectedSalesChannelId: {\n            required: true\n        }\n    },\n\n    data() {\n\t\tconst url = window.location .protocol + \"//\" + window.location.host + window.location.pathname;\n\t\tconst generatedUrl = url.split(\"/admin\").join(\"\");\n        return {\n\t\t\tshouldDisable :false,\n\t\t\tprojectMode: false,\n\t\t\tisLoading: false,\n\t\t\tisRequested : '',\n\t\t\tshowMessage: false,\n\t\t\tbuttonLoad: false,\n\t\t\ttariffId: '',\n\t\t\ttariffOptions: [],\n\t\t\tNovalnetPaymentCallBackUrl : generatedUrl + \"/novalnet/callback\",\n\t\t\tgeneralInformation: this.$tc('novalnet-payment.module.generalInfo'),\n\t\t\tinstallationInformation: this.$tc('novalnet-payment.module.installationInfo')\n\t\t};\n\t},\n\n\tinject: [\n        'NovalPaymentApiCredentialsService',\n        'acl',\n    ],\n\n\tcreated() {\n\t\tthis.createdComponent();\n    },\n\n    updated() {\n\t\tthis.createdComponent();\n\t},\n\n    methods: {\n        checkTextFieldInheritance(value) {\n            if (typeof value !== 'string') {\n                return true;\n            }\n\n            return value.length <= 0;\n        },\n\n        checkBoolFieldInheritance(value) {\n            return typeof value !== 'boolean';\n        },\n\n        onCheckApi() {\n\t\t\tif(event.target.name === 'NovalnetPayment.settings.clientId') {\n\t\t\t\tthis.actualConfigData['NovalnetPayment.settings.clientId'] = event.target.value;\n\t\t\t} else if(event.target.name === 'NovalnetPayment.settings.accessKey') {\n\t\t\t\tthis.actualConfigData['NovalnetPayment.settings.accessKey'] = event.target.value;\n\t\t\t}\n\n\t\t\tif (event != undefined && event.type == 'input')\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.actualConfigData['NovalnetPayment.settings.clientId'] === '' && this.actualConfigData['NovalnetPayment.settings.accessKey'] === '')\n\t\t\t{\n\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleError'),\n\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.apiFailureMessage')\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.isRequested = '';\n\t\t\tthis.showMessage = true;\n\t\t\tthis.createdComponent();\n\t\t},\n\n        createdComponent() {\n\t\t\tif(this.actualConfigData !== undefined && this.isRequested !== this.selectedSalesChannelId)\n\t\t\t{\n\t\t\t\tthis.isRequested\t\t= this.selectedSalesChannelId;\n\t\t\t\tlet apiActivationKey\t= this.actualConfigData['NovalnetPayment.settings.clientId'] || this.allConfigs.null['NovalnetPayment.settings.clientId'];\n\t\t\t\tlet paymentAccessKey\t= (this.actualConfigData['NovalnetPayment.settings.accessKey'] || this.allConfigs.null['NovalnetPayment.settings.accessKey']);\n\n\t\t\t\tif(apiActivationKey !== undefined && apiActivationKey !== '' && paymentAccessKey !== undefined && paymentAccessKey !== '' )\n\t\t\t\t{\n                    apiActivationKey = apiActivationKey.replace(/\\s/g, \"\");\n                    paymentAccessKey = paymentAccessKey.replace(/\\s/g, \"\");\n\t\t\t\t\tthis.isLoading = true;\n\t\t\t\t\tthis.NovalPaymentApiCredentialsService.validateApiCredentials(apiActivationKey, paymentAccessKey).then((response) => {\n\t\t\t\t\t\tconst status = response.serverResponse.result.status_code;\n\t\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\t\tif(status !== 100)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(this.showMessage === true)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleError'),\n\t\t\t\t\t\t\t\t\tmessage: response.serverResponse.result.status_text,\n\t\t\t\t\t\t\t\t\tautoClose: true\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.showMessage = false;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.tariffOptions = [];\n\t\t\t\t\t\t\tresponse.tariffResponse.forEach(((tariff) => {\n\n\t\t\t\t\t\t\t\tthis.actualConfigData['NovalnetPayment.settings.clientKey']\t= response.serverResponse.merchant.client_key;\n\n\t\t\t\t\t\t\t\tthis.tariffOptions.push({\n\t\t\t\t\t\t\t\t\tvalue: tariff.id,\n\t\t\t\t\t\t\t\t\tlabel: tariff.name\n\t\t\t\t\t\t\t\t});\n\n                                if(this.tariffId === undefined || this.tariffId === '')\n                                {\n                                    this.tariffId = {value: tariff.id, label: tariff.name};\n                                }\n\n\t\t\t\t\t\t\t\tif(this.showMessage === true)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleSuccess'),\n\t\t\t\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.successMessage'),\n\t\t\t\t\t\t\t\t\t\tautoClose: true\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthis.showMessage = false;\n\t\t\t\t\t\t\t\tif(response.serverResponse.merchant.test_mode === 1)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.projectMode = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}));\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}).catch((errorResponse) => {\n\t\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n        configureWebhookUrl() {\n\t\t\tconst productActivationKey\t= this.actualConfigData['NovalnetPayment.settings.clientId'] || this.allConfigs.null['NovalnetPayment.settings.clientId'];\n\t\t\tconst accessKey\t\t\t\t= this.actualConfigData['NovalnetPayment.settings.accessKey'] || this.allConfigs.null['NovalnetPayment.settings.accessKey'];\n\n\t\t\tif ( productActivationKey === undefined || productActivationKey === '' || accessKey === undefined || accessKey === '')\n\t\t\t{\n\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\ttitle: this.$tc('novalnet-payment.settingForm.titleError'),\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.apiFailureMessage')\n\t\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif( this.NovalnetPaymentCallBackUrl)\n\t\t\t{\n\t\t\t\tif (/^(http|https):\\/\\/[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,}(:[0-9]{1,5})?(\\/.*)?$/i.test(this.NovalnetPaymentCallBackUrl) === false)\n\t\t\t\t{\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.webhookUrlFailure')\n\t\t\t\t\t});\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tthis.buttonLoad = true;\n\n\t\t\t\tthis.NovalPaymentApiCredentialsService.configureWebhookUrl(this.NovalnetPaymentCallBackUrl, productActivationKey, accessKey).then((response) => {\n\n\t\t\t\t\t\tif(response.result.status !== undefined && response.result.status != null && response.result.status !== '' && response.result.status === 'SUCCESS')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.webhookUrlSuccess')\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else if(response.result.status_text !== undefined && response.result.status_text != null && response.result.status_text !== '') {\n\t\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\t\tmessage: response.result.status_text,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.webhookUrlFailure')\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\tthis.buttonLoad = false;\n\n\t\t\t\t}).catch((errorResponse) => {\n\t\t\t\t\tthis.buttonLoad = false;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n    }\n});\n","export default \"{% block novalnet_payment_content_card_config_credentials %}\\n\\t<sw-card class=\\\"sw-card--grid\\\" \\n\\t\\t\\t :title=\\\"$tc('novalnet-payment.settingForm.credentials.cardTitle')\\\">\\n\\t\\t\\t\\t \\n\\t\\t{% block novalnet_payment_content_card_config_credentials_card_container %}\\n\\t\\t\\t<sw-container>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t{% block novalnet_payment_content_card_config_credentials_card_container_settings %}\\n\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_config_credentials_card_container_project_info %}\\n\\t\\t\\t\\t\\t\\t\\t<sw-alert v-if=\\\"projectMode\\\" variant=\\\"info\\\" appearance=\\\"default\\\" :showIcon=\\\"true\\\" :closable=\\\"false\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.module.projectInfo') }}\\n\\t\\t\\t\\t\\t\\t\\t</sw-alert>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_config_credentials_card_container_general_info %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-html=\\\"generalInformation\\\" class=\\\"novalnet_payment-settings-project\\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t<div v-html=\\\"installationInformation\\\" class=\\\"novalnet_payment-settings-project\\\"></div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_config_credentials_card_container_settings_client_id %}\\n\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.clientId']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.clientId']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.clientId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.credentials.activationKey.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.credentials.activationKey.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"!acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"onCheckApi\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.accessKey']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.accessKey']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.accessKey\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t    autocomplete=\\\"off\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.credentials.accessKey.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.credentials.accessKey.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"!acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"onCheckApi\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.clientKey']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.clientKey']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.clientKey\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   v-show=\\\"shouldDisable\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"!acl.can('novalnet_payment.editor')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.tariff']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.tariff']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-single-select name=\\\"NovalnetPayment.settings.tariff\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :v-model:value=\\\"tariffId\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :options=\\\"tariffOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :label=\\\"$tc('novalnet-payment.settingForm.credentials.tariff.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :helpText=\\\"$tc('novalnet-payment.settingForm.credentials.tariff.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :disabled=\\\"!acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-single-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.emailMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.emailMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t    :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.emailMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t bordered\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :isInherited=\\\"props.isInherited\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t     :label=\\\"$tc('novalnet-payment.settingForm.credentials.orderEmailMode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t     :helpText=\\\"$tc('novalnet-payment.settingForm.credentials.orderEmailMode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t     :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t     :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t     @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t</sw-container>\\n\\t\\t{% endblock %}\\n\\n\\t\\t{% block novalnet_payment_content_card_loading %}\\n            <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n        {% endblock %}\\n\\t</sw-card>\\n{% endblock %}\\n\\n{% block novalnet_payment_content_card_config_merchant_credentials %}\\n\\t<sw-card class=\\\"sw-card--grid\\\"\\n\\t\\t\\t :title=\\\"$tc('novalnet-payment.settingForm.merchantSettings.cardTitle')\\\">\\n\\t\\t\\n\\t\\t{% block novalnet_payment_content_card_config_merchant_credentials_card_container %}\\n\\t\\t\\t<sw-container>\\n\\t\\t\\t\\n\\t\\t\\t\\t{% block novalnet_payment_content_card_config_merchant_credentials_card_container_settings %}\\n\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-merchant-credentials\\\">\\n\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_config_merchant_credentials_card_container_settings_ip %}\\n\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.callbackUrl']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.callbackUrl']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.callbackUrl\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   v-model:value=\\\"NovalnetPaymentCallBackUrl\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :isInherited=\\\"props.isInherited\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.merchantSettings.callbackUrl.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.merchantSettings.callbackUrl.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t<sw-button-process class=\\\"novalnet-payment-callback-field\\\" :disabled=\\\"false || !acl.can('novalnet_payment.editor')\\\" :isLoading=\\\"buttonLoad\\\"  @click=\\\"configureWebhookUrl()\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.merchantSettings.callbackUrl.button') }}\\n\\t\\t\\t\\t\\t\\t\\t</sw-button-process>\\n\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.deactivateIp']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.deactivateIp']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.deactivateIp\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t bordered\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :label=\\\"$tc('novalnet-payment.settingForm.merchantSettings.deactivateIp.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :helpText=\\\"$tc('novalnet-payment.settingForm.merchantSettings.deactivateIp.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :isInherited=\\\"props.isInherited\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.mailTo']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.mailTo']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.mailTo\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :isInherited=\\\"props.isInherited\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.merchantSettings.mailTo.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.merchantSettings.mailTo.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t</sw-container>\\n\\t\\t{% endblock %}\\n\\t</sw-card>\\n{% endblock %}\\n\";","import template from './novalnet-payment-configuration.html.twig';\nimport './novalnet-payment-configuration.scss';\n\nconst { Component } = Shopware;\n\nComponent.register('novalnet-payment-configuration', {\n    template,\n\t\n\tinject: ['acl'],\n\n\tprops: {\n        actualConfigData: {\n            type: Object,\n            required: true\n        },\n        allConfigs: {\n            type: Object,\n            required: true\n        },\n        selectedSalesChannelId: {\n            required: true\n        }\n    },\n\n    data() {\n        return {\n            selected: 'capture',\n            paypalInformation: this.$tc('novalnet-payment.settingForm.paymentSettings.paypal.configureLink'),\n            sellerNamePlaceHolder: window.location.host\n        };\n    },\n\n    computed: {\n\t\tonholdOptions() {\n            return [\n                {\n                    id: 'capture',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.onHold.capture')\n                },\n                {\n                    id: 'authroize',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.onHold.authroize')\n                }\n            ];\n        },\n        onHoldZeroOptions() {\n            return [\n                {\n                    id: 'capture',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.onHold.capture')\n                },\n                {\n                    id: 'authroize',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.onHold.authroize')\n                },\n                {\n                    id: 'zero_amount',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.onHold.zeroAmountBooking')\n                }\n            ];\n        },\n        displayFieldOptions() {\n            return [\n                {\n                    id: 'cart',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.displayFields.cartPage')\n                },\n                {\n                    id: 'register',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.displayFields.registerPage')\n                },\n                {\n                    id: 'ajaxCart',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.displayFields.miniCartPage')\n                },\n                {\n                    id: 'productDetailPage',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.displayFields.productPage')\n                },\n                {\n                    id: 'productListingPage',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.displayFields.productListingPage')\n                }\n            ];\n        },\n        buttonThemeOptions() {\n            return [\n                {\n                    id: 'black',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonTheme.dark')\n                },\n                {\n                    id: 'white',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonTheme.light')\n                },\n                {\n                    id: 'white-outline',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonTheme.outline')\n                }\n            ];\n        },\n        buttonGpayThemeOptions() {\n            return [\n                {\n                    id: 'default',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonTheme.default')\n                },\n                {\n                    id: 'black',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonTheme.black')\n                },\n                {\n                    id: 'white',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonTheme.white')\n                }\n            ];\n        },\n        buttonTypeOptions() {\n            return [\n                {\n                    id: 'plain',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.default')\n                },\n                {\n                    id: 'buy',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.buy')\n                },\n                {\n                    id: 'donate',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.donate')\n                },\n                {\n                    id: 'book',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.book')\n                },\n                {\n                    id: 'contribute',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.contribute')\n                },\n                {\n                    id: 'check-out',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.checkout')\n                },\n                {\n                    id: 'order',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.order')\n                },\n                {\n                    id: 'pay',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.pay')\n                },\n                {\n                    id: 'subscribe',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.subscribe')\n                },\n                {\n                    id: 'tip',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.tip')\n                },\n                {\n                    id: 'rent',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.rent')\n                },\n                {\n                    id: 'reload',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.reload')\n                },\n                {\n                    id: 'support',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonType.support')\n                }\n            ];\n        },\n        buttonGpayTypeOptions() {\n            return [\n                {\n                    id: 'book',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonType.book')\n                },\n                {\n                    id: 'buy',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonType.buy')\n                },\n                {\n                    id: 'checkout',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonType.checkout')\n                },\n                {\n                    id: 'donate',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonType.donate')\n                },\n                {\n                    id: 'order',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonType.order')\n                },\n                {\n                    id: 'pay',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonType.pay')\n                },\n                {\n                    id: 'plain',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonType.plain')\n                },\n                {\n                    id: 'subscribe',\n                    name: this.$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonType.subscribe')\n                }\n            ];\n        },\n\n        instalmentOptions() {\n\t\t\tlet options = [];\n\t\t\tconst cycles = ['2','3','4','5','6','7','8','9','10','11','12','15','18','21','24','36'];\n\t\t\tconst translated = this.$tc('novalnet-payment.settingForm.paymentSettings.instalmentCycleInfo.cycle');\n\t\t\tcycles.forEach(function(index) {\n\t\t\t\toptions.push({\n\t\t\t\t\tid: index,\n\t\t\t\t\tname: index + translated\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn options;\n\t\t}\n\t},\n\n    methods: {\n        checkTextFieldInheritance(value) {\n            if (typeof value !== 'string') {\n                return true;\n            }\n            return value.length <= 0;\n        },\n\n        checkBoolFieldInheritance(value) {\n            return typeof value !== 'boolean';\n        },\n\n        getInheritValue(key) {\n            if (this.allConfigs['null'][key])\n            {\n                return this.allConfigs['null'][key];\n            } else {\n                return this.actualConfigData[key];\n            }\n        },\n    }\n});\n","export default \"{% block novalnet_payment_content_card_channel_config_payment %}\\n    \\n\\t{% block novalnet_payment_content_card_channel_config_payment_card_sepa %}\\n\\t\\t<sw-card class=\\\"sw-card--grid novalnet-payment-configration-card\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_sepa_container %}\\n\\t\\t\\t\\t<sw-container>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<template #header=\\\"{ expanded }\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.sepa.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</template>\\n\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<template #content>\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_sepa_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_sepa %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.sepaTestMode']\\\"\\n                                                            :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepaDueDate']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.sepaTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t bordered\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.sepaOneclick']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepaOneclick']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.sepaOneclick\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.oneclick.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.oneclick.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :isInherited=\\\"props.isInherited\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.sepaDueDate']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepaDueDate']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-number-field name=\\\"NovalnetPayment.settings.sepaDueDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t numberType=\\\"int\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :min=\\\"2\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :max=\\\"14\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.sepa.dueDate.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.sepa.dueDate.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :isInherited=\\\"props.isInherited\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.sepaOnHold']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepaOnHold']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-single-select name=\\\"NovalnetPayment.settings.sepaOnHold\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  labelProperty=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  valueProperty=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :options=\\\"onHoldZeroOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :isInherited=\\\"props.isInherited\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-single-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.sepaOnHoldAmount']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepaOnHoldAmount']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-number-field name=\\\"NovalnetPayment.settings.sepaOnHoldAmount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t numberType=\\\"int\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountLabel')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue == 0 ? null : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.sepaNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepaNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.sepaNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t{% endblock %}\\n    \\t</sw-card>\\n\\t{% endblock %}\\n\\n\\t{% block novalnet_payment_content_card_channel_config_payment_card_sepaguarantee %}\\n\\t\\t<sw-card class=\\\"sw-card--grid novalnet-payment-configration-card\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_sepaguarantee_container %}\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #header=\\\"{ expanded }\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.sepaguarantee.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</template>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #content>\\n\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_sepaguarantee_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"guarantee_conditions\\\">\\n                                <p class=\\\"guarantee_condtions_headings\\\">{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.title') }}\\n\\t\\t\\t\\t\\t\\t\\t\\t</p>\\n                                <p>\\n                                    <ul class=\\\"guarantee_condtions_list\\\">\\n                                        <li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.country') }}</li>\\n                                        <li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.b2b') }}</li>\\n                                        <li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.currency') }}</li>\\n                                        <li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.amount') }}</li>\\n                                        <li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.age') }}</li>\\n                                        <li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.address') }}</li>\\n                                    </ul>\\n                                </p>\\n                            </div>\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_sepaguarantee %}\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.sepaguaranteeTestMode']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepaguaranteeTestMode']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.sepaguaranteeTestMode\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :isInherited=\\\"props.isInherited\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.sepaguaranteeOneclick']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepaguaranteeOneclick']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.sepaguaranteeOneclick\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             :isInherited=\\\"props.isInherited\\\"\\n                                                             :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.oneclick.label')\\\"\\n                                                             :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.oneclick.tooltipText')\\\"\\n                                                             :value=\\\"props.currentValue\\\"\\n                                                             @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.sepaguaranteeMinimumOrderAmount']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepaguaranteeMinimumOrderAmount']\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-number-field name=\\\"NovalnetPayment.settings.sepaguaranteeMinimumOrderAmount\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             :min=\\\"999\\\"\\n                                                             :allowEmpty=\\\"false\\\"\\n                                                             numberType=\\\"integer\\\"\\n                                                             :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.label')\\\"\\n                                                             :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.tooltipText')\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             :value=\\\"props.currentValue\\\"\\n                                                             @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-number-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.sepaguaranteeOnHold']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t            :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepaguaranteeOnHold']\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-single-select name=\\\"NovalnetPayment.settings.sepaguaranteeOnHold\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t              labelProperty=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t              valueProperty=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t              :options=\\\"onholdOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t              :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t              :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t                  :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t              :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t              :isInherited=\\\"props.isInherited\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t              :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t              @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-single-select>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    \\n                                     <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.sepaguaranteeOnHoldAmount']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepaguaranteeOnHoldAmount']\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-number-field name=\\\"NovalnetPayment.settings.sepaguaranteeOnHoldAmount\\\"\\n                                                             numberType=\\\"int\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountLabel')\\\"\\n                                                             :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip')\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             :value=\\\"props.currentValue == 0 ? null : props.currentValue\\\"\\n                                                             @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-number-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.sepaguaranteeForceGuarantee']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepaguaranteeForceGuarantee']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.sepaguaranteeForceGuarantee\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.forceGuarantee.label')\\\"\\n                                                             :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.forceGuarantee.tooltipText')\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             :isInherited=\\\"props.isInherited\\\"\\n                                                             :value=\\\"props.currentValue\\\"\\n                                                             @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <div class=\\\"novalnet_payment_force_guarantee_enable_condtion\\\">{{ $tc('novalnet-payment.settingForm.paymentSettings.forceGuarantee.sepacondition') }}</div>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.sepaguaranteeAllowB2B']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepaguaranteeAllowB2B']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.sepaguaranteeAllowB2B\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.allowB2B.label')\\\"\\n                                                             :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.allowB2B.tooltipText')\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             :isInherited=\\\"props.isInherited\\\"\\n                                                             :value=\\\"props.currentValue\\\"\\n                                                             @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.sepaguaranteeNotify']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepaguaranteeNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-text-field name=\\\"NovalnetPayment.settings.sepaguaranteeNotify\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\"\\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n                                                           :isInherited=\\\"props.isInherited\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-text-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                {% endblock %}\\n                            </div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n\\n\\t{% block novalnet_payment_content_card_channel_config_payment_creditcard %}\\n\\t\\t<sw-card class=\\\"sw-card--grid novalnet-payment-configration-card\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_creditcard_container %}\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #header=\\\"{ expanded }\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.creditcard.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</template>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #content>\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings %}\\n                            <div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_creditcard %}\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.creditcardTestMode']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.creditcardTestMode']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.creditcardTestMode\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.creditcardOneclick']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.creditcardOneclick']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.creditcardOneclick\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.oneclick.label')\\\"\\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.oneclick.tooltipText')\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.creditcardInline']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.creditcardInline']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.creditcardInline\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.creditcard.inline.label')\\\"\\n                                                             :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.creditcard.inline.tooltipText')\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             :value=\\\"props.currentValue\\\"\\n                                                             @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.creditcardEnforcecc3D']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.creditcardEnforcecc3D']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.creditcardEnforcecc3D\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.creditcard.enforcecc3D.label')\\\"\\n                                                             :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.creditcard.enforcecc3D.tooltipText')\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             :value=\\\"props.currentValue\\\"\\n                                                             @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.creditcardOnHold']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.creditcardOnHold']\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-single-select name=\\\"NovalnetPayment.settings.creditcardOnHold\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :mapInheritance=\\\"props\\\"\\n                                                              labelProperty=\\\"name\\\"\\n                                                              valueProperty=\\\"id\\\"\\n                                                              :options=\\\"onHoldZeroOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.label')\\\"\\n                                                \\t\\t\\t  :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.tooltipText')\\\"\\n                                                              :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                              :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n                                                              @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-single-select>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                   <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.creditcardOnHoldAmount']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.creditcardOnHoldAmount']\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-number-field name=\\\"NovalnetPayment.settings.creditcardOnHoldAmount\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             numberType=\\\"int\\\"\\n                                                             :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountLabel')\\\"\\n                                                             :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip')\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             :value=\\\"props.currentValue == 0 ? null : props.currentValue\\\"\\n                                                             @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-number-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.creditcardNotify']\\\"\\n                                                :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.creditcardNotify']\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-text-field name=\\\"NovalnetPayment.settings.creditcardNotify\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :isInherited=\\\"props.isInherited\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\"\\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-text-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n\\n                        <div class=\\\"novalnet_payment_css_card_title\\\">\\n                                {{ $tc('novalnet-payment.settingForm.paymentSettings.creditcard.css.cardTitle') }}\\n                        </div>\\n\\n                        {% block novalnet_payment_content_card_channel_config_payment_card_css_container_settings %}\\n                            <div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_creditcard_css %}\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.creditcardLabel']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.creditcardLabel']\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-text-field name=\\\"NovalnetPayment.settings.creditcardLabel\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.creditcard.css.label')\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-text-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.creditcardInput']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.creditcardInput']\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-text-field name=\\\"NovalnetPayment.settings.creditcardInput\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.creditcard.css.input')\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-text-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.creditcardCss']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.creditcardCss']\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-text-field name=\\\"NovalnetPayment.settings.creditcardCss\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.creditcard.css.css')\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-text-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n\\n\\t{% block novalnet_payment_content_card_channel_config_payment_applepay %}\\n\\t\\t<sw-card class=\\\"sw-card--grid novalnet-payment-configration-card\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_applepay_container %}\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #header=\\\"{ expanded }\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.applepay.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</template>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #content>\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_applepay_container_settings %}\\n                            <div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_applepay %}\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.applepayTestMode']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.applepayTestMode']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.applepayTestMode\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.applepayOnHold']\\\"\\n                                                        :has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.applepayOnHold')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.applepayOnHold')\\\"\\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.label')\\\"\\n                                                        :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.tooltipText')\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-single-select name=\\\"NovalnetPayment.settings.applepayOnHold\\\"\\n                                                              labelProperty=\\\"name\\\"\\n                                                              valueProperty=\\\"id\\\"\\n                                                              :mapInheritance=\\\"props\\\"\\n                                                              :options=\\\"onHoldZeroOptions\\\"\\n                                                              :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                              :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n                                                              @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-single-select>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.applepayOnHoldAmount']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.applepayOnHoldAmount']\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-number-field name=\\\"NovalnetPayment.settings.applepayOnHoldAmount\\\"\\n                                                             numberType=\\\"int\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountLabel')\\\"\\n                                                             :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip')\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             :value=\\\"props.currentValue == 0 ? null : props.currentValue\\\"\\n                                                           @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-number-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.applepaySellerName']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.applepaySellerName']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-text-field name=\\\"NovalnetPayment.settings.applepaySellerName\\\"\\n                                                           :mapInheritance=\\\"props\\\"  \\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.applepay.sellerName.label')\\\" \\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.applepay.sellerName.tooltipText')\\\"\\n                                                           :placeholder=\\\"sellerNamePlaceHolder\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-text-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                     <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.applepayNotify']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.applepayNotify']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-text-field name=\\\"NovalnetPayment.settings.applepayNotify\\\"\\n                                                           :mapInheritance=\\\"props\\\"  :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-text-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n\\n                                    <div class=\\\"novalnet_payment_applepay\\\">{{ $tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonTitle') }}</div>\\n\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.applepayButtonType']\\\"\\n                                                        :has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.applepayButtonType')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.applepayButtonType')\\\"\\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonTypeLabel')\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-single-select name=\\\"NovalnetPayment.settings.applepayButtonType\\\"\\n                                                              labelProperty=\\\"name\\\"\\n                                                              valueProperty=\\\"id\\\"\\n                                                              :mapInheritance=\\\"props\\\"\\n                                                              :options=\\\"buttonTypeOptions\\\"\\n                                                              :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                              :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n                                                              @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-single-select>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.applepayButtonTheme']\\\"\\n                                                        :has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.applepayButtonTheme')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.applepayButtonTheme')\\\"\\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonTheme.label')\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-single-select name=\\\"NovalnetPayment.settings.applepayButtonTheme\\\"\\n                                                              labelProperty=\\\"name\\\"\\n                                                              valueProperty=\\\"id\\\"\\n                                                              :options=\\\"buttonThemeOptions\\\"\\n                                                              :mapInheritance=\\\"props\\\"\\n                                                              :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                              :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n                                                              @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-single-select>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.applepayButtonHeight']\\\"\\n                                                        :has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.applepayButtonHeight')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.applepayButtonHeight')\\\"\\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonHeight.label')\\\" \\n                                                        :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonHeight.tooltipText')\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-number-field name=\\\"NovalnetPayment.settings.applepayButtonHeight\\\"\\n                                                             numberType=\\\"int\\\" \\n                                                             :step=\\\"null\\\" \\n                                                             :min=\\\"30\\\" \\n                                                             :max=\\\"64\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             :value=\\\"props.currentValue\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-number-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.applepayButtonRadius']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.applepayButtonRadius')\\\"\\n                                                    \\t:inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.applepayButtonRadius')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonRadius.label')\\\" \\n                                                    \\t:helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.applepay.buttonRadius.tooltipText')\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-number-field name=\\\"NovalnetPayment.settings.applepayButtonRadius\\\"\\n                                                             numberType=\\\"int\\\" \\n                                                             :step=\\\"null\\\" \\n                                                             :min=\\\"0\\\" \\n                                                             :max=\\\"10\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             :value=\\\"props.currentValue\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-number-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.applepayDisplayFields']\\\"\\n                                                    :has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.applepayDisplayFields')\\\"\\n                                                    :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.applepayDisplayFields')\\\"\\n                                                    :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.applepay.displayFields.label')\\\"\\n                                                    :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.applepay.displayFields.tooltipText')\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-multi-select name=\\\"NovalnetPayment.settings.applepayDisplayFields\\\"\\n                                                     :placeholder=\\\"$tc('novalnet-payment.settingForm.paymentSettings.applepay.displayFields.emptyText')\\\"\\n                                                     :mapInheritance=\\\"props\\\"\\n                                                     labelProperty=\\\"name\\\"\\n                                                     valueProperty=\\\"id\\\"\\n                                                     :options=\\\"displayFieldOptions\\\"\\n                                                     :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                     :value=\\\"props.currentValue\\\"\\n                                                     @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-multi-select>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n\\n\\t{% block novalnet_payment_content_card_channel_config_payment_googlepay %}\\n\\t\\t<sw-card class=\\\"sw-card--grid novalnet-payment-configration-card\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_googlepay_container %}\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #header=\\\"{ expanded }\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.googlepay.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</template>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #content>\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_googlepay_container_settings %}\\n                            <div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_googlepay %}\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.googlepayTestMode']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.googlepayTestMode']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.googlepayTestMode\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.googlepayOnHold']\\\"\\n                                                        :has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.googlepayOnHold')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.googlepayOnHold')\\\"\\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.label')\\\"\\n                                                        :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.tooltipText')\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-single-select name=\\\"NovalnetPayment.settings.googlepayOnHold\\\"\\n                                                              labelProperty=\\\"name\\\"\\n                                                              valueProperty=\\\"id\\\"\\n                                                              :options=\\\"onHoldZeroOptions\\\"\\n                                                              :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                              :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n                                                              @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-single-select>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.googlepayOnHoldAmount']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.googlepayOnHoldAmount']\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-number-field name=\\\"NovalnetPayment.settings.googlepayOnHoldAmount\\\"\\n                                                             numberType=\\\"int\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountLabel')\\\"\\n                                                             :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip')\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             :value=\\\"props.currentValue == 0 ? null : props.currentValue\\\"\\n                                                           @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-number-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.googlepaySellerName']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.googlepaySellerName']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-text-field name=\\\"NovalnetPayment.settings.googlepaySellerName\\\"\\n                                                           :mapInheritance=\\\"props\\\"  \\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.googlepay.sellerName.label')\\\" \\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.googlepay.sellerName.tooltipText')\\\"\\n                                                           :placeholder=\\\"sellerNamePlaceHolder\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-text-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.googlepayMerchantId']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.googlepayMerchantId']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-text-field name=\\\"NovalnetPayment.settings.googlepayMerchantId\\\"\\n                                                           :mapInheritance=\\\"props\\\"  :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.googlepay.merchantId.label')\\\" :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.googlepay.merchantId.tooltipText')\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-text-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.googlepayEnforcecc3D']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.googlepayEnforcecc3D']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.googlepayEnforcecc3D\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.creditcard.enforcecc3D.label')\\\"\\n                                                             :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.creditcard.enforcecc3D.tooltipText')\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             :value=\\\"props.currentValue\\\"\\n                                                             @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.googlepayNotify']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.googlepayNotify']\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-text-field name=\\\"NovalnetPayment.settings.googlepayNotify\\\"\\n                                                           :mapInheritance=\\\"props\\\"  :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" \\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-text-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <div class=\\\"novalnet_payment_googlepay\\\">{{ $tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonTitle') }}</div>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.googlepayButtonType']\\\"\\n                                                        :has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.googlepayButtonType')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.googlepayButtonType')\\\"\\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonTypeLabel')\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-single-select name=\\\"NovalnetPayment.settings.googlepayButtonType\\\"\\n                                                              labelProperty=\\\"name\\\"\\n                                                              valueProperty=\\\"id\\\"\\n                                                              :options=\\\"buttonGpayTypeOptions\\\"\\n                                                              :mapInheritance=\\\"props\\\"\\n                                                              :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                              :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n                                                              @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-single-select>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.googlepayButtonHeight']\\\"\\n                                                        :has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.googlepayButtonHeight')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.googlepayButtonHeight')\\\"\\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonHeight.label')\\\" \\n                                                        :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.googlepay.buttonHeight.tooltipText')\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-number-field name=\\\"NovalnetPayment.settings.googlepayButtonHeight\\\"\\n                                                             numberType=\\\"int\\\" \\n                                                             :step=\\\"null\\\" \\n                                                             :min=\\\"40\\\" \\n                                                             :max=\\\"100\\\"\\n                                                             :mapInheritance=\\\"props\\\"\\n                                                             :value=\\\"props.currentValue\\\"\\n                                                             :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                             @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-number-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.googlepayDisplayFields']\\\"\\n                                                        :has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.googlepayDisplayFields')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.googlepayDisplayFields')\\\"\\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.googlepay.displayFields.label')\\\"\\n                                                        :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.googlepay.displayFields.tooltipText')\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-multi-select name=\\\"NovalnetPayment.settings.googlepayDisplayFields\\\"\\n                                                     :placeholder=\\\"$tc('novalnet-payment.settingForm.paymentSettings.googlepay.displayFields.emptyText')\\\"\\n                                                     labelProperty=\\\"name\\\"\\n                                                     valueProperty=\\\"id\\\"\\n                                                     :mapInheritance=\\\"props\\\"\\n                                                     :options=\\\"displayFieldOptions\\\"\\n                                                     :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                     :value=\\\"props.currentValue\\\"\\n                                                     @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-multi-select>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n\\n\\t{% block novalnet_payment_content_card_channel_config_payment_invoice %}\\n\\t\\t<sw-card class=\\\"sw-card--grid novalnet-payment-configration-card\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_invoice_container %}\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #header=\\\"{ expanded }\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.invoice.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</template>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #content>\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_invoice_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_invoice %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.invoiceTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.invoiceTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.invoiceTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.invoiceDueDate']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.invoiceDueDate')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.invoiceDueDate')\\\"\\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.invoice.dueDate.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t    :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.invoice.dueDate.tooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-number-field name=\\\"NovalnetPayment.settings.invoiceDueDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t numberType=\\\"int\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :min=\\\"7\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue == 0 ? null : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.invoiceOnHold']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.invoiceOnHold')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.invoiceOnHold')\\\"\\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t    :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.tooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-single-select name=\\\"NovalnetPayment.settings.invoiceOnHold\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  labelProperty=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  valueProperty=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :options=\\\"onholdOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-single-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.invoiceOnHoldAmount']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.invoiceOnHoldAmount']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-number-field name=\\\"NovalnetPayment.settings.invoice.invoiceOnHoldAmount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t numberType=\\\"int\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountLabel')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue == 0 ? null : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.invoiceNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.invoiceNotify']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.invoiceNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" \\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n\\n\\t{% block novalnet_payment_content_card_channel_config_payment_invoiceguarantee %}\\n\\t\\t<sw-card class=\\\"sw-card--grid novalnet-payment-configration-card\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_invoiceguarantee_container %}\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #header=\\\"{ expanded }\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.invoiceguarantee.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</template>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #content>\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_invoiceguarantee_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"guarantee_conditions\\\">\\n                                <p class=\\\"guarantee_condtions_headings\\\">{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.title') }}\\n\\t\\t\\t\\t\\t\\t\\t\\t</p>\\n                                <p>\\n                                    <ul class=\\\"guarantee_condtions_list\\\">\\n                                        <li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.country') }}</li>\\n                                        <li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.b2b') }}</li>\\n                                        <li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.currency') }}</li>\\n                                        <li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.amount') }}</li>\\n                                        <li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.age') }}</li>\\n                                        <li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.address') }}</li>\\n                                    </ul>\\n                                </p>\\n                            </div>\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n                                {% block novalnet_payment_content_card_channel_config_payment_card_container_settings_invoiceguarantee %}\\n                                    <sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.invoiceguaranteeTestMode']\\\"\\n                                                        :inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.invoiceguaranteeTestMode']\\\"\\n                                                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                                        <template #content=\\\"props\\\">\\n                                            <sw-switch-field name=\\\"NovalnetPayment.settings.invoiceguaranteeTestMode\\\"\\n                                                           :mapInheritance=\\\"props\\\"\\n                                                           :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n                                                           :isInherited=\\\"props.isInherited\\\"\\n                                                           :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n                                                           :value=\\\"props.currentValue\\\"\\n                                                           @update:value=\\\"props.updateCurrentValue\\\">\\n                                            </sw-switch-field>\\n                                        </template>\\n                                    </sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.invoiceguaranteeMinimumOrderAmount']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.invoiceguaranteeMinimumOrderAmount')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.invoiceguaranteeMinimumOrderAmount')\\\" \\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.tooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-number-field name=\\\"NovalnetPayment.settings.invoiceguaranteeMinimumOrderAmount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :min=\\\"999\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :allowEmpty=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   numberType=\\\"integer\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.invoiceguaranteeOnHold']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.invoiceguaranteeOnHold')\\\"\\n                                                        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.invoiceguaranteeOnHold')\\\"\\n                                                        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t    :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.tooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-single-select name=\\\"NovalnetPayment.settings.invoiceguaranteeOnHold\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  labelProperty=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  valueProperty=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :options=\\\"onholdOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-single-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.invoiceguaranteeOnHoldAmount']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.invoiceguaranteeOnHoldAmount']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-number-field name=\\\"NovalnetPayment.settings.invoiceguaranteeOnHoldAmount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t numberType=\\\"int\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountLabel')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue == 0 ? null : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.invoiceguaranteeForceGuarantee']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.invoiceguaranteeForceGuarantee']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.invoiceguaranteeForceGuarantee\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.forceGuarantee.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.forceGuarantee.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_force_guarantee_enable_condtion\\\">{{ $tc('novalnet-payment.settingForm.paymentSettings.forceGuarantee.invoicecondition') }}</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.invoiceguaranteeAllowB2B']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.invoiceguaranteeAllowB2B']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.invoiceguaranteeAllowB2B\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.allowB2B.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.allowB2B.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.invoiceguaranteeNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.invoiceguaranteeNotify']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.invoiceguaranteeNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" \\n                                                           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n\\n\\t{% block novalnet_payment_content_card_channel_config_payment_prepayment %}\\n\\t\\t<sw-card class=\\\"sw-card--grid novalnet-payment-configration-card\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_prepayment_container %}\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #header=\\\"{ expanded }\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.prepayment.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</template>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #content>\\n\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_prepayment_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_prepayment %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.prepaymentTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.prepaymentTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.prepaymentTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.prepaymentDueDate']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.prepaymentDueDate')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.prepaymentDueDate')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.prepayment.dueDate.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t    :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.prepayment.dueDate.tooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-number-field name=\\\"NovalnetPayment.settings.prepaymentDueDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t numberType=\\\"int\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :min=\\\"7\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :max=\\\"28\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue == 0 ? null : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.prepaymentNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.prepaymentNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.prepaymentNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n\\n\\t{% block novalnet_payment_content_card_channel_config_payment_ideal %}\\n\\t\\t<sw-card class=\\\"sw-card--grid novalnet-payment-configration-card\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_ideal_container %}\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #header=\\\"{ expanded }\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.ideal.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</template>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #content>\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_ideal_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_ideal %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.idealTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.idealTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.idealTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.idealNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.idealNotify']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.idealNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n\\n\\t{% block novalnet_payment_content_card_channel_config_payment_sofort %}\\n\\t\\t<sw-card class=\\\"sw-card--grid novalnet-payment-configration-card\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_sofort_container %}\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #header=\\\"{ expanded }\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.sofort.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</template>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #content>\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_sofort_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_sofort %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.sofortTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sofortTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.sofortTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.sofortNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sofortNotify']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.sofortNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n\\n\\t{% block novalnet_payment_content_card_channel_config_payment_onlinebanktransfer %}\\n\\t\\t<sw-card class=\\\"sw-card--grid novalnet-payment-configration-card\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_onlinebanktransfer_container %}\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #header=\\\"{ expanded }\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.onlinebanktransfer.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</template>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #content>\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_onlinebanktransfer_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_onlinebanktransfer %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.onlinebanktransferTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.onlinebanktransferTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.onlinebanktransferTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.onlinebanktransferNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.onlinebanktransferNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.onlinebanktransferNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n\\n\\t{% block novalnet_payment_content_card_channel_config_payment_giropay %}\\n\\t\\t<sw-card class=\\\"sw-card--grid novalnet-payment-configration-card\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_giropay_container %}\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #header=\\\"{ expanded }\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.giropay.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</template>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #content>\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_giropay_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_giropay %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.giropayTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.giropayTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.giropayTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.giropayNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.giropayNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.giropayNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n\\n\\t{% block novalnet_payment_content_card_channel_config_payment_cashpayment %}\\n\\t\\t<sw-card class=\\\"sw-card--grid novalnet-payment-configration-card\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_cashpayment_container %}\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #header=\\\"{ expanded }\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.cashpayment.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</template>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #content>\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_cashpayment_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_cashpayment %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.cashpaymentTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.cashpaymentTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.cashpaymentTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.cashpaymentDueDate']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.cashpaymentDueDate')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.cashpaymentDueDate')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.cashpayment.dueDate.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.cashpayment.dueDate.tooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-number-field name=\\\"NovalnetPayment.settings.cashpaymentDueDate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t numberType=\\\"int\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :min=\\\"1\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.cashpaymentNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.cashpaymentNotify']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.cashpaymentNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n\\n\\t{% block novalnet_payment_content_card_channel_config_payment_przelewy24 %}\\n\\t\\t<sw-card class=\\\"sw-card--grid novalnet-payment-configration-card\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_przelewy24_container %}\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #header=\\\"{ expanded }\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.przelewy24.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</template>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #content>\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_przelewy24_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_przelewy24 %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.przelewy24TestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.przelewy24TestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.przelewy24TestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.przelewy24Notify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.przelewy24Notify']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.przelewy24Notify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n\\n\\t{% block novalnet_payment_content_card_channel_config_payment_eps %}\\n\\t\\t<sw-card class=\\\"sw-card--grid novalnet-payment-configration-card\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_eps_container %}\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #header=\\\"{ expanded }\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.eps.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</template>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #content>\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_eps_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_eps %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.epsTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.epsTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.epsTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.epsNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.epsNotify']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.epsNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n\\n\\t{% block novalnet_payment_content_card_channel_config_payment_invoiceinstalment %}\\n\\t\\t<sw-card class=\\\"sw-card--grid novalnet-payment-configration-card\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_invoiceinstalment_container %}\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #header=\\\"{ expanded }\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.invoiceinstalment.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</template>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #content>\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_invoiceinstalment_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"guarantee_conditions\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"guarantee_condtions_headings\\\">{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.title') }}\\n\\t\\t\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"guarantee_condtions_list\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.country') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.b2b') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.currency') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.instalmentAmount') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.instalmentCycleAmount') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.age') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.address') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_invoiceinstalment %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.invoiceinstalmentTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.invoiceinstalmentTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.invoiceinstalmentTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.invoiceinstalmentMinimumOrderAmount']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.invoiceinstalmentMinimumOrderAmount')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.invoiceinstalmentMinimumOrderAmount')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.instalmentLabel')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.instalmentTooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-number-field name=\\\"NovalnetPayment.settings.invoiceinstalmentMinimumOrderAmount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :min=\\\"1998\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :allowEmpty=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   numberType=\\\"integer\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.invoiceinstalmentOnHold']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.invoiceinstalmentOnHold')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.invoiceinstalmentOnHold')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.tooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-single-select name=\\\"NovalnetPayment.settings.invoiceinstalmentOnHold\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  labelProperty=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  valueProperty=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :options=\\\"onholdOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-single-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.invoiceinstalmentOnHoldAmount']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepainstalmentOnHoldAmount']\\\">>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-number-field name=\\\"NovalnetPayment.settings.invoiceinstalmentOnHoldAmount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t                 :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountLabel')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t     :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t numberType=\\\"int\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue == 0 ? null : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.invoiceinstalmentProductPageInfo']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.invoiceinstalmentProductPageInfo']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.invoiceinstalmentProductPageInfo\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.productPageInfo.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.productPageInfo.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.invoiceinstalmentCycles']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.invoiceinstalmentCycles')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.invoiceinstalmentCycles')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.instalmentCycleInfo.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.instalmentCycleInfo.tooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-multi-select name=\\\"NovalnetPayment.settings.invoiceinstalmentCycles\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t labelProperty=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t valueProperty=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :options=\\\"instalmentOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :isInherited=\\\"props.isInherited\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-multi-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.invoiceinstalmentAllowB2B']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.invoiceinstalmentAllowB2B']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.invoiceinstalmentAllowB2B\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.allowB2B.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.allowB2B.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.invoiceinstalmentNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepainstalmentNotify']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.invoiceinstalmentNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t           :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n\\n\\t{% block novalnet_payment_content_card_channel_config_payment_sepainstalment %}\\n\\t\\t<sw-card class=\\\"sw-card--grid novalnet-payment-configration-card\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_sepainstalment_container %}\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #header=\\\"{ expanded }\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.sepainstalment.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</template>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #content>\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_sepainstalment_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"guarantee_conditions\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"guarantee_condtions_headings\\\">{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.title') }}</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"guarantee_condtions_list\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.country') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.b2b') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.currency') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.instalmentAmount') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.instalmentCycleAmount') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.age') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>{{ $tc('novalnet-payment.settingForm.paymentSettings.guaranteeCondition.address') }}</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_sepainstalment %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.sepainstalmentTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepainstalmentTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.sepainstalmentTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.sepainstalmentMinimumOrderAmount']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.sepainstalmentMinimumOrderAmount')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.sepainstalmentMinimumOrderAmount')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.instalmentLabel')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.guaranteeMinimumOrderAmount.instalmentTooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-number-field name=\\\"NovalnetPayment.settings.sepainstalmentMinimumOrderAmount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :min=\\\"1998\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :allowEmpty=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   numberType=\\\"integer\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.sepainstalmentOneclick']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepainstalmentOneclick']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.sepainstalmentOneclick\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.oneclick.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.oneclick.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.sepainstalmentOnHold']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.sepainstalmentOnHold')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.sepainstalmentOnHold')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.tooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-single-select name=\\\"NovalnetPayment.settings.sepainstalmentOnHold\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  labelProperty=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  valueProperty=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :options=\\\"onholdOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-single-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.sepainstalmentOnHoldAmount']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepainstalmentOnHoldAmount']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-number-field name=\\\"NovalnetPayment.settings.sepainstalmentOnHoldAmount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t numberType=\\\"int\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountLabel')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue == 0 ? null : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.sepainstalmentProductPageInfo']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepainstalmentProductPageInfo']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.sepainstalmentProductPageInfo\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.productPageInfo.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.productPageInfo.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.sepainstalmentCycles']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.sepainstalmentCycles')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.sepainstalmentCycles')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.instalmentCycleInfo.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t    :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.instalmentCycleInfo.tooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-multi-select name=\\\"NovalnetPayment.settings.sepainstalmentCycles\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t labelProperty=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t valueProperty=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :options=\\\"instalmentOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :isInherited=\\\"props.isInherited\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-multi-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.sepainstalmentAllowB2B']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepainstalmentAllowB2B']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.sepainstalmentAllowB2B\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.allowB2B.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.allowB2B.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.sepainstalmentNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.sepainstalmentNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.sepainstalmentNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n\\n\\t{% block novalnet_payment_content_card_channel_config_payment_paypal %}\\n\\t\\t<sw-card class=\\\"sw-card--grid novalnet-payment-configration-card\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_paypal_container %}\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #header=\\\"{ expanded }\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.paypal.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</template>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #content>\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_paypal_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_paypal %}\\n                                    <div v-html=\\\"paypalInformation\\\" class=\\\"novalnet_payment-settings-paypal-project\\\">\\n                                    </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.paypalTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.paypalTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.paypalTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_paypal_condition\\\">{{ $tc('novalnet-payment.settingForm.paymentSettings.paypal.condition') }}</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.paypalOnHold']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:has-parent=\\\"selectedSalesChannelId != null && getInheritValue('NovalnetPayment.settings.paypalOnHold')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :inheritedValue=\\\"getInheritValue('NovalnetPayment.settings.paypalOnHold')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t        :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t    :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.tooltipText')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-single-select name=\\\"NovalnetPayment.settings.paypalOnHold\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  labelProperty=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  valueProperty=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :options=\\\"onholdOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :value=\\\"props.currentValue == null ? selected : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-single-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.paypalOnHoldAmount']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.paypalOnHoldAmount']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-number-field name=\\\"NovalnetPayment.settings.paypalOnHoldAmount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t numberType=\\\"int\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountLabel')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.onHold.amountTooltip')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue == 0 ? null : props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t     @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.paypalNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.paypalNotify']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.paypalNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n\\n\\t{% block novalnet_payment_content_card_channel_config_payment_postfinancecard %}\\n\\t\\t<sw-card class=\\\"sw-card--grid novalnet-payment-configration-card\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_postfinancecard_container %}\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #header=\\\"{ expanded }\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.postfinancecard.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</template>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #content>\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_postfinancecard_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_postfinancecard %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.postfinancecardTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.postfinancecardTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.postfinancecardTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.postfinancecardNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.postfinancecardNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.postfinancecardNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n\\n\\t{% block novalnet_payment_content_card_channel_config_payment_postfinance %}\\n\\t\\t<sw-card class=\\\"sw-card--grid novalnet-payment-configration-card\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_postfinance_container %}\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #header=\\\"{ expanded }\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.postfinance.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</template>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #content>\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_postfinance_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_postfinance %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.postfinanceTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.postfinanceTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.postfinanceTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.postfinanceNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.postfinanceNotify']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.postfinanceNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n\\n\\t{% block novalnet_payment_content_card_channel_config_payment_bancontact %}\\n\\t\\t<sw-card class=\\\"sw-card--grid novalnet-payment-configration-card\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_bancontact_container %}\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #header=\\\"{ expanded }\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.bancontact.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</template>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #content>\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_bancontact_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_bancontact %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.bancontactTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.bancontactTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.bancontactTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.bancontactNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.bancontactNotify']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.bancontactNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"  \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n\\n\\t{% block novalnet_payment_content_card_channel_config_payment_multibanco %}\\n\\t\\t<sw-card class=\\\"sw-card--grid novalnet-payment-configration-card\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_multibanco_container %}\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #header=\\\"{ expanded }\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.multibanco.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</template>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #content>\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_multibanco_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_multibanco %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.multibancoTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.multibancoTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.multibancoTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.multibancoNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.multibancoNotify']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.multibancoNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n\\n\\t{% block novalnet_payment_content_card_channel_config_payment_alipay %}\\n\\t\\t<sw-card class=\\\"sw-card--grid novalnet-payment-configration-card\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_alipay_container %}\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #header=\\\"{ expanded }\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.alipay.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</template>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #content>\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_alipay_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_alipay %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.alipayTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.alipayTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.alipayTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.alipayNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.alipayNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.alipayNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n\\n\\t{% block novalnet_payment_content_card_channel_config_payment_wechatpay %}\\n\\t\\t<sw-card class=\\\"sw-card--grid novalnet-payment-configration-card\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_wechatpay_container %}\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #header=\\\"{ expanded }\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.wechatpay.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</template>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #content>\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_wechatpay_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_wechatpay %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.wechatpayTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.wechatpayTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.wechatpayTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t     :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t     :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t     :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t     :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t     :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t     @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.wechatpayNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.wechatpayNotify']\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.wechatpayNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n\\n\\t{% block novalnet_payment_content_card_channel_config_payment_trustly %}\\n\\t\\t<sw-card class=\\\"sw-card--grid novalnet-payment-configration-card\\\">\\n\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_trustly_container %}\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-collapse>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #header=\\\"{ expanded }\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.paymentSettings.trustly.cardTitle') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet_payment_card_head_down_bar\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-icon name=\\\"regular-chevron-down\\\" small=\\\"true\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</template>\\n\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<template #content>\\n\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_trustly_container_settings %}\\n\\t\\t\\t\\t\\t\\t\\t<div v-if=\\\"actualConfigData\\\" class=\\\"novalnet_payment-settings-credentials\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_content_card_channel_config_payment_card_container_settings_trustly %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.trustlyTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.trustlyTestMode']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-switch-field name=\\\"NovalnetPayment.settings.trustlyTestMode\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.testmode.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-switch-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-inherit-wrapper v-model:value=\\\"actualConfigData['NovalnetPayment.settings.trustlyNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:inheritedValue=\\\"selectedSalesChannelId == null ? null : allConfigs['null']['NovalnetPayment.settings.trustlyNotify']\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<template #content=\\\"props\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-text-field name=\\\"NovalnetPayment.settings.trustlyNotify\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :mapInheritance=\\\"props\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :label=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.label')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :helpText=\\\"$tc('novalnet-payment.settingForm.paymentSettings.notification.tooltipText')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"props.isInherited || !acl.can('novalnet_payment.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   :value=\\\"props.currentValue\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t   @update:value=\\\"props.updateCurrentValue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-inherit-wrapper>\\n\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t</sw-collapse>\\n\\t\\t\\t{% endblock %}\\n\\t\\t</sw-card>\\n\\t{% endblock %}\\n{% endblock %}\\n\";","import template from './sw-order-detail-details.html.twig';\nimport './sw-order-detail-details.scss';\n\nconst { Context, Component, Filter, Utils } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst { currency } = Shopware.Utils.format;\n\nComponent.override('sw-order-detail-details', {\n    template,\n    \n    inject: [\n        'NovalPaymentApiCredentialsService',\n        'repositoryFactory',\n        'acl',\n    ],\n    \n    mixins: ['notification'],\n    \n    props: {\n        orderId: {\n            type: String,\n            required: true\n        },\n        \n        isSaveSuccessful: {\n            type: Boolean,\n            required: true,\n        },\n    },\n    \n    data() {\n        return {\n\t\t\tstatus: 0,\n\t\t\tdisplayAmount: 0,\n\t\t\tdisplayPaidAmount: 0,\n\t\t\trefundedAmount: 0,\n\t\t\tInstalmentInfo: [],\n\t\t\titem: {},\n\t\t\tnovalnetComments: '',\n\t\t\tisNovalnetPayment: false,\n\t\t\trefundModalVisible: false,\n\t\t\tconfirmModalVisible: false,\n\t\t\tzeroAmountVisible: false,\n\t\t\tcancelModalVisible: false,\n\t\t\tcanInstalmentAllCancel: false,\n\t\t\tcanInstalmentRemainCancel: false,\n\t\t\tinstalmentRefundModalVisible: false,\n            canCaptureVoid: false,\n\t\t\tcanRefund: false,\n\t\t\tcanZeroAmountBooking: false,\n\t\t\tcanInstalmentCancel: false,\n\t\t\tcanInstalmentShow: false,\n\t\t\tpayLater: [\n                'novalnetinvoice',\n                'novalnetprepayment',\n                'novalnetcashpayment',\n                'novalnetmultibanco'\n            ],\n            instalmentPayments: [\n                'novalnetinvoiceinstalment',\n                'novalnetsepainstalment'\n            ],\n            onholdStatus: ['91', '99', '98', '85']\n\t\t}\n\t},\n    \n    computed: {\n\n        getInstalmentColums() {\n            const columnDefinitions = [{\n                property: 'number',\n                dataIndex: 'number',\n                label: this.$tc('novalnet-payment.settingForm.instalmentNumber'),\n                width: '50px'\n            }, {\n                property: 'reference',\n                dataIndex: 'reference',\n                label: this.$tc('novalnet-payment.settingForm.instalmentReference'),\n                width: '120px'\n            },\n            {\n                property: 'amount',\n                dataIndex: 'amount',\n                label: this.$tc('novalnet-payment.settingForm.instalmentAmount'),\n                width: '80px'\n            }, {\n                property: 'totalAmount',\n                dataIndex: 'totalAmount',\n                visible: false\n            },\n             {\n                property: 'refundAmount',\n                dataIndex: 'refundAmount',\n                visible: false\n            },{\n                property: 'nextCycle',\n                dataIndex: 'nextCycle',\n                label: this.$tc('novalnet-payment.settingForm.instalmentDate'),\n                width: '120px'\n            }, {\n                property: 'status',\n                dataIndex: 'status',\n                label: this.$tc('novalnet-payment.settingForm.instalmentStatus'),\n                width: '80px'\n            }];\n\n            return columnDefinitions;\n        },\n        \n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n        \n        dateFilter() {\n            return Shopware.Filter.getByName('date');\n        },\n    },\n\t\n\twatch: {\n        orderId: {\n            deep: true,\n            handler() {\n                if (!this.orderId) {\n                    this.setNovalnetPayment(false);\n                    return;\n                }\n\n                const orderRepository = this.repositoryFactory.create('order');\n                const orderCriteria = new Criteria(1, 1);\n                orderCriteria.addAssociation('transactions');\n                orderCriteria.addAssociation('transactions.stateMachineState');\n                orderCriteria.addAssociation('currency');\n\n                orderCriteria.addFilter(Criteria.equals('id', this.orderId));\n\n                orderRepository.search(orderCriteria, Context.api).then((searchResult) => {\n                  const order = searchResult.first();\n\n                    if (!order) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet isNovalnet  =   false;\n\t\t\t\t\tlet comments    =   '';\n\t\t\t\t\tlet translation = this.$tc('novalnet-payment.module.comments');\n\n\t\t\t\t\torder.transactions.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt) ).forEach((orderTransaction) => {\n\t\t\t\t\t\tif (orderTransaction.customFields &&\n\t\t\t\t\t\t\torderTransaction.customFields.novalnet_comments\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (this.stateMachineState == null && orderTransaction.stateMachineState != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.stateMachineState = orderTransaction.stateMachineState.name;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tisNovalnet  = true;\n\t\t\t\t\t\t\tif(comments != '')\n                            {\n\t\t\t\t\t\t\t\tcomments  += \"<dt>\" + translation + \"</dt>\";\n\t\t\t\t\t\t\t}\n                            comments   += orderTransaction.customFields.novalnet_comments.split(\"/ \").join(\"<br />\");\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n                    \n\t\t\t\t\tif( isNovalnet ) {\n\t\t\t\t\t\tthis.novalnetComments  = comments;\n\t\t\t\t\t\tthis.setNovalnetPayment(true);\n\t\t\t\t\t\tthis.displayAmount = currency (order.price.totalPrice, order.currency.shortName);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.setNovalnetPayment(false);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.canCaptureVoid = false;this.canRefund = false;this.canZeroAmountBooking = false;this.canInstalmentCancel = false;this.canInstalmentShow = false;this.InstalmentInfo = [];\n\t\t\t\t\t\n\t\t\t\t\tthis.NovalPaymentApiCredentialsService.getNovalnetAmount(order.orderNumber).then((payment) => {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(payment.data != null && payment.data != undefined)\n\t\t\t\t\t\t{\n                            this.refundableAmount  = Number(payment.data.amount) - Number(payment.data.refundedAmount);\n\t\t\t\t\t\t\tthis.orderAmount       = Math.round(Number(order.price.totalPrice) * 100);\n\t\t\t\t\t\t\tthis.displayAmount     = (payment.data.amount != 0) ? currency (payment.data.amount / 100, order.currency.shortName) : this.displayAmount;\n\t\t\t\t\t\t\tthis.displayPaidAmount = currency (payment.data.paidAmount / 100, order.currency.shortName);\n\t\t\t\t\t\t\tthis.refundedAmount    = currency (payment.data.refundedAmount / 100, order.currency.shortName);\n\t\t\t\t\t\t\tlet additionalDetails  = JSON.parse(payment.data.additionalDetails);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(payment.data.gatewayStatus == 'ON_HOLD' || this.onholdStatus.includes(payment.data.gatewayStatus)) \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.canCaptureVoid = true;\n\t\t\t\t\t\t\t} else if (!['novalnetinvoiceinstalment','novalnetsepainstalment', 'novalnetmultibanco'].includes(payment.data.paymentType) && ((payment.data.gatewayStatus == 'CONFIRMED' && Number(payment.data.refundedAmount) < Number(payment.data.amount)) || (payment.data.gatewayStatus == 'PENDING' && this.payLater.includes(payment.data.paymentType)))) \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.canRefund = true;\n\t\t\t\t\t\t\t} else if (this.instalmentPayments.includes(payment.data.paymentType) && payment.data.gatewayStatus == 'CONFIRMED' && !additionalDetails.cancelType)\n                            {\n                                this.canInstalmentCancel = true;\n                                   \n                            } else if ((payment.data.paymentType == 'novalnetcreditcard' || payment.data.paymentType == 'novalnetsepa' || payment.data.paymentType == 'novalnetgooglepay' || payment.data.paymentType == 'novalnetapplepay') && Number(payment.data.amount) == 0 && Number(order.price.totalPrice) != 0)\n                            {\n\t\t\t\t\t\t\t\tthis.canZeroAmountBooking = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif( (this.instalmentPayments.includes(payment.data.paymentType)) && payment.data.gatewayStatus == 'CONFIRMED' && additionalDetails.InstalmentDetails != undefined && additionalDetails.InstalmentDetails != '')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.canInstalmentShow = true;\n\t\t\t\t\t\t\t\tvar counter = 1;\n\n\t\t\t\t\t\t\t\tObject.values(additionalDetails.InstalmentDetails).forEach(values => {\n\t\t\t\t\t\t\t\t    this.InstalmentInfo.push ({\n\t\t\t\t\t\t\t\t\t\t'amount': currency (values.amount / 100, order.currency.shortName),\n\t\t\t\t\t\t\t\t\t\t'totalAmount': values.amount,\n\t\t\t\t\t\t\t\t\t\t'nextCycle': additionalDetails.InstalmentDetails[counter + 1] != undefined && additionalDetails.InstalmentDetails[counter + 1].cycleDate ? additionalDetails.InstalmentDetails[counter + 1].cycleDate : '',\n\t\t\t\t\t\t\t\t\t\t'reference': values.reference,\n\t\t\t\t\t\t\t\t\t\t'status': values.status,\n\t\t\t\t\t\t\t\t\t\t'refundAmount': values.refundAmount,\n\t\t\t\t\t\t\t\t\t\t'number': counter\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}).catch((errorResponse) => {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: `${errorResponse.title}: ${errorResponse.message}`\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t}).finally(() => {\n\t\t\t\t\tthis.setNovalnetPayment(false);\n\t\t\t\t});\n            },\n            immediate: true\n        }\n    },\n    \n    methods: {\n\t\tsetNovalnetPayment( novalnetPayment ) {\n            if( novalnetPayment ) {\n                this.isNovalnetPayment = novalnetPayment;\n            }\n        },\n        \n        showConfirmModal() {\n            this.status = 100;\n            this.confirmModalVisible = true;\n        },\n        \n        showRefundModal() {\n            this.refundModalVisible = true;\n        },\n        \n        closeModals() {\n\t\t\tthis.refundModalVisible = false;\n\t\t\tthis.confirmModalVisible = false;\n\t\t\tthis.cancelModalVisible = false;\n\t\t\tthis.zeroAmountVisible = false;\n\t\t\tthis.instalmentRefundModalVisible = false;\n\t\t},\n\t\t\n\t\tshowInstalmentAllCancelModal() {\n\t\t\tthis.instalmentRefundModalVisible = true;\n\t\t\tthis.cancelType = 'CANCEL_ALL_CYCLES';\n        },\n        \n        showInstalmentRemainCancelModal(){\n\t\t\tthis.instalmentRefundModalVisible = true;\n\t\t\tthis.cancelType = 'CANCEL_REMAINING_CYCLES';\n        },\n        \n        showCancelModal() {\n            this.status = 103;\n            this.cancelModalVisible = true;\n        },\n        \n        showZeroAmountBlock() {\n            this.zeroAmountVisible = true;\n        },\n        \n        reloadPaymentDetails() {\n\t\t\tthis.closeModals();\n\t\t\t// Wait for the next tick to trigger the reload. Otherwise the Modal won't be hidden correctly.\n\t\t\tthis.$nextTick().then(() => {\n\t\t\t\tthis.$emit('reload-payment');\n\t\t\t});\n\t\t},\n\n\t\tinstalmentRefund(item) {\n\t\t\tthis.refundableAmount = item.totalAmount - item.refundAmount;\n\t\t\tthis.item = item;\n\t\t\tthis.refundModalVisible = true;\n\t\t},\n\t\t\n\t\tshowInstalmentCancelModal() {\n            if (this.InstalmentInfo != undefined && this.InstalmentInfo != null)\n            {\n                this.InstalmentInfo.forEach(value => {\n                    if(value['reference'] == '' || value['reference'] == null)\n                    {\n                        this.canInstalmentRemainCancel = true;\n                    }\n                });\n            }\n            this.canInstalmentAllCancel = true;\n            this.canInstalmentCancel = false;\n        },\n        \n        disableInstalmentRefund(item) {\n            if( item.reference == undefined || item.reference == ''  || item.refundAmount >= item.totalAmount || !this.acl.can('novalnet_extension.editor'))\n            {\n                return true;\n            }\n    \n            return false;\n        }\n\t}\n});\n","export default \"{% block sw_order_detail_details_payment %}\\n\\t{% parent %}\\n\\t{% block sw_order_detail_details_payment_novalnet_seaction %}\\n\\t\\t<template v-if=\\\"isNovalnetPayment\\\">\\n\\t\\t\\t<sw-order-details-state-card\\n\\t\\t\\t\\tv-if=\\\"transaction\\\"\\n\\t\\t\\t\\t:title=\\\"$tc('novalnet-payment.module.title')\\\"\\n\\t\\t\\t\\t:order=\\\"order\\\"\\n\\t\\t\\t\\t:entity=\\\"transaction\\\"\\n\\t\\t\\t\\t:state-label=\\\"$tc('sw-order.stateCard.headlineTransactionState')\\\"\\n\\t\\t\\t\\t:disabled=\\\"!acl.can('order.editor')\\\"\\n\\t\\t\\t\\t@show-status-history=\\\"showStateHistoryModal = true\\\"\\n\\t\\t\\t\\t@save-edits=\\\"onSaveEdits\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"novalnet-payment-buyer-notification\\\">\\n\\t\\t\\t\\t\\t{# Logo #}\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_buyer_info %}\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-buyer-notification-icon-container\\\" style=\\\"text-align:center;\\\">\\n\\t\\t\\t\\t\\t\\t\\t<img class=\\\"novalnet-payment-buyer-info-icon\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t :src=\\\"assetFilter('novalnetpayment/static/img/plugin.png')\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t{# Full name and E-Mail address #}\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_buyer_info_name_container %}\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-buyer-info-name\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_buyer_info_name_container_name %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-buyer-info-full-name\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ order.orderCustomer.firstName }} {{ order.orderCustomer.lastName }}\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_buyer_info_name_container_email %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-buyer-info-email\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ order.orderCustomer.email }}\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-container class=\\\"novalnet-payment-amount-info\\\" columns=\\\"1fr\\\">\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_component_amount_info %}\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-amount-info-total-amount\\\" style=\\\"text-align:right;\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ displayAmount }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t{% block novalnet_payment_amount_info_captured_amount %}\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-amount-captured-amount\\\" style=\\\"text-align:right;\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_amount_info_captured_amount %}\\n\\t\\t\\t\\t\\t\\t\\t\\t+ {{ displayPaidAmount }}\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_amount_info_captured_amount_help %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-help-text class=\\\"novalnet-payment-captured-amount-help-icon\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  tooltipPosition=\\\"top\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :text=\\\"$tc('novalnet-payment.settingForm.extension.paidTooltip')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-help-text>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_compoenent_amount_info_refuned %}\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-refuned-amount\\\" style=\\\"text-align:right;\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_compoenent_amount_info_refuned_amount %}\\n\\t\\t\\t\\t\\t\\t\\t\\t- {{ refundedAmount }}\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_compoenent_amount_info_refuned_help %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<sw-help-text class=\\\"novalnet-payment-refuned-amount-help-icon\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  tooltipPosition=\\\"top\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  :text=\\\"$tc('novalnet-payment.settingForm.extension.refundTooltip')\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</sw-help-text>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_info_date %}\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-amount-info-charge-date\\\" style=\\\"text-align:right;\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ dateFilter(transaction.createdAt, {day: '2-digit', month: '2-digit', year: 'numeric'}) }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-container class=\\\"novalnet-payment-action-toolbar\\\" rows=\\\"1\\\" columns=\\\"1fr 1fr 1fr\\\" gap=\\\"10px\\\">\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_container_toolbar_refund_button %}\\n\\t\\t\\t\\t\\t\\t<sw-button size=\\\"small\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tv-if=\\\"canRefund\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t:disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t@click=\\\"showRefundModal\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.refundButton') }}\\n\\t\\t\\t\\t\\t\\t</sw-button>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\n                    {% block novalnet_payment_order_container_toolbar_instalment_cancel_button %}\\n                        <sw-button size=\\\"small\\\"\\n                                   class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n                                   v-if=\\\"canInstalmentCancel\\\"\\n                                   :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n                                   @click=\\\"showInstalmentCancelModal\\\">\\n                            {{ $tc('novalnet-payment.settingForm.extension.instalmentCancelLabel') }}\\n                        </sw-button>\\n                    {% endblock %}\\n               \\n                    {% block novalnet_payment_order_container_toolbar_instalment_all_cancel_button %}\\n                        <sw-button size=\\\"small\\\"\\n                                   class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n                                   v-if=\\\"canInstalmentAllCancel\\\"\\n                                   :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n                                   @click=\\\"showInstalmentAllCancelModal\\\">\\n                            {{ $tc('novalnet-payment.settingForm.extension.instalmentAllCancelLabel') }}\\n                        </sw-button>\\n                    {% endblock %}\\n                    \\n                    {% block novalnet_payment_order_container_toolbar_instalment_remain_cancel_button %}\\n                        <sw-button size=\\\"small\\\"\\n                                   class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n                                   v-if=\\\"canInstalmentRemainCancel\\\"\\n                                   :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n                                   @click=\\\"showInstalmentRemainCancelModal\\\">\\n                            {{ $tc('novalnet-payment.settingForm.extension.instalmentRemainCancelLabel') }}\\n                        </sw-button>\\n                    {% endblock %}\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_container_toolbar_capture_button %}\\n\\t\\t\\t\\t\\t\\t<sw-button size=\\\"small\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   v-if=\\\"canCaptureVoid\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   @click=\\\"showConfirmModal\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.confirmLabel') }}\\n\\t\\t\\t\\t\\t\\t</sw-button>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_container_toolbar_cancel_button %}\\n\\t\\t\\t\\t\\t\\t<sw-button size=\\\"small\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   v-if=\\\"canCaptureVoid\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   @click=\\\"showCancelModal\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.cancelLabel') }}\\n\\t\\t\\t\\t\\t\\t</sw-button>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_container_toolbar_zero_amount_button %}\\n\\t\\t\\t\\t\\t\\t<sw-button size=\\\"small\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   class=\\\"novalnet-payment-pay-action-toolbar__button\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   v-if=\\\"canZeroAmountBooking\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   :disabled=\\\"!acl.can('novalnet_extension.editor')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t   @click=\\\"showZeroAmountBlock\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.zeroAmountButton') }}\\n\\t\\t\\t\\t\\t\\t</sw-button>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-container class=\\\"novalnet-payment-pay-empty-container\\\" columns=\\\"1fr\\\">\\n\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<sw-container class=\\\"novalnet-payment-pay-info-container\\\" columns=\\\"1fr\\\">\\n\\t\\t\\t\\t\\t<hr class=\\\"sw-order-detail-state-card__divider\\\">\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_component_checkout_info_billing_container %}\\n\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment_chechout-info-customer-comments\\\" v-if=\\\"isNovalnetPayment\\\">\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_component_checkout_info_billing_container_headline %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"novalnet-payment-checkout-info-header\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.module.comments') }}\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t{% block novalnet_payment_order_component_billing_value %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"novalnet-payment-checkout-info-comments\\\" v-html=\\\"novalnetComments\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t{% block novalnet_payment_order_component_action_toolbar_modals %}\\n\\t\\t\\t\\t\\t<novalnet-payment-refund-modal\\n\\t\\t\\t\\t\\t\\tv-if=\\\"refundModalVisible\\\"\\n\\t\\t\\t\\t\\t\\t:refundableAmount=\\\"refundableAmount\\\"\\n\\t\\t\\t\\t\\t\\t:order=\\\"order\\\"\\n\\t\\t\\t\\t\\t\\t:item=\\\"item\\\"\\n\\t\\t\\t\\t\\t\\t@modal-close=\\\"closeModals\\\"\\n\\t\\t\\t\\t\\t\\t@reload-payment=\\\"reloadPaymentDetails\\\">\\n\\t\\t\\t\\t\\t</novalnet-payment-refund-modal>\\n\\n\\t\\t\\t\\t\\t<novalnet-payment-instalment-refund-modal\\n\\t\\t\\t\\t\\t\\tv-if=\\\"instalmentRefundModalVisible\\\"\\n\\t\\t\\t\\t\\t\\t:item=\\\"item\\\"\\n\\t\\t\\t\\t\\t\\t:cancelType=\\\"cancelType\\\"\\n\\t\\t\\t\\t\\t\\t:order=\\\"order\\\"\\n\\t\\t\\t\\t\\t\\t@modal-close=\\\"closeModals\\\"\\n\\t\\t\\t\\t\\t\\t@reload-payment=\\\"reloadPaymentDetails\\\">\\n\\t\\t\\t\\t\\t</novalnet-payment-instalment-refund-modal>\\n\\n\\t\\t\\t\\t\\t<novalnet-payment-manage-transaction-modal\\n\\t\\t\\t\\t\\t\\tv-if=\\\"confirmModalVisible\\\"\\n\\t\\t\\t\\t\\t\\t:status=\\\"status\\\"\\n\\t\\t\\t\\t\\t\\t:order=\\\"order\\\"\\n\\t\\t\\t\\t\\t\\t@modal-close=\\\"closeModals\\\"\\n\\t\\t\\t\\t\\t\\t@reload-payment=\\\"reloadPaymentDetails\\\">\\n\\t\\t\\t\\t\\t</novalnet-payment-manage-transaction-modal>\\n\\n\\t\\t\\t\\t\\t<novalnet-payment-manage-transaction-modal\\n\\t\\t\\t\\t\\t\\tv-if=\\\"cancelModalVisible\\\"\\n\\t\\t\\t\\t\\t\\t:status=\\\"status\\\"\\n\\t\\t\\t\\t\\t\\t:order=\\\"order\\\"\\n\\t\\t\\t\\t\\t\\t@modal-close=\\\"closeModals\\\"\\n\\t\\t\\t\\t\\t\\t@reload-payment=\\\"reloadPaymentDetails\\\">\\n\\t\\t\\t\\t\\t</novalnet-payment-manage-transaction-modal>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<novalnet-payment-book-amount-modal\\n\\t\\t\\t\\t\\t\\tv-if=\\\"zeroAmountVisible\\\"\\n\\t\\t\\t\\t\\t\\t:orderAmount=\\\"orderAmount\\\"\\n\\t\\t\\t\\t\\t\\t:order=\\\"order\\\"\\n\\t\\t\\t\\t\\t\\t@modal-close=\\\"closeModals\\\"\\n\\t\\t\\t\\t\\t\\t@reload-payment=\\\"reloadPaymentDetails\\\">\\n\\t\\t\\t\\t\\t</novalnet-payment-book-amount-modal>\\n\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t</sw-order-details-state-card>\\n\\t\\t\\t\\n\\t\\t\\t<sw-card :title=\\\"$tc('novalnet-payment.settingForm.instalmentInfo')\\\" v-if=\\\"canInstalmentShow\\\">\\n\\t\\t\\t\\t\\t<template #grid>\\n\\t\\t\\t\\t\\t\\t<sw-data-grid\\n\\t\\t\\t\\t\\t\\t\\t:dataSource=\\\"InstalmentInfo\\\"\\n\\t\\t\\t\\t\\t\\t\\t:columns=\\\"getInstalmentColums\\\"\\n\\t\\t\\t\\t\\t\\t\\t:compactMode=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t:allowInlineEdit=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t\\t:showSelection=\\\"false\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t{% block sw_product_detail_base_ratings_actions %}\\n\\t\\t\\t\\t\\t\\t\\t\\t<template #actions=\\\"{ item }\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{% block sw_product_detail_base_ratings_actions_edit %}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<sw-context-menu-item\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"sw-product-detail-base__review-edit\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t@click=\\\"instalmentRefund(item)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:disabled=\\\"disableInstalmentRefund(item)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.refundButton') }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</sw-context-menu-item>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t\\t\\t\\t\\t</template>\\n\\t\\t\\t\\t\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t\\t\\t\\t</sw-data-grid>\\n\\t\\t\\t\\t\\t</template>\\n            </sw-card>\\n\\t\\t</template>\\n\\t\\t\\n\\t{% endblock %}\\n{% endblock %}\\n\";","import template from './novalnet-payment-refund-modal.html.twig';\n\nconst { Component, Mixin } = Shopware;\nconst { currency } = Shopware.Utils.format;\n\nComponent.register('novalnet-payment-refund-modal', {\n    template,\n\n    props: {\n        refundableAmount: {\n            type: Number,\n            required: true\n        },\n        order: {\n            type: Object,\n            required: true\n        },\n        item: {\n            type: Object,\n            required: true\n        }\n    },\n\n    inject: [\n        'NovalPaymentApiCredentialsService',\n        'repositoryFactory'\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('sw-inline-snippet')\n    ],\n\n    data() {\n        return {\n            reason: '',\n            disable: false,\n            refundAmount: this.refundableAmount\n        };\n    },\n\n    methods: {\n\n\t\tcloseModal() {\n            this.$emit('modal-close');\n        },\n\n        novalnetRefund()\n        {\n            let refundAmount\t= this.refundAmount;\n            const reason\t\t= this.reason;\n            const orderNumber\t= this.order.orderNumber;\n\n\t\t\tif(refundAmount == '0')\n\t\t\t{\n\t\t\t\tthis.createNotificationError({\n\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.amountRefundError')\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.disable = true;\n\t\t\t\n            this.NovalPaymentApiCredentialsService.refundPayment(\n                orderNumber,\n                refundAmount,\n                reason,\n                this.item.reference,\n            ).then((response) => {\n\n\t\t\t\tif(\tresponse.result != undefined && response.result != null && response.result != '')\n\t\t\t\t{\n\t\t\t\t\tif(response.result.status != undefined && response.result.status != null && response.result.status != '' && response.result.status == 'SUCCESS')\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.extension.refundSuccess')\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if(response.result.status_text != undefined && response.result.status_text != null && response.result.status_text != '') {\n\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: response.result.status_text,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.failureMessage')\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.failureMessage')\n\t\t\t\t\t});\n\t\t\t\t}\n                this.$emit('modal-close');\n                setTimeout(this.$router.go, 3000);\n            }).catch((errorResponse) => {\n                    this.createNotificationError({\n                        message: `${errorResponse.title}: ${errorResponse.message}`,\n                        autoClose: false\n                    });\n                    this.$emit('modal-close');\n            });\n\t\t},\n\t}\n});\n","export default \"{% block novalnet_payment_order_refund_modal %}\\n    <sw-modal :title=\\\"$tc('novalnet-payment.settingForm.extension.refundButton')\\\"\\n              @modal-close=\\\"closeModal\\\">\\n\\t\\t\\n\\t\\t\\t{% block novalnet_payment_order_refund_modal_content %}\\n\\t\\t\\t\\t<template #default>\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_refund_modal_content_info_text %}\\n\\t\\t\\t\\t\\t\\t<sw-container columns=\\\"1fr\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tgap=\\\"0px 30px\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-number-field v-model:value=\\\"refundAmount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:min=\\\"0\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:allowEmpty=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnumberType=\\\"int\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:label=\\\"$tc('novalnet-payment.settingForm.extension.amountTitle')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:helpText=\\\"$tc('novalnet-payment.settingForm.extension.refundDescription')\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t\\t<sw-text-field v-model:value=\\\"reason\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t:placeholder=\\\"$tc('novalnet-payment.settingForm.extension.refundReference')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t:label=\\\"$tc('novalnet-payment.settingForm.extension.refundReference')\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-text-field>\\n\\t\\t\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</template>\\n\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t{% block novalnet_payment_order_refund_modal_actions %}\\n\\t\\t\\t\\t<template #modal-footer>\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_refund_modal_confirm %}\\n\\t\\t\\t\\t\\t\\t<sw-button secondary slim variant=\\\"primary\\\" :disabled=\\\"disable\\\" :square=\\\"false\\\" :block=\\\"false\\\" :isLoading=\\\"false\\\" @click=\\\"novalnetRefund\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.refundButton') }}\\n\\t\\t\\t\\t\\t\\t</sw-button>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</template>\\n\\t\\t\\t{% endblock %}\\n    </sw-modal>\\n{% endblock %}\\n\";","import template from './novalnet-payment-book-amount-modal.html.twig';\n\nconst { Component, Mixin } = Shopware;\nconst { currency } = Shopware.Utils.format;\n\nComponent.register('novalnet-payment-book-amount-modal', {\n    template,\n\n    props: {\n        orderAmount: {\n            type: Number,\n            required: true\n        },\n        order: {\n            type: Object,\n            required: true\n        }\n    },\n\n    inject: [\n        'NovalPaymentApiCredentialsService',\n        'repositoryFactory'\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('sw-inline-snippet')\n    ],\n\n    data() {\n        return {\n            reason: '',\n            disable: false,\n            bookedAmount: this.orderAmount\n        };\n    },\n\n    methods: {\n\n\t\tcloseModal() {\n            this.$emit('modal-close');\n        },\n\n        novalnetBookAmount()\n        {\n            const bookedAmount = this.bookedAmount;\n            const orderId     = this.order.id;\n            \n\t\t\tif(bookedAmount == 0)\n\t\t\t{\n\t\t\t\tthis.createNotificationError({\n\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.amountError')\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.disable = true;\n            this.NovalPaymentApiCredentialsService.BookOrderAmount(\n\t\t\t\torderId,\n                bookedAmount\n            ).then((response) => {\n\n\t\t\t\tif(\tresponse.result != undefined && response.result != null && response.result != '')\n\t\t\t\t{\n\t\t\t\t\tif(response.result.status != undefined && response.result.status != null && response.result.status != '' && response.result.status == 'SUCCESS')\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.extension.bookedSuccess')\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if(response.result.status_text != undefined && response.result.status_text != null && response.result.status_text != '') {\n\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: response.result.status_text,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.failureMessage')\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.failureMessage')\n\t\t\t\t\t});\n\t\t\t\t}\n                this.$emit('modal-close');\n                setTimeout(this.$router.go, 3000);\n            }).catch((errorResponse) => {\n                    this.createNotificationError({\n                        message: `${errorResponse.title}: ${errorResponse.message}`,\n                        autoClose: false\n                    });\n                    this.$emit('modal-close');\n            });\n\t\t},\n\t}\n});\n","export default \"{% block novalnet_payment_order_refund_modal %}\\n    <sw-modal :title=\\\"$tc('novalnet-payment.settingForm.extension.zeroAmountButton')\\\"\\n              @modal-close=\\\"closeModal\\\">\\n\\t\\t\\n\\t\\t\\t{% block novalnet_payment_order_zero_amount_modal_content %}\\n\\t\\t\\t\\t<template #default>\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_zero_amount_modal_content_info_text %}\\n\\t\\t\\t\\t\\t\\t<sw-container columns=\\\"1fr\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tgap=\\\"0px 30px\\\">\\n\\t\\t\\t\\t\\t\\t\\t<sw-number-field v-model:value=\\\"bookedAmount\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:min=\\\"0\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:allowEmpty=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnumberType=\\\"int\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:label=\\\"$tc('novalnet-payment.settingForm.extension.zeroAmountTitle')\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:helpText=\\\"$tc('novalnet-payment.settingForm.extension.zeroAmountDescription')\\\">\\n\\t\\t\\t\\t\\t\\t\\t</sw-number-field>\\n\\t\\t\\t\\t\\t\\t</sw-container>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</template>\\n\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t{% block novalnet_payment_order_zero_amount_modal_actions %}\\n\\t\\t\\t\\t<template #modal-footer>\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_zero_amount_modal_confirm %}\\n\\t\\t\\t\\t\\t\\t<sw-button secondary slim variant=\\\"primary\\\" :disabled=\\\"disable\\\" :square=\\\"false\\\" :block=\\\"false\\\" :isLoading=\\\"false\\\" @click=\\\"novalnetBookAmount\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.bookButton') }}\\n\\t\\t\\t\\t\\t\\t</sw-button>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</template>\\n\\t\\t\\t{% endblock %}\\n    </sw-modal>\\n{% endblock %}\\n\";","import template from './novalnet-payment-instalment-refund-modal.html.twig';\n\nconst { Component, Mixin } = Shopware;\nconst { currency } = Shopware.Utils.format;\n\nComponent.register('novalnet-payment-instalment-refund-modal', {\n    template,\n\n    props: {\n        cancelType: {\n            type: Number,\n            required: true\n        },\n        order: {\n            type: Object,\n            required: true\n        }\n    },\n\n    inject: [\n        'NovalPaymentApiCredentialsService',\n        'repositoryFactory'\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('sw-inline-snippet')\n    ],\n\n    data() {\n        return {\n            reason: '',\n            disable: false,\n        };\n    },\n\n    methods: {\n\n\t\tcloseModal() {\n            this.$emit('modal-close');\n        },\n\n        novalnetInstalmentCancel()\n        {\n            const orderNumber = this.order.orderNumber;\n            const cancelType  = this.cancelType;\n\t\t\tthis.disable = true;\n\t\t\t\n            this.NovalPaymentApiCredentialsService.instalmentCancel(\n                orderNumber,\n                cancelType,\n            ).then((response) => {\n\n\t\t\t\tif(\tresponse.result != undefined && response.result != null && response.result != '')\n\t\t\t\t{\n\t\t\t\t\tif(response.result.status != undefined && response.result.status != null && response.result.status != '' && response.result.status == 'SUCCESS')\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.extension.instalmentSuccessMsg')\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if(response.result.status_text != undefined && response.result.status_text != null && response.result.status_text != '') {\n\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: response.result.status_text,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.failureMessage')\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.failureMessage')\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.$emit('modal-close');\n                setTimeout(this.$router.go, 3000);\n            }).catch((errorResponse) => {\n                    this.createNotificationError({\n                        message: `${errorResponse.title}: ${errorResponse.message}`,\n                        autoClose: false\n                    });\n                    this.$emit('modal-close');\n            });\n\t\t},\n\t}\n});\n","export default \"{% block novalnet_payment_order_refund_modal %}\\n    <sw-modal :title=\\\"$tc('novalnet-payment.settingForm.extension.instalmentCancelLabel')\\\"\\n              @modal-close=\\\"closeModal\\\">\\n\\n\\t\\t\\t{% block novalnet_payment_order_refund_modal_content %}\\n\\t\\t\\t\\t<template #default>\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_refund_modal_content_info_text %}\\n                        <sw-container columns=\\\"1fr\\\"\\n                                      gap=\\\"0px 30px\\\">\\n                            <div>\\n                                {{ $tc('novalnet-payment.settingForm.extension.instalmentCancelMessage') }}\\n                            </div>\\n                        </sw-container>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</template>\\n\\t\\t\\t{% endblock %}\\n\\n\\t\\t\\t{% block novalnet_payment_order_refund_modal_actions %}\\n\\t\\t\\t\\t<template #modal-footer>\\n\\n\\t\\t\\t\\t\\t{% block novalnet_payment_order_refund_modal_confirm %}\\n\\t\\t\\t\\t\\t\\t<sw-button secondary slim variant=\\\"primary\\\" :disabled=\\\"disable\\\" :square=\\\"false\\\" :block=\\\"false\\\" :isLoading=\\\"false\\\" @click=\\\"novalnetInstalmentCancel\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.confirmLabel') }}\\n\\t\\t\\t\\t\\t\\t</sw-button>\\n\\t\\t\\t\\t\\t{% endblock %}\\n\\t\\t\\t\\t</template>\\n\\t\\t\\t{% endblock %}\\n    </sw-modal>\\n{% endblock %}\\n\";","import template from './novalnet-payment-manage-transaction-modal.html.twig';\n\nconst { Component, Mixin } = Shopware;\nconst { currency } = Shopware.Utils.format;\n\nComponent.register('novalnet-payment-manage-transaction-modal', {\n    template,\n\n    props: {\n        status: {\n            type: Number,\n            required: true\n        },\n        order: {\n            type: Object,\n            required: true\n        }\n    },\n\n    inject: [\n        'NovalPaymentApiCredentialsService',\n        'repositoryFactory'\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('sw-inline-snippet')\n    ],\n\n    data() {\n        return {\n            confirm: true,\n            cancel: false,\n            disable: false\n        };\n    },\n\n    methods: {\n\n\t\tcloseModal() {\n            this.$emit('modal-close');\n        },\n\n\t\tnovalnetOnhold()\n        {\n\t\t\tlet status\t= this.status;\n\t\t\tconst orderNumber\t= this.order.orderNumber;\n\n\t\t\tif( status == '' || status == undefined )\n\t\t\t{\n\t\t\t\tthis.createNotificationError({\n\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.extension.onholdLabel')\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.disable = true;\n\n\t\t\tthis.NovalPaymentApiCredentialsService.managePayment(\n                orderNumber,\n                status\n            ).then((response) => {\n\n\t\t\t\tif(\tresponse.result != undefined && response.result != null && response.result != '')\n\t\t\t\t{\n\t\t\t\t\tif(response.result.status != undefined && response.result.status != null && response.result.status != '' && response.result.status == 'SUCCESS')\n\t\t\t\t\t{\n\t\t\t\t\t\tif(status == '100') {\n\t\t\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.extension.onholdSuccess')\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else if(status == '103') {\n\t\t\t\t\t\t\tthis.createNotificationSuccess({\n\t\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.extension.onholdCancel')\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if(response.result.status_text != undefined && response.result.status_text != null && response.result.status_text != '') {\n\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: response.result.status_text,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.createNotificationError({\n\t\t\t\t\t\t\tmessage: this.$tc('novalnet-payment.settingForm.failureMessage')\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n                this.$emit('modal-close');\n                setTimeout(this.$router.go, 3000);\n            }).catch((errorResponse) => {\n                    this.createNotificationError({\n                        message: `${errorResponse.title}: ${errorResponse.message}`,\n                        autoClose: false\n                    });\n                    this.$emit('modal-close');\n            });\n\t\t}\n\t}\n});\n","export default \"{% block novalnet_payment_order_manage_modal %}\\n    <sw-modal :title=\\\"$tc('novalnet-payment.settingForm.extension.Managetitle')\\\"\\n              @modal-close=\\\"closeModal\\\">\\n\\n        {% block novalnet_payment_order_manage_modal_content %}\\n            <template #default>\\n\\n                {% block novalnet_payment_order_manage_modal_content_info_text %}\\n                    <sw-container columns=\\\"1fr\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tgap=\\\"0px 30px\\\">\\n\\t\\t\\t\\t\\t\\t<div v-if=\\\"status == 100\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.confirmMessage') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div v-if=\\\"status == 103\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.cancelMessage') }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</sw-container>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block novalnet_payment_order_manage_modal_actions %}\\n            <template #modal-footer>\\n\\n                {% block novalnet_payment_order_manage_modal_confirm %}\\n                    <sw-button secondary slim variant=\\\"primary\\\" :disabled=\\\"disable\\\" :square=\\\"false\\\" :block=\\\"false\\\" :isLoading=\\\"false\\\" @click=\\\"novalnetOnhold\\\">\\n\\t\\t\\t\\t\\t\\t{{ $tc('novalnet-payment.settingForm.extension.confirmLabel') }}\\n\\t\\t\\t\\t\\t</sw-button>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n    </sw-modal>\\n{% endblock %}\\n\";","import './acl';\nimport './page/novalnet-payment-settings';\nimport './components/novalnet-payment-settings-icon';\nimport './components/novalnet-payment-credentials';\nimport './components/novalnet-payment-configuration';\nimport './extension/sw-order/view/sw-order-detail-details';\nimport './extension/sw-order/view/novalnet-payment-refund-modal';\nimport './extension/sw-order/view/novalnet-payment-book-amount-modal';\nimport './extension/sw-order/view/novalnet-payment-instalment-refund-modal';\nimport './extension/sw-order/view/novalnet-payment-manage-transaction-modal';\n\nimport deDE from './snippet/de_DE.json';\nimport enGB from './snippet/en_GB.json';\n\nconst { Module } = Shopware;\n\nModule.register('novalnet-payment', {\n    type: 'plugin',\n    name: 'NovalnetPayment',\n    title: 'novalnet-payment.module.title',\n    description: 'novalnet-payment.module.description',\n    version: '1.0.0',\n    targetVersion: '1.0.0',\n\n    snippets: {\n        'de-DE': deDE,\n        'en-GB': enGB\n    },\n    \n    routes: {\n        index: {\n            component: 'novalnet-payment-settings',\n            path: 'index',\n            meta: {\n                parentPath: 'sw.settings.index',\n                privilege: 'novalnet_payment.viewer',\n            }\n        },\n        detail: {\n            component: 'novalnet-payment-settings',\n            path: 'settings',\n            redirect: {\n                name: 'novalnet.payment.credentials'\n            },\n            children: {\n\t\t\t\tcredentials: {\n\t\t\t\t\tcomponent: 'novalnet-payment-credentials',\n\t\t\t\t\tpath: 'credentials',\n\t\t\t\t\tmeta: {\n\t\t\t\t\t\tparentPath: 'sw.settings.index',\n\t\t\t\t\t\tprivilege: 'novalnet_payment.viewer',\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tconfiguration: {\n\t\t\t\t\tcomponent: 'novalnet-payment-configuration',\n\t\t\t\t\tpath: 'configuration',\n\t\t\t\t\tmeta: {\n\t\t\t\t\t\tparentPath: 'sw.settings.index',\n\t\t\t\t\t\tprivilege: 'novalnet_payment.viewer',\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n    },\n    \n    settingsItem: {\n        group: 'plugins',\n        to: 'novalnet.payment.detail.credentials',\n        iconComponent: 'novalnet-payment-settings-icon',\n        backgroundEnabled: true,\n        privilege: 'novalnet_payment.viewer'\n    }\n});\n","const ApiService = Shopware.Classes.ApiService;\n\nclass NovalPaymentApiCredentialsService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'novalnet-payment') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n\n    validateApiCredentials(clientId, accessKey) {\n        return this.httpClient\n            .post(\n                `_action/${this.getApiBasePath()}/validate-api-credentials`,\n                {\n\t\t\t\t\tclientId,\n\t\t\t\t\taccessKey\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\theaders: this.getBasicHeaders()\n\t\t\t\t}\n            )\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n    \n    refundPayment(orderNumber, refundAmount, reason, instalmentCycleTid) {\n        const apiRoute = `_action/${this.getApiBasePath()}/refund-payment`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n\t\t\t\torderNumber: orderNumber,\n                refundAmount: refundAmount,\n                reason: reason,\n                instalmentCycleTid: instalmentCycleTid,\n            },\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n    \n    instalmentCancel(orderNumber, cancelType) {\n        const apiRoute = `_action/${this.getApiBasePath()}/instalment-cancel`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n\t\t\t\torderNumber: orderNumber,\n                cancelType: cancelType,\n            },\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n    \n    BookOrderAmount(orderId, bookedAmount) {\n        const apiRoute = `_action/${this.getApiBasePath()}/book-amount`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n\t\t\t\torderId: orderId,\n                bookedAmount: bookedAmount\n            },\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n    \n    managePayment(orderNumber, status) {\n        const apiRoute = `_action/${this.getApiBasePath()}/manage-payment`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n\t\t\t\torderNumber: orderNumber,\n                status: status,                \n            },\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n    \n    getNovalnetAmount(orderNumber) {\n        const apiRoute = `_action/${this.getApiBasePath()}/transaction-amount`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n\t\t\t\torderNumber: orderNumber,\n            },\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n    \n    configureWebhookUrl(url, productActivationKey, paymentAccessKey) {\n        const apiRoute = `_action/${this.getApiBasePath()}/webhook-url-configure`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n\t\t\t\turl: url,\n\t\t\t\tproductActivationKey: productActivationKey,\n\t\t\t\tpaymentAccessKey: paymentAccessKey\n            },\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport default NovalPaymentApiCredentialsService;\n","import NovalPaymentApiCredentialsService\n    from '../../src/core/service/api/novalnet-payment-api-credentials.service';\n\nconst { Application } = Shopware;\n\nApplication.addServiceProvider('NovalPaymentApiCredentialsService', (container) => {\n    const initContainer = Application.getContainer('init');\n\n    return new NovalPaymentApiCredentialsService(initContainer.httpClient, container.loginService);\n});\n\n"],"names":["Shopware","Service","addPrivilegeMappingEntry","category","parent","key","roles","viewer","privileges","dependencies","editor","creator","deleter","content","__esModule","default","module","id","locals","exports","add","listToStyles","parentId","list","styles","newStyles","i","length","item","part","css","media","sourceMap","parts","push","hasDocument","document","DEBUG","stylesInDom","head","getElementsByTagName","singletonElement","singletonCounter","isProduction","noop","options","ssrIdKey","isOldIE","navigator","test","userAgent","toLowerCase","addStylesClient","_isProduction","_options","addStylesToDom","newList","mayRemove","domStyle","refs","j","addStyle","createStyleElement","styleElement","createElement","type","appendChild","obj","update","remove","querySelector","parentNode","removeChild","styleIndex","applyToSingletonTag","bind","applyToTag","newObj","replaceText","textStore","index","replacement","filter","Boolean","join","styleSheet","cssText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","ssrId","sources","btoa","unescape","encodeURIComponent","JSON","stringify","firstChild","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","p","window","__sw__","assetPath","Component","Mixin","Defaults","Criteria","Data","register","template","mixins","getByName","inject","data","isLoading","isSaveSuccessful","clientIdFilled","clientSecretFilled","config","salesChannels","computed","salesChannelRepository","repositoryFactory","create","watch","handler","configData","defaultConfig","$refs","configComponent","allConfigs","null","selectedSalesChannelId","$emit","deep","metaInfo","title","$createTitle","created","createdComponent","methods","criteria","addFilter","equalsAny","storefrontSalesChannelTypeId","apiSalesChannelTypeId","search","Context","api","then","res","translated","name","$tc","finally","onSave","clientId","getConfigValue","accessKey","replace","createNotificationError","message","checkBackendConfiguration","field","NovalPaymentApiCredentialsService","validateApiCredentials","response","serverResponse","status","result","status_code","status_text","tariffResponse","forEach","tariff","merchant","client_key","save","acl","can","cacheApiService","clear","catch","createNotificationSuccess","isTestSuccessful","assetFilter","Filter","props","actualConfigData","required","shouldDisable","projectMode","isRequested","showMessage","buttonLoad","tariffId","tariffOptions","NovalnetPaymentCallBackUrl","generatedUrl","location","protocol","host","pathname","split","generalInformation","installationInformation","updated","checkTextFieldInheritance","value","checkBoolFieldInheritance","onCheckApi","event","target","apiActivationKey","paymentAccessKey","autoClose","label","test_mode","configureWebhookUrl","productActivationKey","selected","paypalInformation","sellerNamePlaceHolder","onholdOptions","onHoldZeroOptions","displayFieldOptions","buttonThemeOptions","buttonGpayThemeOptions","buttonTypeOptions","buttonGpayTypeOptions","instalmentOptions","cycles","getInheritValue","Utils","currency","format","override","orderId","String","displayAmount","displayPaidAmount","refundedAmount","InstalmentInfo","novalnetComments","isNovalnetPayment","refundModalVisible","confirmModalVisible","zeroAmountVisible","cancelModalVisible","canInstalmentAllCancel","canInstalmentRemainCancel","instalmentRefundModalVisible","canCaptureVoid","canRefund","canZeroAmountBooking","canInstalmentCancel","canInstalmentShow","payLater","instalmentPayments","onholdStatus","getInstalmentColums","property","dataIndex","width","visible","dateFilter","setNovalnetPayment","orderRepository","orderCriteria","addAssociation","equals","order","searchResult","first","isNovalnet","comments","translation","transactions","sort","a","b","Date","createdAt","orderTransaction","customFields","novalnet_comments","stateMachineState","price","totalPrice","shortName","getNovalnetAmount","orderNumber","payment","refundableAmount","Number","amount","orderAmount","Math","round","paidAmount","additionalDetails","parse","gatewayStatus","includes","paymentType","cancelType","InstalmentDetails","counter","values","cycleDate","reference","refundAmount","errorResponse","immediate","novalnetPayment","showConfirmModal","showRefundModal","closeModals","showInstalmentAllCancelModal","showInstalmentRemainCancelModal","showCancelModal","showZeroAmountBlock","reloadPaymentDetails","$nextTick","instalmentRefund","totalAmount","showInstalmentCancelModal","disableInstalmentRefund","reason","disable","closeModal","novalnetRefund","refundPayment","setTimeout","$router","go","bookedAmount","novalnetBookAmount","BookOrderAmount","novalnetInstalmentCancel","instalmentCancel","confirm","cancel","novalnetOnhold","managePayment","Module","description","version","targetVersion","snippets","deDE","enGB","routes","component","path","meta","parentPath","privilege","detail","redirect","children","credentials","configuration","settingsItem","group","to","iconComponent","backgroundEnabled","ApiService","Classes","constructor","httpClient","loginService","apiEndpoint","post","getApiBasePath","headers","getBasicHeaders","handleResponse","instalmentCycleTid","apiRoute","url","Application","addServiceProvider","initContainer","getContainer","container"],"sourceRoot":""}